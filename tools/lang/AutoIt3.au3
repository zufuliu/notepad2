; 3.3.16.1 https://www.autoitscript.com/site/autoit/
; https://www.autoitscript.com/autoit3/docs/

;! keywords			===========================================================
; https://www.autoitscript.com/autoit3/docs/keywords.htm
And
ByRef
Const ContinueCase ContinueLoop
Default Dim
Do
Until
If Then
	ElseIf Then
	Else
EndIf
Enum Exit ExitLoop
False
For In Step
Next
Func
EndFunc
Global
Local
Not Null
Or
ReDim Return
Select
	Case
EndSelect
Static
Switch
	Case To
	Case Else
EndSwitch
True
Volatile
With
EndWith
While
Wend

;! functions		===========================================================
; Environment
ClipGet()
ClipPut("value")
EnvGet("envvariable")
EnvSet("envvariable" [, "value"])
EnvUpdate()
MemGetStats()
#Region ; File, Directory and Disk
ConsoleRead([peek = False [, binary = False]])
ConsoleWrite("data")
ConsoleWriteError("data")
DirCopy("source dir", "dest dir" [, flag = 0])
DirCreate("path")
DirGetSize("path" [, flag = 0])
DirMove("source dir", "dest dir" [, flag = 0])
DirRemove("path" [, recurse = 0])
DriveGetDrive("type")
DriveGetFileSystem("path")
DriveGetLabel("path")
DriveGetSerial("path")
DriveGetType("path" [, operation = 1])
DriveMapAdd("device", "remote share" [, flags = 0 [, "user" [, "password"]]])
DriveMapDel("drive")
DriveMapGet("device")
DriveSetLabel("path", "label")
DriveSpaceFree("path")
DriveSpaceTotal("path")
DriveStatus("path")
FileChangeDir("path")
FileClose("filehandle")
FileCopy("source", "dest" [, flag = 0])
FileCreateNTFSLink("source", "hardlink" [, flag = 0])
FileCreateShortcut("file", "lnk" [, "workdir" [, "args" [, "desc" [, "icon" [, "hotkey" [, icon number [, state]]]]]]])
FileDelete("filename")
FileExists("path")
FileFindFirstFile("filename")
FileFindNextFile(search [, flag = 0])
FileFlush("filehandle")
FileGetAttrib("filename")
FileGetEncoding("filehandle/filename" [, mode = 1])
FileGetLongName("filename" [, flag = 0])
FileGetPos("filehandle")
FileGetShortcut("lnk")
FileGetShortName("filename" [, flag = 0])
FileGetSize("filename")
FileGetTime("filename" [, option = 0 [, format = 0]])
FileGetVersion("filename" [, "stringname"])
FileInstall("source", "dest" [, flag = 0])
FileMove("source", "dest" [, flag = 0])
FileOpen("filename" [, mode = 0])
FileOpenDialog("title", "init dir", "filter" [, options = 0 [, "default name" [, hwnd]]])
FileRead("filehandle/filename" [, count])
FileReadLine("filehandle/filename" [, line = 1])
FileReadToArray("filehandle/filename")
FileRecycle("source")
FileRecycleEmpty(["source"])
FileSaveDialog("title", "init dir", "filter" [, options = 0 [, "default name" [, hwnd]]])
FileSelectFolder("dialog text", "root dir" [, flag = 0 [, "initial dir" [, hwnd]]])
FileSetAttrib("file pattern", "+-RASHNOT" [, recurse = 0])
FileSetEnd("filehandle")
FileSetPos("filehandle", offset, origin)
FileSetTime("file pattern", "time" [, type = 0 [, recurse = 0]])
FileWrite("filehandle/filename", "text/data")
FileWriteLine("filehandle/filename", "line")
IniDelete("filename", "section" [, "key"])
IniRead("filename", "section", "key", "default")
IniReadSection("filename", "section")
IniReadSectionNames("filename")
IniRenameSection("filename", "section", "new section" [, flag = 0])
IniWrite("filename", "section", "key", "value")
IniWriteSection("filename", "section", "data" [, index = 1])
#EndRegion
; Graphic and Sound
Beep([Frequency = 500 [, Duration = 1000]])
PixelChecksum(left, top, right, bottom [, step = 1 [, hwnd [, mode = 0]]])
PixelGetColor(x, y [, hwnd])
PixelSearch(left, top, right, bottom, color [, shade-variation = 0 [, step = 1 [, hwnd]]])
SoundPlay("filename" [, wait = 0])
SoundSetWaveVolume(percent)
#Region ; GUI
GUICreate("title" [, width [, height [, left = -1 [, top = -1 [, style = -1 [, exStyle = -1 [, parent = 0]]]]]]])
; GUI Control creation
GUICtrlCreateAvi(filename, subfileid, left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateButton("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateCheckbox("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateCombo("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateContextMenu([controlID])
GUICtrlCreateDate("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateDummy()
GUICtrlCreateEdit("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateGraphic(left, top [, width [, height [, style]]])
GUICtrlCreateGroup("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateIcon(filename, iconName, left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateInput("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateLabel("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateList("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateListView("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateListViewItem("text", listviewID)
GUICtrlCreateMenu("submenutext" [, menuID = -1 [, menuentry = -1]])
GUICtrlCreateMenuItem("text", menuID [, menuentry = -1 [, menuradioitem = 0]])
GUICtrlCreateMonthCal("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateObj(ObjectVar, left, top [, width [, height]])
GUICtrlCreatePic(filename, left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateProgress(left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateRadio("text", left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateSlider(left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateTab(left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateTabItem("text")
GUICtrlCreateTreeView(left, top [, width [, height [, style = -1 [, exStyle = -1]]]])
GUICtrlCreateTreeViewItem("text", treeviewID)
GUICtrlCreateUpdown(inputcontrolID [, style = -1])
GUICtrlDelete(controlID)
; GUI Control update
GUICtrlRegisterListViewSort(controlID, "function")
GUICtrlSetBkColor(controlID, backgroundcolor)
GUICtrlSetColor(controlID, textcolor)
GUICtrlSetCursor(controlID, cursorID)
GUICtrlSetData(controlID, data [, default])
GUICtrlSetDefBkColor(defbkcolor [, winhandle])
GUICtrlSetDefColor(deftextcolor [, winhandle])
GUICtrlSetFont(controlID, size [, weight [, attribute [, fontname [, quality]]]])
GUICtrlSetGraphic(controlID, type [, par1 [, ... par6]])
GUICtrlSetImage(controlID, filename [, iconname [, icontype]])
GUICtrlSetLimit(controlID, max [, min = 0])
GUICtrlSetOnEvent(controlID, "function")
GUICtrlSetPos(controlID, left [, top [, width [, height]]])
GUICtrlSetResizing(controlID, resizing)
GUICtrlSetState(controlID, state)
GUICtrlSetStyle(controlID, style [, exStyle])
GUICtrlSetTip(controlID, tiptext [, "title" [, icon [, options]]])
; GUI set parameters
GUISetAccelerators(accelerators [, winhandle])
GUISetBkColor(background [, winhandle])
GUISetCoord(left, top [, width [, height [, winhandle]]])
GUISetCursor([cursorID [, override = 0 [, winhandle]]])
GUISetFont(size [, weight [, attribute [, fontname [, winhandle [, quality]]]]])
GUISetHelp(helpfile [, winhandle])
GUISetIcon(iconfile [, iconID [, winhandle]])
GUISetOnEvent(specialID, "function" [, winhandle])
GUISetState([flag [, winhandle]])
GUISetStyle(Style [, ExStyle [, winhandle]])

GUICtrlGetHandle(controlID)
GUICtrlGetState(controlID)
GUICtrlRead(controlID [, advanced = 0])
GUICtrlRecvMsg(controlID , msg [, wParam [, lParamType]])
GUICtrlSendMsg(controlID, msg, wParam, lParam)
GUICtrlSendToDummy(controlID [, state])
GUIDelete([winhandle])
GUIGetCursorInfo([winhandle])
GUIGetMsg([advanced = 0])
GUIGetStyle([winhandle])
GUIRegisterMsg(msgID, "function")
GUIStartGroup([winhandle])
GUISwitch(winhandle [, tabitemID])
#EndRegion
; Keyboard
HotKeySet("key" [, "function"])
Send("keys" [, flag = 0])
SendKeepActive("title" [, "text"])
; Map
MapAppend(map, value)
MapExists(map, key)
MapKeys(map)
MapRemove(map, key)
#Region ; Math
Abs(expression)
ACos(expression)
ASin(expression)
ATan(expression)
BitAND(value1, value2 [, value n])
BitNOT(value)
BitOR(value1, value2 [, value n])
BitRotate(value [, shift = 1 [, size = "W"]])
BitShift(value, shift)
BitXOR(value1, value2 [, value n])
Ceiling(expression)
Cos(expression)
Exp(expression)
Floor(expression)
Log(expression)
Mod(value1, value2)
Random([Min = 0 [, Max = 1 [, Flag = 0]]])
Round(expression [, decimalplaces])
Sin(expression)
Sqrt(expression)
SRandom(Seed)
Tan(expression)
#EndRegion
#Region ; Message Boxes and Dialogs
InputBox("title", "prompt" [, "default" [, "password char" [, width = -1 [, height = -1 [, left = Default [, top = Default [, timeout = 0 [, hwnd]]]]]]]])
MsgBox(flag, "title", "text" [, timeout = 0 [, hwnd]])
ProgressOff()
ProgressOn("title", "maintext" [, "subtext" [, x pos [, y pos [, opt]]]])
ProgressSet(percent [, "subtext" [, "maintext"]])
SplashImageOn("title", "file" [, width [, height [, x pos [, y pos [, opt]]]]])
SplashOff()
SplashTextOn("title", "text" [, w = 500 [, h = 400 [, x pos [, y pos [, opt = 0 [, "fontname" [, fontsz = 12 [, fontwt]]]]]]]])
ToolTip("text" [, x [, y [, "title" [, icon = 0 [, options]]]]])
#EndRegion
#Region ; Misc
AdlibRegister("function" [, time = 250])
AdlibUnRegister(["function"])
AutoItSetOption("option" [, param])
AutoItWinGetTitle()
AutoItWinSetTitle("newtitle")
BlockInput(flag)
Break(mode)
Call("function" [, param_1 [, param_2 [, param_N]]])
CDTray("drive", "status")
Execute(string)
OnAutoItExitRegister("function")
OnAutoItExitUnRegister("function")
Opt("option" [, param])
SetError(code [, extended = 0 [, return value]])
SetExtended(code [, return value])
VarGetType(expression)
#EndRegion
; Mouse
MouseClick("button" [, x, y [, clicks = 1 [, speed = 10]]])
MouseClickDrag("button", x1, y1, x2, y2 [, speed = 10])
MouseDown("button")
MouseGetCursor()
MouseGetPos([dimension])
MouseMove(x, y [, speed = 10])
MouseUp("button")
MouseWheel("direction" [, clicks = 1])
#Region ; Network
FtpSetProxy(mode = 0 [, "proxy:port" [, "username" [, "password"]]])
HttpSetProxy(mode = 0 [, "proxy:port" [, "username" [, "password"]]])
HttpSetUserAgent("user agent")
InetClose(handle)
InetGet("URL", "filename" [, options = 0 [, background = 0]])
InetGetInfo([handle [, index = -1]])
InetGetSize("URL" [, options = 0])
InetRead("URL" [, options = 0])
Ping("address/hostname" [, timeout = 4000])
TCPAccept(mainsocket)
TCPCloseSocket(socket)
TCPConnect(IPAddr, port)
TCPListen(IPAddr, port [, MaxPendingConnection])
TCPNameToIP(name)
TCPRecv(mainsocket, maxlen [, flag = 0])
TCPSend(mainsocket, data)
TCPShutdown()
UDPShutdown()
TCPStartup()
UDPStartup()
UDPBind(IPAddr, port)
UDPCloseSocket(socketarray)
UDPOpen(IPAddr, port [, flag = 0])
UDPRecv(socketarray, maxlen [, flag = 0])
UDPSend(socketarray, data)
#EndRegion
; Obj/COM
ObjCreate("classname" [, "servername" [, "username" [, "password"]]])
ObjCreateInterface("CLSID" , "IID" [, "interface_description",[flag = True]])
ObjEvent($ObjectVar, "functionprefix" [, "interface name"])
ObjEvent("AutoIt.Error" [, "function"])
ObjGet("filename" [, "classname" [, instance]])
ObjName($Objectvariable [, Flag = 1])
#Region ; Process
DllCall("dll", "return type", "function" [, type1, param1 [, type n, param n]])
DllCallAddress("return type", address [, type1, param1 [, type n, param n]])
DllCallbackFree(handle)
DllCallbackGetPtr(handle)
DllCallbackRegister("function", "return type", "params")
DllClose(dllhandle)
DllOpen(filename)
DllStructCreate(Struct [, Pointer])
DllStructGetData(Struct, Element [, index = Default])
DllStructGetPtr(Struct [, Element])
DllStructGetSize(Struct)
DllStructSetData(Struct, Element, value [, index])
ProcessClose("process")
ProcessExists("process")
ProcessGetStats(["process" [, type = 0]])
ProcessList(["name"])
ProcessSetPriority("process", priority)
ProcessWait("process" [, timeout = 0])
ProcessWaitClose("process" [, timeout = 0])
Run("program" [, "workingdir" [, show_flag [, opt_flag]]])
RunAs("username", "domain", "password", logon_flag, "program" [, "workingdir" [, show_flag [, opt_flag]]])
RunAsWait("username", "domain", "password", logon_flag, "program" [, "workingdir" [, show_flag [, opt_flag]]])
RunWait("program" [, "workingdir" [, show_flag [, opt_flag]]])
ShellExecute("filename" [, "parameters" [, "workingdir" [, "verb" [, showflag]]]])
ShellExecuteWait("filename" [, "parameters" [, "workingdir" [, "verb" [, showflag]]]])
Shutdown(code)
StderrRead(process_id [, peek = False [, binary = False]])
StdinWrite(process_id [, data])
StdioClose(process_id)
StdoutRead(process_id [, peek = False [, binary = False]])
#EndRegion
; Registry
RegDelete("keyname" [, "valuename"])
RegEnumKey("keyname", instance)
RegEnumVal("keyname", instance)
RegRead("keyname" [, "valuename"])
RegWrite("keyname" [, "valuename", "type", value])
#Region ; String
StringAddCR("string")
StringCompare("string1", "string2" [, casesense = 0])
StringFormat("format control" [, var1 [, ... var32]])
StringFromASCIIArray(array,[start = 0 [, end = -1 [, encoding = 0]]])
StringInStr("string", "substring" [, casesense = 0 [, occurrence = 1 [, start = 1 [, count]]]])
StringIsAlNum("string")
StringIsAlpha("string")
StringIsASCII("string")
StringIsDigit("string")
StringIsFloat("string")
StringIsInt("string")
StringIsLower("string")
StringIsSpace("string")
StringIsUpper("string")
StringIsXDigit("string")
StringLeft("string", count)
StringLen("string")
StringLower("string")
StringMid("string", start [, count = -1])
StringRegExp("test", "pattern" [, flag = 0 [, offset = 1]])
StringRegExpReplace("test", "pattern", "replace" [, count = 0])
StringReplace("string", "searchstring/start", "replacestring" [, occurrence = 0 [, casesense = 0]])
StringReverse("string" [, flag = 0])
StringRight("string", count)
StringSplit("string", "delimiters" [, flag = 0])
StringStripCR("string")
StringStripWS("string", flag)
StringToASCIIArray("string",[start = 0 [, end [, encoding = 0]]])
StringTrimLeft("string", count)
StringTrimRight("string", count)
StringUpper("string")
#EndRegion
; Timer and Delay
Sleep(delay)
TimerDiff(handle)
TimerInit()
#Region ; Tray
TrayCreateItem("text" [, menuID = -1 [, menuentry = -1 [, menuradioitem = 0]]])
TrayCreateMenu("sub/menutext" [, menuID = -1 [, menuentry = -1]])
TrayGetMsg()
TrayItemDelete(controlID)
TrayItemGetHandle(controlID)
TrayItemGetState([controlID])
TrayItemGetText(controlID)
TrayItemSetOnEvent(itemID, "function")
TrayItemSetState(controlID, state)
TrayItemSetText(controlID, text)
TraySetClick(flag)
TraySetIcon([filename [, iconID]])
TraySetOnEvent(specialID, "function")
TraySetPauseIcon([filename [, iconID]])
TraySetState([flag = 1])
TraySetToolTip([text])
TrayTip("title", "text", timeout [, option = 0])
#EndRegion
#Region ; Variables and Conversions
Asc("char")
AscW("char")
Chr(ASCIIcode)
ChrW(UNICODEcode)
Assign("varname", "data" [, flag = 0])
Binary(expression)
BinaryLen(binary)
BinaryMid(binary, start [, count])
BinaryToString(expression [, flag = 1])
Dec("hex" [, flag = 0])
Eval(string)
FuncName($Functionvariable)
Hex(expression [, length])
HWnd(expression)
Int(expression [, flag = 0])
IsAdmin()
IsArray(variable)
IsBinary(expression)
IsBool(variable)
IsDeclared(expression)
IsDllStruct(variable)
IsFloat(variable)
IsFunc(expression)
IsHWnd(variable)
IsInt(variable)
IsKeyword(variable)
IsMap(variable)
IsNumber(variable)
IsObj(variable)
IsPtr(variable)
IsString(variable)
Number(expression [, flag = 0])
Ptr(expression)
String(expression)
StringToBinary(expression [, flag = 1])
UBound(Variable [, Dimension = 1])
#EndRegion
#Region ; Window
; Controls
ControlClick("title", "text", controlID [, button = "left" [, clicks = 1 [, x [, y]]]])
ControlCommand("title", "text", controlID, "command" [, "option"])
ControlDisable("title", "text", controlID)
ControlEnable("title", "text", controlID)
ControlFocus("title", "text", controlID)
ControlGetFocus("title" [, "text"])
ControlGetHandle("title", "text", controlID)
ControlGetPos("title", "text", controlID)
ControlGetText("title", "text", controlID)
ControlHide("title", "text", controlID)
ControlListView("title", "text", controlID, "command" [, option1 [, option2]])
ControlMove("title", "text", controlID, x, y [, width [, height]])
ControlSend("title", "text", controlID, "string" [, flag = 0])
ControlSetText("title", "text", controlID, "new text" [, flag = 0])
ControlShow("title", "text", controlID)
ControlTreeView("title", "text", controlID, "command" [, option1])
StatusbarGetText("title" [, "text" [, part = 1]])

WinActivate("title" [, "text"])
WinActive("title" [, "text"])
WinClose("title" [, "text"])
WinExists("title" [, "text"])
WinFlash("title" [, "text" [, flashes = 4 [, delay = 500]]])
WinGetCaretPos()
WinGetClassList("title" [, "text"])
WinGetClientSize("title" [, "text"])
WinGetHandle("title" [, "text"])
WinGetPos("title" [, "text"])
WinGetProcess("title" [, "text"])
WinGetState("title" [, "text"])
WinGetText("title" [, "text"])
WinGetTitle("title" [, "text"])
WinKill("title" [, "text"])
WinList("title" [, "text"])
WinMenuSelectItem("title", "text", "item" [, "item" [, "item" [, "item" [, "item" [, "item" [, "item"]]]]]])
WinMinimizeAll()
WinMinimizeAllUndo()
WinMove("title", "text", x, y [, width [, height [, speed]]])
WinSetOnTop("title", "text", flag)
WinSetState("title", "text", flag)
WinSetTitle("title", "text", "newtitle")
WinSetTrans("title", "text", transparency)
WinWait("title" [, "text" [, timeout = 0]])
WinWaitActive("title" [, "text" [, timeout = 0]])
WinWaitClose("title" [, "text" [, timeout = 0]])
WinWaitNotActive("title" [, "text" [, timeout = 0]])
#EndRegion

;! macros			===========================================================
; https://www.autoitscript.com/autoit3/docs/macros.htm
#Region ; AutoIt Related
@Compiled
@error
@exitCode
@exitMethod
@extended
@NumParams
@ScriptName
@ScriptDir
@ScriptFullPath
@ScriptLineNumber
@WorkingDir
@AutoItExe
@AutoItPID
@AutoItVersion
@AutoItX64
@COM_EventObj
@GUI_CtrlId
@GUI_CtrlHandle
@GUI_DragId
@GUI_DragFile
@GUI_DropId
@GUI_WinHandle
@HotKeyPressed

@SW_DISABLE
@SW_ENABLE
@SW_HIDE
@SW_LOCK
@SW_MAXIMIZE
@SW_MINIMIZE
@SW_RESTORE
@SW_SHOW
@SW_SHOWDEFAULT
@SW_SHOWMAXIMIZED
@SW_SHOWMINIMIZED
@SW_SHOWMINNOACTIVE
@SW_SHOWNA
@SW_SHOWNOACTIVATE
@SW_SHOWNORMAL
@SW_UNLOCK

@TRAY_ID
@TrayIconFlashing
@TrayIconVisible

@CR
@CRLF
@LF
@TAB
#EndRegion
#Region ; Directory
; Macros for "All Users" data
@AppDataCommonDir
@DesktopCommonDir
@DocumentsCommonDir
@FavoritesCommonDir
@ProgramsCommonDir
@StartMenuCommonDir
@StartupCommonDir
; Macros for Current User data
@AppDataDir
@LocalAppDataDir
@DesktopDir
@MyDocumentsDir
@FavoritesDir
@ProgramsDir
@StartMenuDir
@StartupDir
@UserProfileDir
; Other macros for the computer system
@HomeDrive
@HomePath
@HomeShare
@LogonDNSDomain
@LogonDomain
@LogonServer
@ProgramFilesDir
@CommonFilesDir
@WindowsDir
@SystemDir
@TempDir
@ComSpec
#EndRegion
#Region ; System Info
@CPUArch
@KBLayout
@MUILang
@OSArch
@OSLang
@OSType
@OSVersion
@OSBuild
@OSServicePack
@ComputerName
@UserName
@IPAddress1
@IPAddress2
@IPAddress3
@IPAddress4
@DesktopHeight
@DesktopWidth
@DesktopDepth
@DesktopRefresh
#EndRegion
; Time And Date
@MSEC
@SEC
@MIN
@HOUR
@MDAY
@MON
@YEAR
@WDAY
@YDAY

;! Sent keys		===========================================================
; https://www.autoitscript.com/autoit3/docs/appendix/SendKeys.htm
"{!} {#} {^} {+} {{} {}}"
"{Alt} {AltDown} {AltUp} {AppsKey} {Asc}"
"{Backspace} {Break} {Browser_Back} {Browser_Favorites} {Browser_Forward} {Browser_Home} {Browser_Refresh} {Browser_Search} {Browser_Stop} {BS}"
"{CapsLock} {CtrlDown} {CtrlUp}"
"{Del} {Delete} {Down}"
"{End} {Enter} {Esc} {Escape}"
"{F1} {F10} {F11} {F12} {F2} {F3} {F4} {F5} {F6} {F7} {F8} {F9}"
"{Home}"
"{Ins} {Insert}"
"{LAlt} {Launch_App1} {Launch_App2} {Launch_Mail} {Launch_Media} {LCtrl} {Left} {LShift} {LWin} {LWinDown} {LWinUp} "
"{Media_Next} {Media_Play_Pause} {Media_Prev} {Media_Stop}"
"{NumLock} {Numpad0} {Numpad1} {Numpad2} {Numpad3} {Numpad4} {Numpad5} {Numpad6} {Numpad7} {Numpad8} {Numpad9}"
"{NumpadAdd} {NumpadDiv} {NumpadDot} {NumpadEnter} {NumpadMult} {NumpadSub}"
"{OEM_102} "
"{Pause} {PgDn} {PgUp} {PrintScreen}"
"{RAlt} {RCtrl} {Right} {RShift} {RWin} {RWinDown} {RWinUp}"
"{ScrollLock} {ShiftDown} {ShiftUp} {Sleep} {Space}"
"{Tab}"
"{Up}"
"{Volume_Down} {Volume_Mute}{Volume_Up}"

;! directives		===========================================================
; https://www.autoitscript.com/autoit3/docs/intro/lang_directives.htm
#comments-start
#comments-end
#cs
#ce
#include
#include-once
#pragma
#NoTrayIcon
#OnAutoItStartRegister
#RequireAdmin
; AutoIt Syntax Checker (Au3Check)
; https://www.autoitscript.com/autoit3/docs/intro/au3check.htm
#forcedef
#forceref
#ignorefunc

;! Special			===========================================================
; https://www.autoitscript.com/wiki/AutoIt3Wrapper_Directives
#Region ; AutoIt3Wrapper
; AutoIt3
#AutoIt3Wrapper_Testing
#AutoIt3Wrapper_UseX64
#AutoIt3Wrapper_Version
#AutoIt3Wrapper_Run_Debug_Mode
#AutoIt3Wrapper_Autoit3Dir
#AutoIt3Wrapper_Run_SciTE_Minimized
#AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized
#AutoIt3Wrapper_Aut2exe
#AutoIt3Wrapper_AutoIt3
#AutoIt3Wrapper_Add_Constants
; Aut2exe
#AutoIt3Wrapper_Icon
#AutoIt3Wrapper_OutFile
#AutoIt3Wrapper_OutFile_Type
#AutoIt3Wrapper_OutFile_X64
#AutoIt3Wrapper_Compression
#AutoIt3Wrapper_UseUpx
#AutoIt3Wrapper_UPX_Parameters
#AutoIt3Wrapper_Change2CUI
#AutoIt3Wrapper_Compile_both
; Target Program Resource Info
#AutoIt3Wrapper_Res_Comment
#AutoIt3Wrapper_Res_Description
#AutoIt3Wrapper_Res_FileVersion
#AutoIt3Wrapper_Res_FileVersion_AutoIncrement
#AutoIt3Wrapper_Res_ProductVersion
#AutoIt3Wrapper_Res_Language
#AutoIt3Wrapper_Res_LegalCopyright
#AutoIt3Wrapper_Res_RequestedExecutionLevel
#AutoIt3Wrapper_Res_Compatibility
#AutoIt3Wrapper_Res_SaveSource
#AutoIt3Wrapper_Res_Field
#AutoIt3Wrapper_Res_Icon_Add
#AutoIt3Wrapper_Res_File_Add
; Tidy
#AutoIt3Wrapper_Run_Tidy
#AutoIt3Wrapper_Tidy_Stop_OnError
#Tidy_Parameters
; Au3Stripper
#AutoIt3Wrapper_Run_Au3Stripper
#Au3Stripper_Parameters
#Au3Stripper_Off
#Au3Stripper_On
#Au3Stripper_Ignore_Funcs
#Au3Stripper_Ignore_Variables
; Au3Check
#AutoIt3Wrapper_Run_Au3Check
#AutoIt3Wrapper_Au3Check_Parameters
#AutoIt3Wrapper_Au3check_Stop_OnWarning
#AutoIt3Wrapper_Plugin_Funcs
; Versioning
#AutoIt3Wrapper_Versioning
#AutoIt3Wrapper_Versioning_Parameters
; Run Before And After Directives
#AutoIt3Wrapper_Run_After
#AutoIt3Wrapper_Run_Before
; Conditional Directives
#AutoIt3Wrapper_Jump_To_First_Error
#AutoIt3Wrapper_If_Run
#AutoIt3Wrapper_If_Compile
#AutoIt3Wrapper_EndIf

#AutoIt3Wrapper_UseAnsi
#AutoIt3Wrapper_Run_CvsWrapper
#AutoIt3Wrapper_CvsWrapper_Parameters
#AutoIt3Wrapper_Run_Obfuscator
#Obfuscator_Ignore_Funcs
#Obfuscator_Ignore_Variables
#Obfuscator_Parameters
#EndRegion

;! user defined functions	===================================================
; https://www.autoitscript.com/autoit3/docs/libfunctions.htm
#Region ; Array
#include <Array.au3>
_Array1DToHistogram($aArray [, $iSizing = 100])
_Array2DCreate($aArray1, $aArray2)
_ArrayAdd(ByRef $aArray, $vValue [, $iStart = 0 [, $sDelim_Item = "|" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]])
_ArrayBinarySearch(Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iColumn = 0]]])
_ArrayColDelete(ByRef $aArray, $iColumn [, $bConvert = False])
_ArrayColInsert(ByRef $aArray, $iColumn)
_ArrayCombinations(Const ByRef $aArray, $iSet [, $sDelimiter = ""])
_ArrayConcatenate(ByRef $aArrayTarget, Const ByRef $aArraySource [, $iStart = 0])
_ArrayDelete(ByRef $aArray, $vRange)
_ArrayDisplay(Const ByRef $aArray [, $sTitle = "ArrayDisplay" [, $sArrayRange = "" [, $iFlags = 0 [, $vUser_Separator = Default [, $sHeader = Default [, $iDesired_Colwidth = Default]]]]]])
_ArrayExtract(Const ByRef $aArray [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $iStart_Col = -1 [, $iEnd_Col = -1]]]])
_ArrayFindAll(Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iSubItem = 0 [, $bRow = False]]]]]])
_ArrayFromString($sArrayStr [, $sDelim_Col = "|" [, $sDelim_Row = @CRLF [, $bForce2D = False [, $iStripWS = $STR_STRIPLEADING + $STR_STRIPTRAILING]]]])
_ArrayInsert(ByRef $aArray, $vRange [, $vValue = "" [, $iStart = 0 [, $sDelim_Item = "|" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]]])
_ArrayMax(Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
_ArrayMaxIndex(Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
_ArrayMin(Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
_ArrayMinIndex(Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]])
_ArrayPermute(ByRef $aArray [, $sDelimiter = ""])
_ArrayPop(ByRef $aArray)
_ArrayPush(ByRef $aArray, $vValue [, $iDirection = 0])
_ArrayReverse(ByRef $aArray [, $iStart = 0 [, $iEnd = 0]])
_ArraySearch(Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iForward = 1 [, $iSubItem = -1 [, $bRow = False]]]]]]])
_ArrayShuffle(ByRef $aArray [, $iStart_Row = 0 [, $iEnd_Row = 0 [, $iCol = -1]]])
_ArraySort(ByRef $aArray [, $iDescending = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0 [, $iPivot = 0]]]]])
_ArraySwap(Const ByRef $aArray [, $sDelim_Col = "|" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]])
_ArrayToClip(Const ByRef $aArray [, $sDelim_Col = "|" [, $iStart_Row = Default [, $iEnd_Row = Default [, $sDelim_Row = @CRLF [, $iStart_Col = Default [, $iEnd_Col = Default]]]]]])
_ArrayToString(Const ByRef $aArray [, $sDelim_Col = "|" [, $iStart_Row = Default [, $iEnd_Row = Default [, $sDelim_Row = @CRLF [, $iStart_Col = Default [, $iEnd_Col = Default]]]]]])
_ArrayTranspose(ByRef $aArray [, $bForce1D = False])
_ArrayTrim(ByRef $aArray, $iTrimNum [, $iDirection = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0]]]])
_ArrayUnique(Const ByRef $aArray [, $iColumn = 0 [, $iBase = 0 [, $iCase = 0 [, $iCount = $ARRAYUNIQUE_COUNT [, $iIntType = $ARRAYUNIQUE_AUTO]]]]])
#EndRegion
#Region ; Clipboard
#include <Clipboard.au3>
_ClipBoard_ChangeChain($hRemove, $hNewNext)
_ClipBoard_Close()
_ClipBoard_CountFormats()
_ClipBoard_Empty()
_ClipBoard_EnumFormats($iFormat)
_ClipBoard_FormatStr($iFormat)
_ClipBoard_GetData([$iFormat = 1])
_ClipBoard_GetDataEx([$iFormat = 1])
_ClipBoard_GetFormatName($iFormat)
_ClipBoard_GetOpenWindow()
_ClipBoard_GetOwner()
_ClipBoard_GetPriorityFormat($aFormats)
_ClipBoard_GetSequenceNumber()
_ClipBoard_GetViewer()
_ClipBoard_IsFormatAvailable($iFormat)
_ClipBoard_Open($hOwner)
_ClipBoard_RegisterFormat($sFormat)
_ClipBoard_SetData($vData [, $iFormat = 1])
_ClipBoard_SetDataEx(ByRef $hMemory [, $iFormat = 1])
_ClipBoard_SetViewer($hViewer)
#EndRegion
#Region ; Color
#include <Color.au3>
_ColorConvertHSLtoRGB($aArray)
_ColorConvertRGBtoHSL($aArray)
_ColorGetBlue($iColor)
_ColorGetCOLORREF($iColor)
_ColorGetGreen($iColor)
_ColorGetRed($iColor)
_ColorGetRGB($iColor)
_ColorSetCOLORREF($aColor)
_ColorSetRGB($aColor)
#EndRegion
#Region ; Crypt
#include <Crypt.au3>
_Crypt_DecryptData($vData, $vCryptKey, $iAlgID [, $bFinal = True])
_Crypt_DecryptFile($sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID)
_Crypt_DeriveKey($vPassword, $iAlgID [, $iHashPasswordID = $CALG_MD5])
_Crypt_DestroyKey($hCryptKey)
_Crypt_EncryptData($vData, $vCryptKey, $iAlgID [, $bFinal = True])
_Crypt_EncryptFile($sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID)
_Crypt_GenRandom($pBuffer, $iSize)
_Crypt_HashData($vData, $iAlgID [, $bFinal = True [, $hCryptHash = 0]])
_Crypt_HashFile($sFilePath, $iAlgID)
_Crypt_Shutdown()
_Crypt_Startup()
#EndRegion
#Region ; Date
#include <Date.au3>
_Date_Time_CompareFileTime($tFileTime1, $tFileTime2)
_Date_Time_DOSDateTimeToArray($iDosDate, $iDosTime)
_Date_Time_DOSDateTimeToFileTime($iFatDate, $iFatTime)
_Date_Time_DOSDateTimeToStr($iDosDate, $iDosTime)
_Date_Time_DOSDateToArray($iDosDate)
_Date_Time_DOSDateToStr($iDosDate)
_Date_Time_DOSTimeToArray($iDosTime)
_Date_Time_DOSTimeToStr($iDosTime)
_Date_Time_EncodeFileTime($iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]])
_Date_Time_EncodeSystemTime($iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]])
_Date_Time_FileTimeToArray(ByRef $tFileTime)
_Date_Time_FileTimeToDOSDateTime($tFileTime)
_Date_Time_FileTimeToLocalFileTime($tFileTime)
_Date_Time_FileTimeToStr(ByRef $tFileTime [, $iFmt = 0])
_Date_Time_FileTimeToSystemTime($tFileTime)
_Date_Time_GetFileTime($hFile)
_Date_Time_GetLocalTime()
_Date_Time_GetSystemTime()
_Date_Time_GetSystemTimeAdjustment()
_Date_Time_GetSystemTimeAsFileTime()
_Date_Time_GetSystemTimes()
_Date_Time_GetTickCount()
_Date_Time_GetTimeZoneInformation()
_Date_Time_LocalFileTimeToFileTime($tLocalTime)
_Date_Time_SetFileTime($hFile, $tCreateTime, $tLastAccess, $tLastWrite)
_Date_Time_SetLocalTime($tSYSTEMTIME)
_Date_Time_SetSystemTime($tSYSTEMTIME)
_Date_Time_SetSystemTimeAdjustment($iAdjustment, $bDisabled)
_Date_Time_SetTimeZoneInformation($iBias, $sStdName, $tStdDate, $iStdBias, $sDayName, $tDayDate, $iDayBias)
_Date_Time_SystemTimeToArray(ByRef $tSYSTEMTIME)
_Date_Time_SystemTimeToDateStr(ByRef $tSYSTEMTIME [, $iFmt = 0])
_Date_Time_SystemTimeToDateTimeStr(ByRef $tSYSTEMTIME [, $iFmt = 0 [, $iType = 0]])
_Date_Time_SystemTimeToFileTime($tSYSTEMTIME)
_Date_Time_SystemTimeToTimeStr(ByRef $tSYSTEMTIME)
_Date_Time_SystemTimeToTzSpecificLocalTime($tUTC [, $tTimeZone = 0])
_Date_Time_TzSpecificLocalTimeToSystemTime($tLocalTime [, $tTimeZone = 0])
_DateAdd($sType, $iNumber, $sDate)
_DateDayOfWeek($iDayNum [, $iFormat = 0])
_DateDaysInMonth($iYear, $iMonthNum)
_DateDiff($sType, $sStartDate, $sEndDate)
_DateIsLeapYear($iYear)
_DateIsValid($sDate)
_DateTimeFormat($sDate, $sType)
_DateTimeSplit($sDate, ByRef $aDatePart, ByRef $aTimePart)
_DateToDayOfWeek($iYear, $iMonth, $iDay)
_DateToDayOfWeekISO($iYear, $iMonth, $iDay)
_DateToDayValue($iYear, $iMonth, $iDay)
_DateToMonth($iMonNum [, $iFormat = 0])
_DayValueToDate($iJulianDate, ByRef $iYear, ByRef $iMonth, ByRef $iDay)
_Now()
_NowCalc()
_NowCalcDate()
_NowDate()
_NowTime([$sType = 3])
_SetDate($iDay [, $iMonth = 0 [, $iYear = 0]])
_SetTime($iHour, $iMinute [, $iSecond = 0 [, $iMSeconds = 0]])
_TicksToTime($iTicks, ByRef $iHours, ByRef $iMins, ByRef $iSecs)
_TimeToTicks([$iHours = @HOUR [, $iMins = @MIN [, $iSecs = @SEC]]])
_WeekNumberISO([$iYear = @YEAR [, $iMonth = @MON [, $iDay = @MDAY]]])
#EndRegion
#Region ; Debug
#include <Debug.au3>
_Assert($sCondition [, $bExit = True [, $iCode = 0x7FFFFFFF [, $sLine = @ScriptLineNumber]]])
_DebugArrayDisplay(Const ByRef $aArray [, $sTitle = "DebugArray" [, $sArrayRange = "" [, $iFlags = 0 [, $vUser_Separator = Default [, $sHeader = Default [, $iDesired_Colwidth = Default [, $hUser_Function = ""]]]]]]])
_DebugBugReportEnv([$iComDebug = 1 [, $bExit = False]])
_DebugCOMError([$iComDebug = 1 [, $bExit = False]])
_DebugOut($sOutput)
_DebugReport($sData [, $bLastError = False [, $bExit = False]])
_DebugReportEx($sData [, $bLastError = False [, $bExit = False]])
_DebugReportVar($sVarName, $vVar [, $bErrExt = False [, $iDebugLineNumber = @ScriptLineNumber]])
_DebugSetup([$sTitle = Default [, $bBugReportInfos = False [, $vReportType = 1 [, $sLogFile = "" [, $bTimeStamp = False]]]]])
#EndRegion
#Region ; EventLog
#include <EventLog.au3>
_EventLog__Backup($hEventLog, $sFileName)
_EventLog__Clear($hEventLog, $sFileName)
_EventLog__Close($hEventLog)
_EventLog__Count($hEventLog)
_EventLog__DeregisterSource($hEventLog)
_EventLog__Full($hEventLog)
_EventLog__Notify($hEventLog, $hEvent)
_EventLog__Oldest($hEventLog)
_EventLog__Open($sServerName, $sSourceName)
_EventLog__OpenBackup($sServerName, $sFileName)
_EventLog__Read($hEventLog [, $bRead = True [, $bForward = True [, $iOffset = 0]]])
_EventLog__RegisterSource($sServerName, $sSourceName)
_EventLog__Report($hEventLog, $iType, $iCategory, $iEventID, $sUserName, $sDesc, $aData)
#EndRegion
#Region ; Excel
#include <Excel.au3>
_Excel_BookAttach($sString [, $sMode = "FilePath" [, $oInstance = Default]])
_Excel_BookClose($oWorkbook [, $bSave = True])
_Excel_BookList([$oExcel = Default])
_Excel_BookNew($oExcel [, $iSheets = Default])
_Excel_BookOpen($oExcel, $sFilePath [, $bReadOnly = False [, $bVisible = True [, $sPassword = Default [, $sWritePassword = Default [, $bUpdateLinks = Default]]]]])
_Excel_BookOpenText($oExcel, $sFilePath [, $iStartRow = 1 [, $iDataType = Default [, $sTextQualifier = $xlTextQualifierDoubleQuote [, $bConsecutiveDelimiter = False [, $sDelimiter = "," [, $aFieldInfo = "" [, $sDecimalSeparator = Default [, $sThousandsSeparator = Default [, $bTrailingMinusNumbers = True [, $iOrigin = Default]]]]]]]]]])
_Excel_BookSave($oWorkbook)
_Excel_BookSaveAs($oWorkbook, $sFilePath [, $iFormat = $xlWorkbookDefault [, $bOverWrite = False [, $sPassword = Default [, $sWritePassword = Default [, $bReadOnlyRecommended = False]]]]])
_Excel_Close($oExcel [, $bSaveChanges = True [, $bForceClose = False]])
_Excel_ColumnToLetter($iColumn)
_Excel_ColumnToNumber($sColumn)
_Excel_ConvertFormula($oExcel, $sFormula, $iFromStyle [, $iToStyle = Default [, $iToAbsolute = Default [, $vRelativeTo = Default]]])
_Excel_Export($oExcel, $vObject, $sFileName [, $iType = $xlTypePDF [, $iQuality = $xlQualityStandard [, $bIncludeProperties = True [, $iFrom = Default [, $iTo = Default [, $bOpenAfterPublish = Default]]]]]])
_Excel_FilterGet($oWorkbook [, $vWorksheet = Default])
_Excel_FilterSet($oWorkbook, $vWorksheet, $vRange, $iField [, $sCriteria1 = Default [, $iOperator = Default [, $sCriteria2 = Default]]])
_Excel_Open([$bVisible = True [, $bDisplayAlerts = False [, $bScreenUpdating = True [, $bInteractive = True [, $bForceNew = False]]]]])
_Excel_PictureAdd($oWorkbook, $vWorksheet, $sFile, $vRangeOrLeft [, $iTop = Default [, $iWidth = Default [, $iHeight = Default [, $bKeepRatio = True]]]])
_Excel_Print($oExcel, $vObject [, $iCopies = Default [, $sPrinter = Default [, $bPreview = Default [, $iFrom = Default [, $iTo = Default [, $bPrintToFile = Default [, $bCollate = Default [, $sPrToFileName = ""]]]]]]]])
_Excel_RangeCopyPaste($oWorksheet, $vSourceRange [, $vTargetRange = Default [, $bCut = False [, $iPaste = Default [, $iOperation = Default [, $bSkipBlanks = False [, $bTranspose = False]]]]]])
_Excel_RangeDelete($oWorksheet, $vRange [, $iShift = Default [, $iEntireRowCol = Default]])
_Excel_RangeFind($oWorkbook, $sSearch [, $vRange = Default [, $iLookIn = $xlValues [, $iLookAt = $xlPart [, $bMatchcase = False]]]])
_Excel_RangeInsert($oWorksheet, $vRange [, $iShift = Default [, $iCopyOrigin = Default]])
_Excel_RangeLinkAddRemove($oWorkbook, $vWorksheet, $vRange, $sAddress [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default]]])
_Excel_RangeRead($oWorkbook [, $vWorksheet = Default [, $vRange = Default [, $iReturn = 1 [, $bForceFunc = False]]]])
_Excel_RangeReplace($oWorkbook, $vWorksheet, $vRange, $sSearch, $sReplace [, $iLookAt = $xlPart [, $bMatchcase = False]])
_Excel_RangeSort($oWorkbook, $vWorksheet, $vRange, $vKey1 [, $iOrder1 = $xlAscending [, $iSortText = $xlSortNormal [, $iHeader = $xlNo [, $bMatchcase = False [, $iOrientation = $xlSortRows [, $vKey2 = Default [, $iOrder2 = Default [, $vKey3 = Default [, $iOrder3 = Default]]]]]]]]])
_Excel_RangeValidate($oWorkbook, $vWorksheet, $vRange, $iType, $sFormula1 [, $iOperator = Default [, $sFormula2 = Default [, $bIgnoreBlank = True [, $iAlertStyle = $xlValidAlertStop [, $sErrorMessage = Default [, $sInputMessage = Default]]]]]])
_Excel_RangeWrite($oWorkbook, $vWorksheet, $vValue [, $vRange = "A1" [, $bValue = True [, $bForceFunc = False]]])
_Excel_SheetAdd($oWorkbook [, $vSheet = Default [, $bBefore = True [, $iCount = 1 [, $sName = ""]]]])
_Excel_SheetCopyMove($oSourceBook [, $vSourceSheet = Default [, $oTargetBook = $oSourceBook [, $vTargetSheet = 1 [, $bBefore = True [, $bCopy = True]]]]])
_Excel_SheetDelete($oWorkbook [, $vSheet = Default])
_Excel_SheetList($oWorkbook)
#EndRegion
#Region ; File
#include <File.au3>
_FileCountLines($sFilePath)
_FileCreate($sFilePath)
_FileListToArray($sFilePath [, $sFilter = "*" [, $iFlag = $FLTA_FILESFOLDERS [, $bReturnPath = False]]])
_FileListToArrayRec($sFilePath [, $sMask = "*" [, $iReturn = $FLTAR_FILESFOLDERS [, $iRecur = $FLTAR_NORECUR [, $iSort = $FLTAR_NOSORT [, $iReturnPath = $FLTAR_RELPATH]]]]])
_FilePrint($sFilePath [, $iShow = @SW_HIDE])
_FileReadToArray($sFilePath, ByRef $vReturn [, $iFlags = $FRTA_COUNT [, $sDelimiter = ""]])
_FileWriteFromArray($sFilePath, Const ByRef $aArray [, $iBase = Default [, $iUBound = Default [, $sDelimiter = "|"]]])
_FileWriteLog($sLogPath, $sLogMsg [, $iFlag = -1])
_FileWriteToLine($sFilePath, $iLine, $sText [, $bOverWrite = False [, $bFill = False]])
_PathFull($sRelativePath [, $sBasePath = @WorkingDir])
_PathGetRelative($sFrom, $sTo)
_PathMake($sDrive, $sDir, $sFileName, $sExtension)
_PathSplit($sFilePath, ByRef $sDrive, ByRef $sDir, ByRef $sFileName, ByRef $sExtension)
_ReplaceStringInFile($sFilePath, $sSearchString, $sReplaceString [, $iCaseSensitive = 0 [, $iOccurance = 1]])
_TempFile([$sDirectoryName = @TempDir [, $sFilePrefix = "~" [, $sFileExtension = ".tmp" [, $iRandomLength = 7]]]])
#EndRegion
#Region ; FTPEx
#include <FTPEx.au3>
_FTP_Close($hSession)
_FTP_Command($hFTPSession, $sFTPCommand [, $iFlags = $FTP_TRANSFER_TYPE_ASCII [, $iExpectResponse = 0 [, $iContext = 0]]])
_FTP_Connect($hInternetSession, $sServerName, $sUsername, $sPassword [, $iPassive = 0 [, $iServerPort = 0 [, $iService = $INTERNET_SERVICE_FTP [, $iFlags = $INTERNET_FLAG_DEFAULT [, $fuContext = 0]]]]])
_FTP_DecodeInternetStatus($iInternetStatus)
_FTP_DirCreate($hFTPSession, $sRemote)
_FTP_DirDelete($hFTPSession, $sRemote)
_FTP_DirGetCurrent($hFTPSession)
_FTP_DirPutContents($hFTPSession, $sLocalFolder, $sRemoteFolder, $bRecursivePut [, $iContext = 0])
_FTP_DirSetCurrent($hFTPSession, $sRemote)
_FTP_FileClose($hFTPFile)
_FTP_FileDelete($hFTPSession, $sRemoteFile)
_FTP_FileGet($hFTPSession, $sRemoteFile, $sLocalFile [, $bFailIfExists = False [, $iFlagsAndAttributes = 0 [, $iFlags = $FTP_TRANSFER_TYPE_UNKNOWN [, $iContext = 0]]]])
_FTP_FileGetSize($hFTPSession, $sFileName)
_FTP_FileOpen($hConnect, $sFileName [, $iAccess = $GENERIC_READ [, $iFlags = $INTERNET_FLAG_TRANSFER_BINARY [, $iContext = 0]]])
_FTP_FilePut($hFTPSession, $sLocalFile, $sRemoteFile [, $iFlags = 0 [, $iContext = 0]])
_FTP_FileRead($hFTPFile, $iNumberOfBytesToRead)
_FTP_FileRename($hFTPSession, $sExisting, $sNew)
_FTP_FileTimeLoHiToStr($iLoDWORD, $iHiDWORD [, $iFmt = 0])
_FTP_FindFileClose($hFTPFind)
_FTP_FindFileFirst($hFTPSession, $sRemotePath, ByRef $hFTPFind [, $iFlags = 0 [, $iContext = 0]])
_FTP_FindFileNext($hFTPFind)
_FTP_GetLastResponseInfo(ByRef $iError, ByRef $sMessage)
_FTP_ListToArray($hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]])
_FTP_ListToArray2D($hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]])
_FTP_ListToArrayEx($hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iFmt = 1 [, $iContext = 0]]]])
_FTP_Open($sAgent [, $iAccessType = $INTERNET_OPEN_TYPE_DIRECT [, $sProxyName = '' [, $sProxyBypass = '' [, $iFlags = 0]]]])
_FTP_ProgressDownload($hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0])
_FTP_ProgressUpload($hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0])
_FTP_SetStatusCallback($hInternetSession, $sFunctionName)
#EndRegion
#Region ; GDIPlus
#include <GDIPlus.au3>
; Activation
_GDIPlus_RectFCreate([$nX = 0 [, $nY = 0 [, $nWidth = 0 [, $nHeight = 0]]]])
_GDIPlus_Shutdown()
_GDIPlus_Startup([$sGDIPDLL = Default [, $bRetDllHandle = False]])
; ArrowCap
_GDIPlus_ArrowCapCreate($fHeight, $fWidth [, $bFilled = True])
_GDIPlus_ArrowCapDispose($hCap)
_GDIPlus_ArrowCapGetFillState($hArrowCap)
_GDIPlus_ArrowCapGetHeight($hArrowCap)
_GDIPlus_ArrowCapGetMiddleInset($hArrowCap)
_GDIPlus_ArrowCapGetWidth($hArrowCap)
_GDIPlus_ArrowCapSetFillState($hArrowCap [, $bFilled = True])
_GDIPlus_ArrowCapSetHeight($hArrowCap, $fHeight)
_GDIPlus_ArrowCapSetMiddleInset($hArrowCap, $fInset)
_GDIPlus_ArrowCapSetWidth($hArrowCap, $fWidth)
; CustomLineCap
_GDIPlus_CustomLineCapClone($hCustomLineCap)
_GDIPlus_CustomLineCapCreate($hPathFill, $hPathStroke [, $iLineCap = 0 [, $nBaseInset = 0]])
_GDIPlus_CustomLineCapDispose($hCap)
_GDIPlus_CustomLineCapGetStrokeCaps($hCustomLineCap)
_GDIPlus_CustomLineCapSetStrokeCaps($hCustomLineCap, $iStartCap, $iEndCap)
#Region ; Bitmap
_GDIPlus_BitmapApplyEffect($hBitmap, $hEffect [, $tRECT = Null])
_GDIPlus_BitmapApplyEffectEx($hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]])
_GDIPlus_BitmapCloneArea($hBitmap, $nLeft, $nTop, $nWidth, $nHeight [, $iFormat = 0x00021808])
_GDIPlus_BitmapConvertFormat($hBitmap, $iPixelFormat, $iDitherType, $iPaletteType, $tPalette [, $fAlphaThresholdPercent = 0.0])
_GDIPlus_BitmapCreateApplyEffect($hBitmap, $hEffect [, $tRECT = Null [, $tOutRECT = Null]])
_GDIPlus_BitmapCreateApplyEffectEx($hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]])
_GDIPlus_BitmapCreateDIBFromBitmap($hBitmap)
_GDIPlus_BitmapCreateFromFile($sFileName)
_GDIPlus_BitmapCreateFromGraphics($iWidth, $iHeight, $hGraphics)
_GDIPlus_BitmapCreateFromHBITMAP($hBitmap [, $hPal = 0])
_GDIPlus_BitmapCreateFromHICON($hIcon)
_GDIPlus_BitmapCreateFromHICON32($hIcon)
_GDIPlus_BitmapCreateFromMemory($dImage [, $bHBITMAP = False])
_GDIPlus_BitmapCreateFromResource($hInst, $vResourceName)
_GDIPlus_BitmapCreateFromScan0($iWidth, $iHeight [, $iPixelFormat = $GDIP_PXF32ARGB [, $iStride = 0 [, $pScan0 = 0]]])
_GDIPlus_BitmapCreateFromStream($pStream)
_GDIPlus_BitmapCreateHBITMAPFromBitmap($hBitmap [, $iARGB = 0xFF000000])
_GDIPlus_BitmapDispose($hBitmap)
_GDIPlus_BitmapGetHistogram($hBitmap, $iHistogramFormat, $iHistogramSize, $tChannel_0 [, $tChannel_1 = 0 [, $tChannel_2 = 0 [, $tChannel_3 = 0]]])
_GDIPlus_BitmapGetHistogramEx($hBitmap)
_GDIPlus_BitmapGetHistogramSize($iFormat)
_GDIPlus_BitmapGetPixel($hBitmap, $iX, $iY)
_GDIPlus_BitmapLockBits($hBitmap, $iLeft, $iTop, $iWidth, $iHeight [, $iFlags = $GDIP_ILMREAD [, $iFormat = $GDIP_PXF32RGB]])
_GDIPlus_BitmapSetPixel($hBitmap, $iX, $iY, $iARGB)
_GDIPlus_BitmapSetResolution($hBitmap, $fDpiX, $fDpiY)
_GDIPlus_BitmapUnlockBits($hBitmap, $tBitmapData)
_GDIPlus_HICONCreateFromBitmap($hBitmap)
_GDIPlus_PaletteInitialize($iEntries [, $iPaletteType = $GDIP_PaletteTypeOptimal [, $iOptimalColors = 0 [, $bUseTransparentColor = True [, $hBitmap = Null]]]])
#EndRegion
; Brush
_GDIPlus_BrushClone($hBrush)
_GDIPlus_BrushDispose($hBrush)
_GDIPlus_BrushGetType($hBrush)
; HashBrush
_GDIPlus_HatchBrushCreate([$iHatchStyle = 0 [, $iARGBForeground = 0xFFFFFFFF [, $iARGBBackground = 0xFFFFFFFF]]])
#Region ; LineBrush
_GDIPlus_LineBrushCreate($nX1, $nY1, $nX2, $nY2, $iARGBClr1, $iARGBClr2 [, $iWrapMode = 0])
_GDIPlus_LineBrushCreateFromRect($tRECTF, $iARGBClr1, $iARGBClr2 [, $iGradientMode = 0 [, $iWrapMode = 0]])
_GDIPlus_LineBrushCreateFromRectWithAngle($tRECTF, $iARGBClr1, $iARGBClr2, $fAngle [, $bIsAngleScalable = True [, $iWrapMode = 0]])
_GDIPlus_LineBrushGetColors($hLineGradientBrush)
_GDIPlus_LineBrushGetRect($hLineGradientBrush)
_GDIPlus_LineBrushMultiplyTransform($hLineGradientBrush, $hMatrix [, $iOrder = 0])
_GDIPlus_LineBrushResetTransform($hLineGradientBrush)
_GDIPlus_LineBrushSetBlend($hLineGradientBrush, $aBlends)
_GDIPlus_LineBrushSetColors($hLineGradientBrush, $iARGBStart, $iARGBEnd)
_GDIPlus_LineBrushSetGammaCorrection($hLineGradientBrush [, $bUseGammaCorrection = True])
_GDIPlus_LineBrushSetLinearBlend($hLineGradientBrush, $fFocus [, $fScale = 1])
_GDIPlus_LineBrushSetPresetBlend($hLineGradientBrush, $aInterpolations)
_GDIPlus_LineBrushSetSigmaBlend($hLineGradientBrush, $fFocus [, $fScale = 1])
_GDIPlus_LineBrushSetTransform($hLineGradientBrush, $hMatrix)
#EndRegion
; SolidBrush
_GDIPlus_BrushCreateSolid([$iARGB = 0xFF000000])
_GDIPlus_BrushGetSolidColor($hBrush)
_GDIPlus_BrushSetSolidColor($hBrush [, $iARGB = 0xFF000000])
; TextureBrush
_GDIPlus_TextureCreate($hImage [, $iWrapMode = 0])
_GDIPlus_TextureCreate2($hImage, $nX, $nY, $nWidth, $nHeight [, $iWrapMode = 0])
_GDIPlus_TextureCreateIA($hImage, $nX, $nY, $nWidth, $nHeight [, $pImageAttributes = 0])
#Region ; Effect
_GDIPlus_EffectCreate($sEffectGUID)
_GDIPlus_EffectCreateBlur([$fRadius = 10.0 [, $bExpandEdge = False]])
_GDIPlus_EffectCreateBrightnessContrast([$iBrightnessLevel = 0 [, $iContrastLevel = 0]])
_GDIPlus_EffectCreateColorBalance([$iCyanRed = 0 [, $iMagentaGreen = 0 [, $iYellowBlue = 0]]])
_GDIPlus_EffectCreateColorCurve($iAdjustment, $iChannel, $iAdjustValue)
_GDIPlus_EffectCreateColorLUT($aColorLUT)
_GDIPlus_EffectCreateColorMatrix($tColorMatrix)
_GDIPlus_EffectCreateHueSaturationLightness([$iHueLevel = 0 [, $iSaturationLevel = 0 [, $iLightnessLevel = 0]]])
_GDIPlus_EffectCreateLevels([$iHighlight = 100 [, $iMidtone = 0 [, $iShadow = 0]]])
_GDIPlus_EffectCreateRedEyeCorrection($aAreas)
_GDIPlus_EffectCreateSharpen([$fRadius = 10.0 [, $fAmount = 50.0]])
_GDIPlus_EffectCreateTint([$iHue = 0 [, $iAmount = 0]])
_GDIPlus_EffectDispose($hEffect)
_GDIPlus_EffectGetParameters($hEffect, $tEffectParameters)
_GDIPlus_EffectSetParameters($hEffect, $tEffectParameters [, $iSizeAdjust = 1])
#EndRegion
; Font
_GDIPlus_FontCreate($hFamily, $fSize [, $iStyle = 0 [, $iUnit = 3]])
_GDIPlus_FontDispose($hFont)
_GDIPlus_FontGetHeight($hFont, $hGraphics)
; FontPrivate
_GDIPlus_FontPrivateAddFont($hFontCollection, $sFontFile)
_GDIPlus_FontPrivateAddMemoryFont($hFontCollection, $tFont)
_GDIPlus_FontPrivateCollectionDispose($hFontCollection)
_GDIPlus_FontPrivateCreateCollection()
; FontFamily
_GDIPlus_FontFamilyCreate($sFamily [, $pCollection = 0])
_GDIPlus_FontFamilyCreateFromCollection($sFontName, $hFontCollection)
_GDIPlus_FontFamilyDispose($hFamily)
_GDIPlus_FontFamilyGetCellAscent($hFontFamily [, $iStyle = 0])
_GDIPlus_FontFamilyGetCellDescent($hFontFamily [, $iStyle = 0])
_GDIPlus_FontFamilyGetEmHeight($hFontFamily [, $iStyle = 0])
_GDIPlus_FontFamilyGetLineSpacing($hFontFamily [, $iStyle = 0])
#Region ; Graphics
_GDIPlus_GraphicsClear($hGraphics [, $iARGB = 0xFF000000])
_GDIPlus_GraphicsCreateFromHDC($hDC)
_GDIPlus_GraphicsCreateFromHWND($hWnd)
_GDIPlus_GraphicsDispose($hGraphics)
_GDIPlus_GraphicsDrawArc($hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0])
_GDIPlus_GraphicsDrawBezier($hGraphics, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 [, $hPen = 0])
_GDIPlus_GraphicsDrawClosedCurve($hGraphics, $aPoints [, $hPen = 0])
_GDIPlus_GraphicsDrawClosedCurve2($hGraphics, $aPoints, $nTension [, $hPen = 0])
_GDIPlus_GraphicsDrawCurve($hGraphics, $aPoints [, $hPen = 0])
_GDIPlus_GraphicsDrawCurve2($hGraphics, $aPoints, $nTension [, $hPen = 0])
_GDIPlus_GraphicsDrawEllipse($hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0])
_GDIPlus_GraphicsDrawImage($hGraphics, $hImage, $nX, $nY)
_GDIPlus_GraphicsDrawImagePointsRect($hGraphics, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight [, $hImageAttributes = 0 [, $iUnit = 2]])
_GDIPlus_GraphicsDrawImageRect($hGraphics, $hImage, $nX, $nY, $nW, $nH)
_GDIPlus_GraphicsDrawImageRectRect($hGraphics, $hImage, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight, $nDstX, $nDstY, $nDstWidth, $nDstHeight [, $pAttributes = 0 [, $iUnit = 2]])
_GDIPlus_GraphicsDrawLine($hGraphics, $nX1, $nY1, $nX2, $nY2 [, $hPen = 0])
_GDIPlus_GraphicsDrawPath($hGraphics, $hPath [, $hPen = 0])
_GDIPlus_GraphicsDrawPie($hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0])
_GDIPlus_GraphicsDrawPolygon($hGraphics, $aPoints [, $hPen = 0])
_GDIPlus_GraphicsDrawRect($hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0])
_GDIPlus_GraphicsFillClosedCurve($hGraphics, $aPoints [, $hBrush = 0])
_GDIPlus_GraphicsFillClosedCurve2($hGraphics, $aPoints, $nTension [, $hBrush = 0 [, $iFillMode = 0]])
_GDIPlus_GraphicsFillEllipse($hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0])
_GDIPlus_GraphicsFillPath($hGraphics, $hPath [, $hBrush = 0])
_GDIPlus_GraphicsFillPie($hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hBrush = 0])
_GDIPlus_GraphicsFillPolygon($hGraphics, $aPoints [, $hBrush = 0])
_GDIPlus_GraphicsFillRect($hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0])
_GDIPlus_GraphicsFillRegion($hGraphics, $hRegion [, $hBrush = 0])
_GDIPlus_GraphicsGetCompositingMode($hGraphics)
_GDIPlus_GraphicsGetCompositingQuality($hGraphics)
_GDIPlus_GraphicsGetDC($hGraphics)
_GDIPlus_GraphicsGetInterpolationMode($hGraphics)
_GDIPlus_GraphicsGetSmoothingMode($hGraphics)
_GDIPlus_GraphicsGetTransform($hGraphics, $hMatrix)
_GDIPlus_GraphicsReleaseDC($hGraphics, $hDC)
_GDIPlus_GraphicsResetClip($hGraphics)
_GDIPlus_GraphicsResetTransform($hGraphics)
_GDIPlus_GraphicsRestore($hGraphics, $iState)
_GDIPlus_GraphicsRotateTransform($hGraphics, $fAngle [, $iOrder = 0])
_GDIPlus_GraphicsSave($hGraphics)
_GDIPlus_GraphicsScaleTransform($hGraphics, $fScaleX, $fScaleY [, $iOrder = 0])
_GDIPlus_GraphicsSetClipPath($hGraphics, $hPath [, $iCombineMode = 0])
_GDIPlus_GraphicsSetClipRect($hGraphics, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 0])
_GDIPlus_GraphicsSetClipRegion($hGraphics, $hRegion [, $iCombineMode = 0])
_GDIPlus_GraphicsSetCompositingMode($hGraphics, $iCompositionMode)
_GDIPlus_GraphicsSetCompositingQuality($hGraphics, $iCompositionQuality)
_GDIPlus_GraphicsSetInterpolationMode($hGraphics, $iInterpolationMode)
_GDIPlus_GraphicsSetPixelOffsetMode($hGraphics, $iPixelOffsetMode)
_GDIPlus_GraphicsSetSmoothingMode($hGraphics, $iSmooth)
_GDIPlus_GraphicsSetTextRenderingHint($hGraphics, $iTextRenderingHint)
_GDIPlus_GraphicsSetTransform($hGraphics, $hMatrix)
_GDIPlus_GraphicsTransformPoints($hGraphics, ByRef $aPoints [, $iCoordSpaceTo = 0 [, $iCoordSpaceFrom = 1]])
_GDIPlus_GraphicsTranslateTransform($hGraphics, $nDX, $nDY [, $iOrder = 0])
#EndRegion
#Region ; GraphicsCoders
_GDIPlus_Decoders()
_GDIPlus_DecodersGetCount()
_GDIPlus_DecodersGetSize()
_GDIPlus_Encoders()
_GDIPlus_EncodersGetCLSID($sFileExtension)
_GDIPlus_EncodersGetCount()
_GDIPlus_EncodersGetParamList($hImage, $sEncoder)
_GDIPlus_EncodersGetParamListSize($hImage, $sEncoder)
_GDIPlus_EncodersGetSize()
_GDIPlus_ParamAdd(ByRef $tParams, $sGUID, $iNbOfValues, $iType, $pValues)
_GDIPlus_ParamInit($iCount)
_GDIPlus_ParamSize()
#EndRegion
#Region ; GraphicsPath
_GDIPlus_PathAddArc($hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle)
_GDIPlus_PathAddBezier($hPath, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4)
_GDIPlus_PathAddClosedCurve($hPath, $aPoints)
_GDIPlus_PathAddClosedCurve2($hPath, $aPoints [, $nTension = 0.5])
_GDIPlus_PathAddCurve($hPath, $aPoints)
_GDIPlus_PathAddCurve2($hPath, $aPoints [, $nTension = 0.5])
_GDIPlus_PathAddCurve3($hPath, $aPoints, $iOffset, $iNumOfSegments [, $nTension = 0.5])
_GDIPlus_PathAddEllipse($hPath, $nX, $nY, $nWidth, $nHeight)
_GDIPlus_PathAddLine($hPath, $nX1, $nY1, $nX2, $nY2)
_GDIPlus_PathAddLine2($hPath, $aPoints)
_GDIPlus_PathAddPath($hPath1, $hPath2 [, $bConnect = True])
_GDIPlus_PathAddPie($hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle)
_GDIPlus_PathAddPolygon($hPath, $aPoints)
_GDIPlus_PathAddRectangle($hPath, $nX, $nY, $nWidth, $nHeight)
_GDIPlus_PathAddString($hPath, $sString, $tLayout, $hFamily [, $iStyle = 0 [, $fSize = 8.5 [, $hFormat = 0]]])
_GDIPlus_PathClone($hPath)
_GDIPlus_PathCloseFigure($hPath)
_GDIPlus_PathCreate([$iFillMode = 0])
_GDIPlus_PathCreate2($aPathData [, $iFillMode = 0])
_GDIPlus_PathDispose($hPath)
_GDIPlus_PathFlatten($hPath [, $fFlatness = 0.25 [, $hMatrix = 0]])
_GDIPlus_PathGetData($hPath)
_GDIPlus_PathGetFillMode($hPath)
_GDIPlus_PathGetLastPoint($hPath)
_GDIPlus_PathGetPointCount($hPath)
_GDIPlus_PathGetPoints($hPath)
_GDIPlus_PathGetWorldBounds($hPath [, $hMatrix = 0 [, $hPen = 0]])
_GDIPlus_PathIsOutlineVisiblePoint($hPath, $nX, $nY [, $hPen = 0 [, $hGraphics = 0]])
_GDIPlus_PathIsVisiblePoint($hPath, $nX, $nY [, $hGraphics = 0])
_GDIPlus_PathReset($hPath)
_GDIPlus_PathReverse($hPath)
_GDIPlus_PathSetFillMode($hPath, $iFillMode)
_GDIPlus_PathSetMarker($hPath)
_GDIPlus_PathStartFigure($hPath)
_GDIPlus_PathTransform($hPath, $hMatrix)
_GDIPlus_PathWarp($hPath, $hMatrix, $aPoints, $nX, $nY, $nWidth, $nHeight [, $iWarpMode = 0 [, $fFlatness = 0.25]])
_GDIPlus_PathWiden($hPath, $hPen [, $hMatrix = 0 [, $fFlatness = 0.25]])
_GDIPlus_PathWindingModeOutline($hPath [, $hMatrix = 0 [, $fFlatness = 0.25]])
#EndRegion
#Region ; Image
_GDIPlus_DrawImageFX($hGraphics, $hImage, $hEffect [, $tRECTF = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]])
_GDIPlus_DrawImageFXEx($hGraphics, $hImage, $hEffect [, $nX = 0 [, $nY = 0 [, $nW = 0 [, $nH = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]]]]])
_GDIPlus_DrawImagePoints($hGraphic, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY [, $iCount = 3])
_GDIPlus_ImageClone($hImage)
_GDIPlus_ImageDispose($hImage)
_GDIPlus_ImageGetDimension($hImage)
_GDIPlus_ImageGetFlags($hImage)
_GDIPlus_ImageGetFrameCount($hImage, $sDimensionID)
_GDIPlus_ImageGetGraphicsContext($hImage)
_GDIPlus_ImageGetHeight($hImage)
_GDIPlus_ImageGetHorizontalResolution($hImage)
_GDIPlus_ImageGetPixelFormat($hImage)
_GDIPlus_ImageGetPropertyIdList($hImage)
_GDIPlus_ImageGetPropertyItem($hImage, $iPropID)
_GDIPlus_ImageGetRawFormat($hImage)
_GDIPlus_ImageGetThumbnail($hImage [, $iWidth = 0 [, $iHeight = 0 [, $bKeepRatio = True [, $hCallback = Null [, $hCallbackData = Null]]]]])
_GDIPlus_ImageGetType($hImage)
_GDIPlus_ImageGetVerticalResolution($hImage)
_GDIPlus_ImageGetWidth($hImage)
_GDIPlus_ImageLoadFromFile($sFileName)
_GDIPlus_ImageLoadFromStream($pStream)
_GDIPlus_ImageResize($hImage, $iNewWidth, $iNewHeight [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC])
_GDIPlus_ImageRotateFlip($hImage, $iRotateFlipType)
_GDIPlus_ImageSaveAdd($hImage, $tParams)
_GDIPlus_ImageSaveAddImage($hImage, $hImageNew, $tParams)
_GDIPlus_ImageSaveToFile($hImage, $sFileName)
_GDIPlus_ImageSaveToFileEx($hImage, $sFileName, $sEncoder [, $tParams = 0])
_GDIPlus_ImageSaveToStream($hImage, $pStream, $tEncoder [, $tParams = 0])
_GDIPlus_ImageScale($hImage, $iScaleW, $iScaleH [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC])
_GDIPlus_ImageSelectActiveFrame($hImage, $sDimensionID, $iFrameIndex)
#EndRegion
; ImageAttributes
_GDIPlus_ImageAttributesCreate()
_GDIPlus_ImageAttributesDispose($hImageAttributes)
_GDIPlus_ImageAttributesSetColorKeys($hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $iARGBLow = 0 [, $iARGBHigh = 0]]]])
_GDIPlus_ImageAttributesSetColorMatrix($hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $tClrMatrix = 0 [, $tGrayMatrix = 0 [, $iColorMatrixFlags = 0]]]]])
_GDIPlus_ImageAttributesSetRemapTable($hImageAttributes [, $aColorMap = 0 [, $iColorAdjustType = 0 [, $bEnable = True]]])
_GDIPlus_ImageAttributesSetThreshold($hImageAttributes, $fThreshold [, $iColorAdjustType = $GDIP_COLORADJUSTTYPE_DEFAULT [, $bEnable = True]])
#Region ; Matrix
_GDIPlus_MatrixClone($hMatrix)
_GDIPlus_MatrixCreate()
_GDIPlus_MatrixCreate2([$nM11 = 1 [, $nM12 = 1 [, $nM21 = 1 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]])
_GDIPlus_MatrixDispose($hMatrix)
_GDIPlus_MatrixGetElements($hMatrix)
_GDIPlus_MatrixInvert($hMatrix)
_GDIPlus_MatrixMultiply($hMatrix1, $hMatrix2 [, $iOrder = 0])
_GDIPlus_MatrixRotate($hMatrix, $fAngle [, $bAppend = False])
_GDIPlus_MatrixScale($hMatrix, $fScaleX, $fScaleY [, $bOrder = False])
_GDIPlus_MatrixSetElements($hMatrix [, $nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]])
_GDIPlus_MatrixShear($hMatrix, $fShearX, $fShearY [, $iOrder = 0])
_GDIPlus_MatrixTransformPoints($hMatrix, ByRef $aPoints)
_GDIPlus_MatrixTranslate($hMatrix, $fOffsetX, $fOffsetY [, $bAppend = False])
#EndRegion
; ColorMatrix
_GDIPlus_ColorMatrixCreate()
_GDIPlus_ColorMatrixCreateGrayScale()
_GDIPlus_ColorMatrixCreateNegative()
_GDIPlus_ColorMatrixCreateSaturation($fSat)
_GDIPlus_ColorMatrixCreateScale($fRed, $fGreen, $fBlue [, $fAlpha = 1])
_GDIPlus_ColorMatrixCreateTranslate($fRed, $fGreen, $fBlue [, $fAlpha = 0])
#Region ; PathGradientBrush
_GDIPlus_PathBrushCreate($aPoints [, $iWrapMode = 0])
_GDIPlus_PathBrushCreateFromPath($hPath)
_GDIPlus_PathBrushGetCenterPoint($hPathGradientBrush)
_GDIPlus_PathBrushGetFocusScales($hPathGradientBrush)
_GDIPlus_PathBrushGetPointCount($hPathGradientBrush)
_GDIPlus_PathBrushGetRect($hPathGradientBrush)
_GDIPlus_PathBrushGetWrapMode($hPathGradientBrush)
_GDIPlus_PathBrushMultiplyTransform($hPathGradientBrush, $hMatrix [, $iOrder = 0])
_GDIPlus_PathBrushResetTransform($hPathGradientBrush)
_GDIPlus_PathBrushSetBlend($hPathGradientBrush, $aBlends)
_GDIPlus_PathBrushSetCenterColor($hPathGradientBrush, $iARGB)
_GDIPlus_PathBrushSetCenterPoint($hPathGradientBrush, $nX, $nY)
_GDIPlus_PathBrushSetFocusScales($hPathGradientBrush, $fScaleX, $fScaleY)
_GDIPlus_PathBrushSetGammaCorrection($hPathGradientBrush, $bUseGammaCorrection)
_GDIPlus_PathBrushSetLinearBlend($hPathGradientBrush, $fFocus [, $fScale = 1])
_GDIPlus_PathBrushSetPresetBlend($hPathGradientBrush, $aInterpolations)
_GDIPlus_PathBrushSetSigmaBlend($hPathGradientBrush, $fFocus [, $fScale = 1])
_GDIPlus_PathBrushSetSurroundColor($hPathGradientBrush, $iARGB)
_GDIPlus_PathBrushSetSurroundColorsWithCount($hPathGradientBrush, $aColors)
_GDIPlus_PathBrushSetTransform($hPathGradientBrush, $hMatrix)
_GDIPlus_PathBrushSetWrapMode($hPathGradientBrush, $iWrapMode)
#EndRegion
; PathIterator
_GDIPlus_PathIterCreate($hPath)
_GDIPlus_PathIterDispose($hPathIter)
_GDIPlus_PathIterGetSubpathCount($hPathIter)
_GDIPlus_PathIterNextMarkerPath($hPathIter, $hPath)
_GDIPlus_PathIterNextSubpathPath($hPathIter, $hPath)
_GDIPlus_PathIterRewind($hPathIter)
#Region ; Pen
_GDIPlus_PenCreate([$iARGB = 0xFF000000 [, $nWidth = 1 [, $iUnit = 2]]])
_GDIPlus_PenCreate2($hBrush [, $nWidth = 1 [, $iUnit = 2]])
_GDIPlus_PenDispose($hPen)
_GDIPlus_PenGetAlignment($hPen)
_GDIPlus_PenGetColor($hPen)
_GDIPlus_PenGetCustomEndCap($hPen)
_GDIPlus_PenGetDashCap($hPen)
_GDIPlus_PenGetDashStyle($hPen)
_GDIPlus_PenGetEndCap($hPen)
_GDIPlus_PenGetMiterLimit($hPen)
_GDIPlus_PenGetWidth($hPen)
_GDIPlus_PenResetTransform($hPen)
_GDIPlus_PenRotateTransform($hPen, $fAngle [, $iOrder = 0])
_GDIPlus_PenScaleTransform($hPen, $fScaleX, $fScaleY [, $iOrder = 0])
_GDIPlus_PenSetAlignment($hPen [, $iAlignment = 0])
_GDIPlus_PenSetColor($hPen, $iARGB)
_GDIPlus_PenSetCompound($hPen, $aCompounds)
_GDIPlus_PenSetCustomEndCap($hPen, $hEndCap)
_GDIPlus_PenSetDashCap($hPen [, $iDash = 0])
_GDIPlus_PenSetDashStyle($hPen [, $iStyle = 0])
_GDIPlus_PenSetEndCap($hPen, $iEndCap)
_GDIPlus_PenSetLineCap($hPen, $iStartCap, $iEndCap, $iDashCap)
_GDIPlus_PenSetLineJoin($hPen, $iLineJoin)
_GDIPlus_PenSetMiterLimit($hPen, $fMiterLimit)
_GDIPlus_PenSetStartCap($hPen, $iLineCap)
_GDIPlus_PenSetTransform($hPen, $hMatrix)
_GDIPlus_PenSetWidth($hPen, $fWidth)
#EndRegion
#Region ; Region
_GDIPlus_RegionClone($hRegion)
_GDIPlus_RegionCombinePath($hRegion, $hPath [, $iCombineMode = 2])
_GDIPlus_RegionCombineRect($hRegion, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 2])
_GDIPlus_RegionCombineRegion($hRegionDst, $hRegionSrc [, $iCombineMode = 2])
_GDIPlus_RegionCreate()
_GDIPlus_RegionCreateFromPath($hPath)
_GDIPlus_RegionCreateFromRect($nX, $nY, $nWidth, $nHeight)
_GDIPlus_RegionDispose($hRegion)
_GDIPlus_RegionGetBounds($hRegion, $hGraphics)
_GDIPlus_RegionGetHRgn($hRegion [, $hGraphics = 0])
_GDIPlus_RegionSetEmpty($hRegion)
_GDIPlus_RegionSetInfinite($hRegion)
_GDIPlus_RegionTransform($hRegion, $hMatrix)
_GDIPlus_RegionTranslate($hRegion, $nDX, $nDY)
#EndRegion
; StringFormat
_GDIPlus_StringFormatCreate([$iFormat = 0 [, $iLangID = 0]])
_GDIPlus_StringFormatDispose($hFormat)
_GDIPlus_StringFormatGetMeasurableCharacterRangeCount($hFormat)
_GDIPlus_StringFormatSetAlign($hStringFormat, $iFlag)
_GDIPlus_StringFormatSetLineAlign($hStringFormat, $iStringAlign)
_GDIPlus_StringFormatSetMeasurableCharacterRanges($hStringFormat, $aRanges)
; Text
_GDIPlus_GraphicsDrawString($hGraphics, $sString, $nX, $nY [, $sFont = Default [, $fSize = Default [, $iFormat = Default [, $iARGB = Default]]]])
_GDIPlus_GraphicsDrawStringEx($hGraphics, $sString, $hFont, $tLayout, $hFormat, $hBrush)
_GDIPlus_GraphicsMeasureCharacterRanges($hGraphics, $sString, $hFont, $tLayout, $hStringFormat)
_GDIPlus_GraphicsMeasureString($hGraphics, $sString, $hFont, $tLayout, $hFormat)
#EndRegion
#Region ; GUI
#Region ; GuiAVI
#include <GuiAVI.au3>
_GUICtrlAVI_Close(GuiAVI)
_GUICtrlAVI_Create($hWnd [, $sFilePath = "" [, $iSubFileID = -1 [, $iX = 0 [, $iY = 0 [, $iWidth = 0 [, $iHeight = 0 [, $iStyle = 0x00000006 [, $iExStyle = 0x00000000]]]]]]]])
_GUICtrlAVI_Destroy(ByRef $hWnd)
_GUICtrlAVI_IsPlaying($hWnd)
_GUICtrlAVI_Open($hWnd, $sFileName)
_GUICtrlAVI_OpenEx($hWnd, $sFileName, $iResourceID)
_GUICtrlAVI_Play($hWnd [, $iFrom = 0 [, $iTo = -1 [, $iRepeat = -1]]])
_GUICtrlAVI_Seek($hWnd, $iFrame)
_GUICtrlAVI_Show($hWnd, $iState)
_GUICtrlAVI_Stop($hWnd)
#EndRegion
#Region ; GuiButton
#include <GuiButton.au3>
_GUICtrlButton_Click($hWnd)
_GUICtrlButton_Create($hWnd, $sText, $iX, $iY, $iWidth, $iHeight [, $iStyle = -1 [, $iExStyle = -1]])
_GUICtrlButton_Destroy(ByRef $hWnd)
_GUICtrlButton_Enable($hWnd [, $bEnable = True])
_GUICtrlButton_GetCheck($hWnd)
_GUICtrlButton_GetFocus($hWnd)
_GUICtrlButton_GetIdealSize($hWnd)
_GUICtrlButton_GetImage($hWnd)
_GUICtrlButton_GetImageList($hWnd)
_GUICtrlButton_GetNote($hWnd)
_GUICtrlButton_GetNoteLength($hWnd)
_GUICtrlButton_GetSplitInfo($hWnd)
_GUICtrlButton_GetState($hWnd)
_GUICtrlButton_GetText($hWnd)
_GUICtrlButton_GetTextMargin($hWnd)
_GUICtrlButton_SetCheck($hWnd [, $iState = $BST_CHECKED])
_GUICtrlButton_SetDontClick($hWnd [, $bState = True])
_GUICtrlButton_SetFocus($hWnd [, $bFocus = True])
_GUICtrlButton_SetImage($hWnd, $sImageFile [, $iIconID = -1 [, $bLarge = False]])
_GUICtrlButton_SetImageList($hWnd, $hImage [, $iAlign = 0 [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]]])
_GUICtrlButton_SetNote($hWnd, $sNote)
_GUICtrlButton_SetShield($hWnd [, $bRequired = True])
_GUICtrlButton_SetSize($hWnd, $iWidth, $iHeight)
_GUICtrlButton_SetSplitInfo($hWnd [, $hImlGlyph = -1 [, $iSplitStyle = $BCSS_ALIGNLEFT [, $iWidth = 0 [, $iHeight = 0]]]])
_GUICtrlButton_SetState($hWnd [, $bHighlighted = True])
_GUICtrlButton_SetStyle($hWnd, $iStyle)
_GUICtrlButton_SetText($hWnd, $sText)
_GUICtrlButton_SetTextMargin($hWnd [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]])
_GUICtrlButton_Show($hWnd [, $bShow = True])
#EndRegion
#Region ; GuiComboBox
#include <GuiComboBox.au3>
_GUICtrlComboBox_AddDir($hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
_GUICtrlComboBox_AddString($hWnd, $sText)
_GUICtrlComboBox_AutoComplete($hWnd)
_GUICtrlComboBox_BeginUpdate($hWnd)
_GUICtrlComboBox_Create($hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 120 [, $iStyle = 0x00200042 [, $iExStyle = 0x00000000]]]])
_GUICtrlComboBox_DeleteString($hWnd, $iIndex)
_GUICtrlComboBox_Destroy(ByRef $hWnd)
_GUICtrlComboBox_EndUpdate($hWnd)
_GUICtrlComboBox_FindString($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBox_FindStringExact($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBox_GetComboBoxInfo($hWnd, ByRef $tInfo)
_GUICtrlComboBox_GetCount($hWnd)
_GUICtrlComboBox_GetCueBanner($hWnd)
_GUICtrlComboBox_GetCurSel($hWnd)
_GUICtrlComboBox_GetDroppedControlRect($hWnd)
_GUICtrlComboBox_GetDroppedControlRectEx($hWnd)
_GUICtrlComboBox_GetDroppedState($hWnd)
_GUICtrlComboBox_GetDroppedWidth($hWnd)
_GUICtrlComboBox_GetEditSel($hWnd)
_GUICtrlComboBox_GetEditText($hWnd)
_GUICtrlComboBox_GetExtendedUI($hWnd)
_GUICtrlComboBox_GetHorizontalExtent($hWnd)
_GUICtrlComboBox_GetItemHeight($hWnd [, $iIndex = -1])
_GUICtrlComboBox_GetLBText($hWnd, $iIndex, ByRef $sText)
_GUICtrlComboBox_GetLBTextLen($hWnd, $iIndex)
_GUICtrlComboBox_GetList($hWnd)
_GUICtrlComboBox_GetListArray($hWnd)
_GUICtrlComboBox_GetLocale($hWnd)
_GUICtrlComboBox_GetLocaleCountry($hWnd)
_GUICtrlComboBox_GetLocaleLang($hWnd)
_GUICtrlComboBox_GetLocalePrimLang($hWnd)
_GUICtrlComboBox_GetLocaleSubLang($hWnd)
_GUICtrlComboBox_GetMinVisible($hWnd)
_GUICtrlComboBox_GetTopIndex($hWnd)
_GUICtrlComboBox_InitStorage($hWnd, $iNum, $iBytes)
_GUICtrlComboBox_InsertString($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBox_LimitText($hWnd [, $iLimit = 0])
_GUICtrlComboBox_ReplaceEditSel($hWnd, $sText)
_GUICtrlComboBox_ResetContent($hWnd)
_GUICtrlComboBox_SelectString($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBox_SetCueBanner($hWnd, $sText)
_GUICtrlComboBox_SetCurSel($hWnd [, $iIndex = -1])
_GUICtrlComboBox_SetDroppedWidth($hWnd, $iWidth)
_GUICtrlComboBox_SetEditSel($hWnd, $iStart, $iStop)
_GUICtrlComboBox_SetEditText($hWnd, $sText)
_GUICtrlComboBox_SetExtendedUI($hWnd [, $bExtended = False])
_GUICtrlComboBox_SetHorizontalExtent($hWnd, $iWidth)
_GUICtrlComboBox_SetItemHeight($hWnd, $iHeight [, $iComponent = -1])
_GUICtrlComboBox_SetMinVisible($hWnd, $iMinimum)
_GUICtrlComboBox_SetTopIndex($hWnd, $iIndex)
_GUICtrlComboBox_ShowDropDown($hWnd [, $bShow = False])
#EndRegion
#Region ; GuiComboBoxEx
#include <GuiComboBoxEx.au3>
_GUICtrlComboBoxEx_AddDir($hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
_GUICtrlComboBoxEx_AddString($hWnd, $sText [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]])
_GUICtrlComboBoxEx_BeginUpdate($hWnd)
_GUICtrlComboBoxEx_Create($hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00200002 [, $iExStyle = 0x00000000]]]])
_GUICtrlComboBoxEx_CreateSolidBitMap($hWnd, $iColor, $iWidth, $iHeight)
_GUICtrlComboBoxEx_DeleteString($hWnd, $iIndex)
_GUICtrlComboBoxEx_Destroy(ByRef $hWnd)
_GUICtrlComboBoxEx_EndUpdate($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBoxEx_FindStringExact($hWnd, $sText [, $iIndex = -1])
_GUICtrlComboBoxEx_GetComboBoxInfo($hWnd, ByRef $tInfo)
_GUICtrlComboBoxEx_GetComboControl($hWnd)
_GUICtrlComboBoxEx_GetCount($hWnd)
_GUICtrlComboBoxEx_GetCurSel($hWnd)
_GUICtrlComboBoxEx_GetDroppedControlRect($hWnd)
_GUICtrlComboBoxEx_GetDroppedControlRectEx($hWnd)
_GUICtrlComboBoxEx_GetDroppedState($hWnd)
_GUICtrlComboBoxEx_GetDroppedWidth($hWnd)
_GUICtrlComboBoxEx_GetEditControl($hWnd)
_GUICtrlComboBoxEx_GetEditSel($hWnd)
_GUICtrlComboBoxEx_GetEditText($hWnd)
_GUICtrlComboBoxEx_GetExtendedStyle($hWnd)
_GUICtrlComboBoxEx_GetExtendedUI($hWnd)
_GUICtrlComboBoxEx_GetImageList($hWnd)
_GUICtrlComboBoxEx_GetItem($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemEx($hWnd, ByRef $tItem)
_GUICtrlComboBoxEx_GetItemHeight($hWnd [, $iComponent = -1])
_GUICtrlComboBoxEx_GetItemImage($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemIndent($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemOverlayImage($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemParam($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemSelectedImage($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetItemText($hWnd, $iIndex, ByRef $sText)
_GUICtrlComboBoxEx_GetItemTextLen($hWnd, $iIndex)
_GUICtrlComboBoxEx_GetList($hWnd)
_GUICtrlComboBoxEx_GetListArray($hWnd)
_GUICtrlComboBoxEx_GetLocale($hWnd)
_GUICtrlComboBoxEx_GetLocaleCountry($hWnd)
_GUICtrlComboBoxEx_GetLocaleLang($hWnd)
_GUICtrlComboBoxEx_GetLocalePrimLang($hWnd)
_GUICtrlComboBoxEx_GetLocaleSubLang($hWnd)
_GUICtrlComboBoxEx_GetMinVisible($hWnd)
_GUICtrlComboBoxEx_GetTopIndex($hWnd)
_GUICtrlComboBoxEx_GetUnicode($hWnd)
_GUICtrlComboBoxEx_InitStorage($hWnd, $iNum, $iBytes)
_GUICtrlComboBoxEx_InsertString($hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]])
_GUICtrlComboBoxEx_LimitText($hWnd [, $iLimit = 0])
_GUICtrlComboBoxEx_ReplaceEditSel($hWnd, $sText)
_GUICtrlComboBoxEx_ResetContent($hWnd)
_GUICtrlComboBoxEx_SetCurSel($hWnd [, $iIndex = -1])
_GUICtrlComboBoxEx_SetDroppedWidth($hWnd, $iWidth)
_GUICtrlComboBoxEx_SetEditSel($hWnd, $iStart, $iStop)
_GUICtrlComboBoxEx_SetEditText($hWnd, $sText)
_GUICtrlComboBoxEx_SetExtendedStyle($hWnd, $iExStyle [, $iExMask = 0])
_GUICtrlComboBoxEx_SetExtendedUI($hWnd [, $bExtended = False])
_GUICtrlComboBoxEx_SetImageList($hWnd, $hHandle)
_GUICtrlComboBoxEx_SetItem($hWnd, $sText [, $iIndex = 0 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]])
_GUICtrlComboBoxEx_SetItemEx($hWnd, ByRef $tItem [, $tBuffer = 0])
_GUICtrlComboBoxEx_SetItemHeight($hWnd, $iComponent, $iHeight)
_GUICtrlComboBoxEx_SetItemImage($hWnd, $iIndex, $iImage)
_GUICtrlComboBoxEx_SetItemIndent($hWnd, $iIndex, $iIndent)
_GUICtrlComboBoxEx_SetItemOverlayImage($hWnd, $iIndex, $iImage)
_GUICtrlComboBoxEx_SetItemParam($hWnd, $iIndex, $iParam)
_GUICtrlComboBoxEx_SetItemSelectedImage($hWnd, $iIndex, $iImage)
_GUICtrlComboBoxEx_SetMinVisible($hWnd, $iMinimum)
_GUICtrlComboBoxEx_SetTopIndex($hWnd, $iIndex)
_GUICtrlComboBoxEx_SetUnicode($hWnd [, $bUnicode = True])
_GUICtrlComboBoxEx_ShowDropDown($hWnd [, $bShow = False])
#EndRegion
#Region ; GuiDateTimePicker
#include <GuiDateTimePicker.au3>
_GUICtrlDTP_Create($hWnd, $iX, $iY [, $iWidth = 120 [, $iHeight = 21 [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]]]])
_GUICtrlDTP_Destroy(ByRef $hWnd)
_GUICtrlDTP_GetMCColor($hWnd, $iIndex)
_GUICtrlDTP_GetMCFont($hWnd)
_GUICtrlDTP_GetMonthCal($hWnd)
_GUICtrlDTP_GetRange($hWnd)
_GUICtrlDTP_GetRangeEx($hWnd)
_GUICtrlDTP_GetSystemTime($hWnd)
_GUICtrlDTP_GetSystemTimeEx($hWnd)
_GUICtrlDTP_SetFormat($hWnd, $sFormat)
_GUICtrlDTP_SetMCColor($hWnd, $iIndex, $iColor)
_GUICtrlDTP_SetMCFont($hWnd, $hFont [, $bRedraw = True])
_GUICtrlDTP_SetRange($hWnd, ByRef $aRange)
_GUICtrlDTP_SetRangeEx($hWnd, ByRef $tRange)
_GUICtrlDTP_SetSystemTime($hWnd, ByRef $aDate)
_GUICtrlDTP_SetSystemTimeEx($hWnd, ByRef $tDate [, $bFlag = False])
#EndRegion
#Region ; GuiEdit
#include <GuiEdit.au3>
_GUICtrlEdit_AppendText($hWnd, $sText)
_GUICtrlEdit_BeginUpdate($hWnd)
_GUICtrlEdit_CanUndo($hWnd)
_GUICtrlEdit_CharFromPos($hWnd, $iX, $iY)
_GUICtrlEdit_Create($hWnd, $sText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x003010C4 [, $iExStyle = 0x00000200]]]])
_GUICtrlEdit_Destroy(ByRef $hWnd)
_GUICtrlEdit_EmptyUndoBuffer($hWnd)
_GUICtrlEdit_EndUpdate($hWnd)
_GUICtrlEdit_Find($hWnd [, $bReplace = False])
_GUICtrlEdit_FmtLines($hWnd [, $bSoftBreak = False])
_GUICtrlEdit_GetCueBanner($hWnd)
_GUICtrlEdit_GetFirstVisibleLine($hWnd)
_GUICtrlEdit_GetLimitText($hWnd)
_GUICtrlEdit_GetLine($hWnd, $iLine)
_GUICtrlEdit_GetLineCount($hWnd)
_GUICtrlEdit_GetMargins($hWnd)
_GUICtrlEdit_GetModify($hWnd)
_GUICtrlEdit_GetPasswordChar($hWnd)
_GUICtrlEdit_GetRECT($hWnd)
_GUICtrlEdit_GetRECTEx($hWnd)
_GUICtrlEdit_GetSel($hWnd)
_GUICtrlEdit_GetText($hWnd)
_GUICtrlEdit_GetTextLen($hWnd)
_GUICtrlEdit_HideBalloonTip($hWnd)
_GUICtrlEdit_InsertText($hWnd, $sText [, $iIndex = -1])
_GUICtrlEdit_LineFromChar($hWnd [, $iIndex = -1])
_GUICtrlEdit_LineIndex($hWnd [, $iIndex = -1])
_GUICtrlEdit_LineLength($hWnd [, $iIndex = -1])
_GUICtrlEdit_LineScroll($hWnd, $iHoriz, $iVert)
_GUICtrlEdit_PosFromChar($hWnd, $iIndex)
_GUICtrlEdit_ReplaceSel($hWnd, $sText [, $bUndo = True])
_GUICtrlEdit_Scroll($hWnd, $iDirection)
_GUICtrlEdit_SetCueBanner($hWnd, $sText [, $bOnFocus = False])
_GUICtrlEdit_SetLimitText($hWnd, $iLimit)
_GUICtrlEdit_SetMargins($hWnd [, $iMargin = 0x1 [, $iLeft = 0xFFFF [, $iRight = 0xFFFF]]])
_GUICtrlEdit_SetModify($hWnd, $bModified)
_GUICtrlEdit_SetPadding($hWnd, $iCX, $iCY)
_GUICtrlEdit_SetPasswordChar($hWnd [, $sDisplayChar = "0"])
_GUICtrlEdit_SetReadOnly($hWnd, $bReadOnly)
_GUICtrlEdit_SetRECT($hWnd, $aRect)
_GUICtrlEdit_SetRECTEx($hWnd, $tRECT)
_GUICtrlEdit_SetRECTNP($hWnd, $aRect)
_GUICtrlEdit_SetRectNPEx($hWnd, $tRECT)
_GUICtrlEdit_SetSel($hWnd, $iStart, $iEnd)
_GUICtrlEdit_SetTabStops($hWnd, $aTabStops)
_GUICtrlEdit_SetText($hWnd, $sText)
_GUICtrlEdit_ShowBalloonTip($hWnd, $sTitle, $sText, $iIcon)
_GUICtrlEdit_Undo($hWnd)
#EndRegion
#Region ; GuiHeader
#include <GuiHeader.au3>
_GUICtrlHeader_AddItem($hWnd, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]])
_GUICtrlHeader_ClearFilter($hWnd, $iIndex)
_GUICtrlHeader_ClearFilterAll($hWnd)
_GUICtrlHeader_Create($hWnd [, $iStyle = 0x00000046])
_GUICtrlHeader_CreateDragImage($hWnd, $iIndex)
_GUICtrlHeader_DeleteItem($hWnd, $iIndex)
_GUICtrlHeader_Destroy(ByRef $hWnd)
_GUICtrlHeader_EditFilter($hWnd, $iIndex [, $bDiscard = True])
_GUICtrlHeader_GetBitmapMargin($hWnd)
_GUICtrlHeader_GetFilterText($hWnd, $iIndex)
_GUICtrlHeader_GetImageList($hWnd)
_GUICtrlHeader_GetItem($hWnd, $iIndex, ByRef $tItem)
_GUICtrlHeader_GetItemAlign($hWnd, $iIndex)
_GUICtrlHeader_GetItemBitmap($hWnd, $iIndex)
_GUICtrlHeader_GetItemCount($hWnd)
_GUICtrlHeader_GetItemDisplay($hWnd, $iIndex)
_GUICtrlHeader_GetItemFlags($hWnd, $iIndex)
_GUICtrlHeader_GetItemFormat($hWnd, $iIndex)
_GUICtrlHeader_GetItemImage($hWnd, $iIndex)
_GUICtrlHeader_GetItemOrder($hWnd, $iIndex)
_GUICtrlHeader_GetItemParam($hWnd, $iIndex)
_GUICtrlHeader_GetItemRect($hWnd, $iIndex)
_GUICtrlHeader_GetItemRectEx($hWnd, $iIndex)
_GUICtrlHeader_GetItemText($hWnd, $iIndex)
_GUICtrlHeader_GetItemWidth($hWnd, $iIndex)
_GUICtrlHeader_GetOrderArray($hWnd)
_GUICtrlHeader_GetUnicodeFormat($hWnd)
_GUICtrlHeader_HitTest($hWnd, $iX, $iY)
_GUICtrlHeader_InsertItem($hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]])
_GUICtrlHeader_Layout($hWnd, ByRef $tRECT)
_GUICtrlHeader_OrderToIndex($hWnd, $iOrder)
_GUICtrlHeader_SetBitmapMargin($hWnd, $iWidth)
_GUICtrlHeader_SetFilterChangeTimeout($hWnd, $iTimeOut)
_GUICtrlHeader_SetHotDivider($hWnd, $iFlag, $iInputValue)
_GUICtrlHeader_SetImageList($hWnd, $hImage)
_GUICtrlHeader_SetItem($hWnd, $iIndex, ByRef $tItem)
_GUICtrlHeader_SetItemAlign($hWnd, $iIndex, $iAlign)
_GUICtrlHeader_SetItemBitmap($hWnd, $iIndex, $hBitmap)
_GUICtrlHeader_SetItemDisplay($hWnd, $iIndex, $iDisplay)
_GUICtrlHeader_SetItemFlags($hWnd, $iIndex, $iFlags)
_GUICtrlHeader_SetItemFormat($hWnd, $iIndex, $iFormat)
_GUICtrlHeader_SetItemImage($hWnd, $iIndex, $iImage)
_GUICtrlHeader_SetItemOrder($hWnd, $iIndex, $iOrder)
_GUICtrlHeader_SetItemParam($hWnd, $iIndex, $iParam)
_GUICtrlHeader_SetItemText($hWnd, $iIndex, $sText)
_GUICtrlHeader_SetItemWidth($hWnd, $iIndex, $iWidth)
_GUICtrlHeader_SetOrderArray($hWnd, ByRef $aOrder)
_GUICtrlHeader_SetUnicodeFormat($hWnd, $bUnicode)
#EndRegion
#Region ; GuiImageList
#include <GuiImageList.au3>
_GUIImageList_Add($hWnd, $hImage [, $hMask = 0])
_GUIImageList_AddBitmap($hWnd, $sImage [, $sMask = ""])
_GUIImageList_AddIcon($hWnd, $sFilePath [, $iIndex = 0 [, $bLarge = False]])
_GUIImageList_AddMasked($hWnd, $hImage [, $iMask = 0])
_GUIImageList_BeginDrag($hWnd, $iTrack, $iXHotSpot, $iYHotSpot)
_GUIImageList_Copy($hWnd, $iSource, $iDestination)
_GUIImageList_Create([$iCX = 16 [, $iCY = 16 [, $iColor = 4 [, $iOptions = 0 [, $iInitial = 4 [, $iGrow = 4]]]]]])
_GUIImageList_Destroy($hWnd)
_GUIImageList_DestroyIcon($hIcon)
_GUIImageList_DragEnter($hWnd, $iX, $iY)
_GUIImageList_DragLeave($hWnd)
_GUIImageList_DragMove($iX, $iY)
_GUIImageList_Draw($hWnd, $iIndex, $hDC, $iX, $iY [, $iStyle = 0])
_GUIImageList_DrawEx($hWnd, $iIndex, $hDC, $iX, $iY [, $iDX = 0 [, $iDY = 0 [, $iRGBBk = 0xFFFFFFFF [, $iRGBFg = 0xFFFFFFFF [, $iStyle = 0]]]]])
_GUIImageList_Duplicate($hWnd)
_GUIImageList_EndDrag()
_GUIImageList_GetBkColor($hWnd)
_GUIImageList_GetIcon($hWnd, $iIndex [, $iStyle = 0])
_GUIImageList_GetIconHeight($hWnd)
_GUIImageList_GetIconSize($hWnd)
_GUIImageList_GetIconSizeEx($hWnd)
_GUIImageList_GetIconWidth($hWnd)
_GUIImageList_GetImageCount($hWnd)
_GUIImageList_GetImageInfoEx($hWnd, $iIndex)
_GUIImageList_Remove($hWnd [, $iIndex = -1])
_GUIImageList_ReplaceIcon($hWnd, $iIndex, $hIcon)
_GUIImageList_SetBkColor($hWnd, $iClrBk)
_GUIImageList_SetIconSize($hWnd, $iCX, $iCY)
_GUIImageList_SetImageCount($hWnd, $iNewCount)
_GUIImageList_Swap($hWnd, $iSource, $iDestination)
#EndRegion
#Region ; GuiIPAddress
#include <GuiIPAddress.au3>
_GUICtrlIpAddress_ClearAddress($hWnd)
_GUICtrlIpAddress_Create($hWnd, $iX, $iY [, $iWidth = 125 [, $iHeight = 25 [, $iStyles = 0x00000000 [, $iExstyles = 0x00000000]]]])
_GUICtrlIpAddress_Destroy(ByRef $hWnd)
_GUICtrlIpAddress_Get($hWnd)
_GUICtrlIpAddress_GetArray($hWnd)
_GUICtrlIpAddress_GetEx($hWnd)
_GUICtrlIpAddress_IsBlank($hWnd)
_GUICtrlIpAddress_Set($hWnd, $sAddress)
_GUICtrlIpAddress_SetArray($hWnd, $aAddress)
_GUICtrlIpAddress_SetEx($hWnd, $tIP)
_GUICtrlIpAddress_SetFocus($hWnd, $iIndex)
_GUICtrlIpAddress_SetFont($hWnd [, $sFaceName = "Arial" [, $iFontSize = 12 [, $iFontWeight = 400 [, $bFontItalic = False]]]])
_GUICtrlIpAddress_SetRange($hWnd, $iIndex [, $iLowRange = 0 [, $iHighRange = 255]])
_GUICtrlIpAddress_ShowHide($hWnd, $iState)
#EndRegion
#Region ; GuiListBox
#include <GuiListBox.au3>
_GUICtrlListBox_AddFile($hWnd, $sFilePath)
_GUICtrlListBox_AddString($hWnd, $sText)
_GUICtrlListBox_BeginUpdate($hWnd)
_GUICtrlListBox_ClickItem($hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]])
_GUICtrlListBox_Create($hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00B00002 [, $iExStyle = 0x00000200]]]])
_GUICtrlListBox_DeleteString($hWnd, $iIndex)
_GUICtrlListBox_Destroy(ByRef $hWnd)
_GUICtrlListBox_Dir($hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]])
_GUICtrlListBox_EndUpdate($hWnd)
_GUICtrlListBox_FindInText($hWnd, $sText [, $iStart = -1 [, $bWrapOK = True]])
_GUICtrlListBox_FindString($hWnd, $sText [, $bExact = False])
_GUICtrlListBox_GetAnchorIndex($hWnd)
_GUICtrlListBox_GetCaretIndex($hWnd)
_GUICtrlListBox_GetCount($hWnd)
_GUICtrlListBox_GetCurSel($hWnd)
_GUICtrlListBox_GetHorizontalExtent($hWnd)
_GUICtrlListBox_GetItemData($hWnd, $iIndex)
_GUICtrlListBox_GetItemHeight($hWnd)
_GUICtrlListBox_GetItemRect($hWnd, $iIndex)
_GUICtrlListBox_GetItemRectEx($hWnd, $iIndex)
_GUICtrlListBox_GetListBoxInfo($hWnd)
_GUICtrlListBox_GetLocale($hWnd)
_GUICtrlListBox_GetLocaleCountry($hWnd)
_GUICtrlListBox_GetLocaleLang($hWnd)
_GUICtrlListBox_GetLocalePrimLang($hWnd)
_GUICtrlListBox_GetLocaleSubLang($hWnd)
_GUICtrlListBox_GetSel($hWnd, $iIndex)
_GUICtrlListBox_GetSelCount($hWnd)
_GUICtrlListBox_GetSelItems($hWnd)
_GUICtrlListBox_GetSelItemsText($hWnd)
_GUICtrlListBox_GetText($hWnd, $iIndex)
_GUICtrlListBox_GetTextLen($hWnd, $iIndex)
_GUICtrlListBox_GetTopIndex($hWnd)
_GUICtrlListBox_InitStorage($hWnd, $iItems, $iBytes)
_GUICtrlListBox_InsertString($hWnd, $sText [, $iIndex = -1])
_GUICtrlListBox_ItemFromPoint($hWnd, $iX, $iY)
_GUICtrlListBox_ReplaceString($hWnd, $iIndex, $sText)
_GUICtrlListBox_ResetContent($hWnd)
_GUICtrlListBox_SelectString($hWnd, $sText [, $iIndex = -1])
_GUICtrlListBox_SelItemRange($hWnd, $iFirst, $iLast [, $bSelect = True])
_GUICtrlListBox_SelItemRangeEx($hWnd, $iFirst, $iLast)
_GUICtrlListBox_SetAnchorIndex($hWnd, $iIndex)
_GUICtrlListBox_SetCaretIndex($hWnd, $iIndex [, $bPartial = False])
_GUICtrlListBox_SetColumnWidth($hWnd, $iWidth)
_GUICtrlListBox_SetCurSel($hWnd, $iIndex)
_GUICtrlListBox_SetHorizontalExtent($hWnd, $iWidth)
_GUICtrlListBox_SetItemData($hWnd, $iIndex, $iValue)
_GUICtrlListBox_SetItemHeight($hWnd, $iHeight [, $iIndex = 0])
_GUICtrlListBox_SetLocale($hWnd, $iLocal)
_GUICtrlListBox_SetSel($hWnd [, $iIndex = -1 [, $iSelect = -1]])
_GUICtrlListBox_SetTabStops($hWnd, $aTabStops)
_GUICtrlListBox_SetTopIndex($hWnd, $iIndex)
_GUICtrlListBox_Sort($hWnd)
_GUICtrlListBox_SwapString($hWnd, $iIndexA, $iIndexB)
_GUICtrlListBox_UpdateHScroll($hWnd)
#EndRegion
#Region ; GuiListView
#include <GuiListView.au3>
_GUICtrlListView_AddArray($hWnd, ByRef $aItems)
_GUICtrlListView_AddColumn($hWnd, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
_GUICtrlListView_AddItem($hWnd, $sText [, $iImage = -1 [, $iParam = 0]])
_GUICtrlListView_AddSubItem($hWnd, $iIndex, $sText, $iSubItem [, $iImage = -1])
_GUICtrlListView_ApproximateViewHeight($hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
_GUICtrlListView_ApproximateViewRect($hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
_GUICtrlListView_ApproximateViewWidth($hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]])
_GUICtrlListView_Arrange($hWnd [, $iArrange = 0])
_GUICtrlListView_BeginUpdate($hWnd)
_GUICtrlListView_CancelEditLabel($hWnd)
_GUICtrlListView_ClickItem($hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
_GUICtrlListView_CopyItems($hWnd_Source, $hWnd_Destination [, $bDelFlag = False])
_GUICtrlListView_Create($hWnd, $sHeaderText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x0000000D [, $iExStyle = 0x00000000 [, $bCoInit = False]]]]])
_GUICtrlListView_CreateDragImage($hWnd, $iIndex)
_GUICtrlListView_CreateSolidBitMap($hWnd, $iColor, $iWidth, $iHeight)
_GUICtrlListView_DeleteAllItems($hWnd)
_GUICtrlListView_DeleteColumn($hWnd, $iCol)
_GUICtrlListView_DeleteItem($hWnd, $iIndex)
_GUICtrlListView_DeleteItemsSelected($hWnd)
_GUICtrlListView_Destroy(ByRef $hWnd)
_GUICtrlListView_DrawDragImage(ByRef $hWnd, ByRef $aDrag)
_GUICtrlListView_EditLabel($hWnd, $iIndex)
_GUICtrlListView_EnableGroupView($hWnd [, $bEnable = True])
_GUICtrlListView_EndUpdate($hWnd)
_GUICtrlListView_EnsureVisible($hWnd, $iIndex [, $bPartialOK = False])
_GUICtrlListView_FindInText($hWnd, $sText [, $iStart = -1 [, $bWrapOK = True [, $bReverse = False]]])
_GUICtrlListView_FindItem($hWnd, $iStart, ByRef $tFindInfo [, $sText = ""])
_GUICtrlListView_FindNearest($hWnd, $iX, $iY [, $iDir = 0 [, $iStart = -1 [, $bWrapOK = True]]])
_GUICtrlListView_FindParam($hWnd, $iParam [, $iStart = -1])
_GUICtrlListView_FindText($hWnd, $sText [, $iStart = -1 [, $bPartialOK = True [, $bWrapOK = True]]])
_GUICtrlListView_GetBkColor($hWnd)
_GUICtrlListView_GetBkImage($hWnd)
_GUICtrlListView_GetCallbackMask($hWnd)
_GUICtrlListView_GetColumn($hWnd, $iIndex)
_GUICtrlListView_GetColumnCount($hWnd)
_GUICtrlListView_GetColumnOrder($hWnd)
_GUICtrlListView_GetColumnOrderArray($hWnd)
_GUICtrlListView_GetColumnWidth($hWnd, $iCol)
_GUICtrlListView_GetCounterPage($hWnd)
_GUICtrlListView_GetEditControl($hWnd)
_GUICtrlListView_GetExtendedListViewStyle($hWnd)
_GUICtrlListView_GetFocusedGroup($hWnd)
_GUICtrlListView_GetGroupCount($hWnd)
_GUICtrlListView_GetGroupInfo($hWnd, $iGroupID)
_GUICtrlListView_GetGroupInfoByIndex($hWnd, $iIndex)
_GUICtrlListView_GetGroupRect($hWnd, $iGroupID [, $iGet = $LVGGR_GROUP])
_GUICtrlListView_GetGroupViewEnabled($hWnd)
_GUICtrlListView_GetHeader($hWnd)
_GUICtrlListView_GetHotCursor($hWnd)
_GUICtrlListView_GetHotItem($hWnd)
_GUICtrlListView_GetHoverTime($hWnd)
_GUICtrlListView_GetImageList($hWnd, $iImageList)
_GUICtrlListView_GetISearchString($hWnd)
_GUICtrlListView_GetItem($hWnd, $iIndex [, $iSubItem = 0])
_GUICtrlListView_GetItemChecked($hWnd, $iIndex)
_GUICtrlListView_GetItemCount($hWnd)
_GUICtrlListView_GetItemCut($hWnd, $iIndex)
_GUICtrlListView_GetItemDropHilited($hWnd, $iIndex)
_GUICtrlListView_GetItemEx($hWnd, ByRef $tItem)
_GUICtrlListView_GetItemFocused($hWnd, $iIndex)
_GUICtrlListView_GetItemGroupID($hWnd, $iIndex)
_GUICtrlListView_GetItemImage($hWnd, $iIndex [, $iSubItem = 0])
_GUICtrlListView_GetItemIndent($hWnd, $iIndex)
_GUICtrlListView_GetItemParam($hWnd, $iIndex)
_GUICtrlListView_GetItemPosition($hWnd, $iIndex)
_GUICtrlListView_GetItemPositionX($hWnd, $iIndex)
_GUICtrlListView_GetItemPositionY($hWnd, $iIndex)
_GUICtrlListView_GetItemRect($hWnd, $iIndex [, $iPart = 3])
_GUICtrlListView_GetItemRectEx($hWnd, $iIndex [, $iPart = 3])
_GUICtrlListView_GetItemSelected($hWnd, $iIndex)
_GUICtrlListView_GetItemSpacing($hWnd [, $bSmall = False])
_GUICtrlListView_GetItemSpacingX($hWnd [, $bSmall = False])
_GUICtrlListView_GetItemSpacingY($hWnd [, $bSmall = False])
_GUICtrlListView_GetItemState($hWnd, $iIndex, $iMask)
_GUICtrlListView_GetItemStateImage($hWnd, $iIndex)
_GUICtrlListView_GetItemText($hWnd, $iIndex [, $iSubItem = 0])
_GUICtrlListView_GetItemTextArray($hWnd [, $iItem = -1])
_GUICtrlListView_GetItemTextString($hWnd [, $iItem = -1])
_GUICtrlListView_GetNextItem($hWnd [, $iStart = -1 [, $iSearch = 0 [, $iState = 8]]])
_GUICtrlListView_GetNumberOfWorkAreas($hWnd)
_GUICtrlListView_GetOrigin($hWnd)
_GUICtrlListView_GetOriginX($hWnd)
_GUICtrlListView_GetOriginY($hWnd)
_GUICtrlListView_GetOutlineColor($hWnd)
_GUICtrlListView_GetSelectedColumn($hWnd)
_GUICtrlListView_GetSelectedCount($hWnd)
_GUICtrlListView_GetSelectedIndices($hWnd [, $bArray = False])
_GUICtrlListView_GetSelectionMark($hWnd)
_GUICtrlListView_GetStringWidth($hWnd, $sString)
_GUICtrlListView_GetSubItemRect($hWnd, $iIndex, $iSubItem [, $iPart = 0])
_GUICtrlListView_GetTextBkColor($hWnd)
_GUICtrlListView_GetTextColor($hWnd)
_GUICtrlListView_GetToolTips($hWnd)
_GUICtrlListView_GetTopIndex($hWnd)
_GUICtrlListView_GetUnicodeFormat($hWnd)
_GUICtrlListView_GetView($hWnd)
_GUICtrlListView_GetViewDetails($hWnd)
_GUICtrlListView_GetViewLarge($hWnd)
_GUICtrlListView_GetViewList($hWnd)
_GUICtrlListView_GetViewRect($hWnd)
_GUICtrlListView_GetViewSmall($hWnd)
_GUICtrlListView_GetViewTile($hWnd)
_GUICtrlListView_HideColumn($hWnd, $iCol)
_GUICtrlListView_HitTest($hWnd [, $iX = -1 [, $iY = -1]])
_GUICtrlListView_InsertColumn($hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
_GUICtrlListView_InsertGroup($hWnd, $iIndex, $iGroupID, $sHeader [, $iAlign = 0])
_GUICtrlListView_InsertItem($hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iParam = 0]]])
_GUICtrlListView_JustifyColumn($hWnd, $iIndex [, $iAlign = -1])
_GUICtrlListView_MapIDToIndex($hWnd, $iID)
_GUICtrlListView_MapIndexToID($hWnd, $iIndex)
_GUICtrlListView_RedrawItems($hWnd, $iFirst, $iLast)
_GUICtrlListView_RegisterSortCallBack($hWnd [, $vCompareType = 1 [, $bArrows = True [, $sPrivateCallBack = "__GUICtrlListView_Sort"]]])
_GUICtrlListView_RemoveAllGroups($hWnd)
_GUICtrlListView_RemoveGroup($hWnd, $iGroupID)
_GUICtrlListView_Scroll($hWnd, $iDX, $iDY)
_GUICtrlListView_SetBkColor($hWnd, $iColor)
_GUICtrlListView_SetBkHBITMAP($hWnd, $hBitmap [, $iStyle = 0 [, $iXOffset = 0 [, $iYOffset = 0 [, $bDeleteBitmap = False]]]])
_GUICtrlListView_SetBkImage($hWnd [, $sURL = "" [, $iStyle = 0 [, $iXOffset = 0 [, $iYOffset = 0]]]])
_GUICtrlListView_SetCallBackMask($hWnd, $iMask)
_GUICtrlListView_SetColumn($hWnd, $iIndex, $sText [, $iWidth = -1 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]])
_GUICtrlListView_SetColumnOrder($hWnd, $sOrder)
_GUICtrlListView_SetColumnOrderArray($hWnd, $aOrder)
_GUICtrlListView_SetColumnWidth($hWnd, $iCol, $iWidth)
_GUICtrlListView_SetExtendedListViewStyle($hWnd, $iExStyle [, $iExMask = 0])
_GUICtrlListView_SetGroupInfo($hWnd, $iGroupID, $sHeader [, $iAlign = 0 [, $iState = $LVGS_NORMAL]])
_GUICtrlListView_SetHotItem($hWnd, $iIndex)
_GUICtrlListView_SetHoverTime($hWnd, $iTime)
_GUICtrlListView_SetIconSpacing($hWnd, $iCX, $iCY)
_GUICtrlListView_SetImageList($hWnd, $hHandle [, $iType = 0])
_GUICtrlListView_SetItem($hWnd, $sText [, $iIndex = 0 [, $iSubItem = 0 [, $iImage = -1 [, $iParam = -1 [, $iIndent = -1]]]]])
_GUICtrlListView_SetItemChecked($hWnd, $iIndex [, $bCheck = True])
_GUICtrlListView_SetItemCount($hWnd, $iItems)
_GUICtrlListView_SetItemCut($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlListView_SetItemDropHilited($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlListView_SetItemEx($hWnd, ByRef $tItem [, $iNested = 0])
_GUICtrlListView_SetItemFocused($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlListView_SetItemGroupID($hWnd, $iIndex, $iGroupID)
_GUICtrlListView_SetItemImage($hWnd, $iIndex, $iImage [, $iSubItem = 0])
_GUICtrlListView_SetItemIndent($hWnd, $iIndex, $iIndent)
_GUICtrlListView_SetItemParam($hWnd, $iIndex, $iParam)
_GUICtrlListView_SetItemPosition($hWnd, $iIndex, $iCX, $iCY)
_GUICtrlListView_SetItemPosition32($hWnd, $iIndex, $iCX, $iCY)
_GUICtrlListView_SetItemSelected($hWnd, $iIndex [, $bSelected = True [, $bFocused = False]])
_GUICtrlListView_SetItemState($hWnd, $iIndex, $iState, $iStateMask)
_GUICtrlListView_SetItemStateImage($hWnd, $iIndex, $iImage)
_GUICtrlListView_SetItemText($hWnd, $iIndex, $sText [, $iSubItem = 0])
_GUICtrlListView_SetOutlineColor($hWnd, $iColor)
_GUICtrlListView_SetSelectedColumn($hWnd, $iCol)
_GUICtrlListView_SetSelectionMark($hWnd, $iIndex)
_GUICtrlListView_SetTextBkColor($hWnd, $iColor)
_GUICtrlListView_SetTextColor($hWnd, $iColor)
_GUICtrlListView_SetToolTips($hWnd, $hToolTip)
_GUICtrlListView_SetUnicodeFormat($hWnd, $bUnicode)
_GUICtrlListView_SetView($hWnd, $iView)
_GUICtrlListView_SetWorkAreas($hWnd, $iLeft, $iTop, $iRight, $iBottom)
_GUICtrlListView_SimpleSort($hWnd, ByRef $vSortSense, $iCol [, $bToggleSense = True])
_GUICtrlListView_SortItems($hWnd, $iCol)
_GUICtrlListView_SubItemHitTest($hWnd [, $iX = -1 [, $iY = -1]])
_GUICtrlListView_UnRegisterSortCallBack($hWnd)
#EndRegion
#Region ; GuiMenu
#include <GuiMenu.au3>
_GUICtrlMenu_AddMenuItem($hMenu, $sText [, $iCmdID = 0 [, $hSubMenu = 0]])
_GUICtrlMenu_AppendMenu($hMenu, $iFlags, $iNewItem, $vNewItem)
_GUICtrlMenu_CalculatePopupWindowPosition($iX, $iY, $iWidth, $iHeight [, $iFlags = 0 [, $tExclude = 0]])
_GUICtrlMenu_CheckMenuItem($hMenu, $iItem [, $bCheck = True [, $bByPos = True]])
_GUICtrlMenu_CheckRadioItem($hMenu, $iFirst, $iLast, $iCheck [, $bByPos = True])
_GUICtrlMenu_CreateMenu([$iStyle = $MNS_CHECKORBMP])
_GUICtrlMenu_CreatePopup([$iStyle = $MNS_CHECKORBMP])
_GUICtrlMenu_DeleteMenu($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_DestroyMenu($hMenu)
_GUICtrlMenu_DrawMenuBar($hWnd)
_GUICtrlMenu_EnableMenuItem($hMenu, $iItem [, $iState = 0 [, $bByPos = True]])
_GUICtrlMenu_FindItem($hMenu, $sText [, $bInStr = False [, $iStart = 0]])
_GUICtrlMenu_FindParent($hMenu)
_GUICtrlMenu_GetItemBmp($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemBmpChecked($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemBmpUnchecked($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemChecked($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemCount($hMenu)
_GUICtrlMenu_GetItemData($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemDefault($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemDisabled($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemEnabled($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemGrayed($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemHighlighted($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemID($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemInfo($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemRect($hWnd, $hMenu, $iItem)
_GUICtrlMenu_GetItemRectEx($hWnd, $hMenu, $iItem)
_GUICtrlMenu_GetItemState($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemStateEx($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemSubMenu($hMenu, $iItem)
_GUICtrlMenu_GetItemText($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetItemType($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_GetMenu($hWnd)
_GUICtrlMenu_GetMenuBackground($hWnd)
_GUICtrlMenu_GetMenuBarInfo($hWnd [, $iItem = 0 [, $iObject = 1]])
_GUICtrlMenu_GetMenuContextHelpID($hMenu)
_GUICtrlMenu_GetMenuData($hMenu)
_GUICtrlMenu_GetMenuDefaultItem($hMenu [, $bByPos = True [, $iFlags = 0]])
_GUICtrlMenu_GetMenuHeight($hMenu)
_GUICtrlMenu_GetMenuInfo($hMenu)
_GUICtrlMenu_GetMenuStyle($hMenu)
_GUICtrlMenu_GetSystemMenu($hWnd [, $bRevert = False])
_GUICtrlMenu_InsertMenuItem($hMenu, $iIndex, $sText [, $iCmdID = 0 [, $hSubMenu = 0]])
_GUICtrlMenu_InsertMenuItemEx($hMenu, $iIndex, ByRef $tMenu [, $bByPos = True])
_GUICtrlMenu_IsMenu($hMenu)
_GUICtrlMenu_LoadMenu($hInst, $sMenuName)
_GUICtrlMenu_MapAccelerator($hMenu, $sAccelKey)
_GUICtrlMenu_MenuItemFromPoint($hWnd, $hMenu [, $iX = -1 [, $iY = -1]])
_GUICtrlMenu_RemoveMenu($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_SetItemBitmaps($hMenu, $iItem, $hChecked, $hUnChecked [, $bByPos = True])
_GUICtrlMenu_SetItemBmp($hMenu, $iItem, $hBitmap [, $bByPos = True])
_GUICtrlMenu_SetItemBmpChecked($hMenu, $iItem, $hBitmap [, $bByPos = True])
_GUICtrlMenu_SetItemBmpUnchecked($hMenu, $iItem, $hBitmap [, $bByPos = True])
_GUICtrlMenu_SetItemChecked($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemData($hMenu, $iItem, $iData [, $bByPos = True])
_GUICtrlMenu_SetItemDefault($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemDisabled($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemEnabled($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemGrayed($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemHighlighted($hMenu, $iItem [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemID($hMenu, $iItem, $iID [, $bByPos = True])
_GUICtrlMenu_SetItemInfo($hMenu, $iItem, ByRef $tInfo [, $bByPos = True])
_GUICtrlMenu_SetItemState($hMenu, $iItem, $iState [, $bState = True [, $bByPos = True]])
_GUICtrlMenu_SetItemSubMenu($hMenu, $iItem, $hSubMenu [, $bByPos = True])
_GUICtrlMenu_SetItemText($hMenu, $iItem, $sText [, $bByPos = True])
_GUICtrlMenu_SetItemType($hMenu, $iItem, $iType [, $bByPos = True])
_GUICtrlMenu_SetMenu($hWnd, $hMenu)
_GUICtrlMenu_SetMenuBackground($hMenu, $hBrush)
_GUICtrlMenu_SetMenuContextHelpID($hMenu, $iHelpID)
_GUICtrlMenu_SetMenuData($hMenu, $iData)
_GUICtrlMenu_SetMenuDefaultItem($hMenu, $iItem [, $bByPos = True])
_GUICtrlMenu_SetMenuHeight($hMenu, $iHeight)
_GUICtrlMenu_SetMenuInfo($hMenu, ByRef $tInfo)
_GUICtrlMenu_SetMenuStyle($hMenu, $iStyle)
_GUICtrlMenu_TrackPopupMenu($hMenu, $hWnd [, $iX = -1 [, $iY = -1 [, $iAlignX = 1 [, $iAlignY = 1 [, $iNotify = 0 [, $iButtons = 0]]]]]])
#EndRegion
#Region ; GuiMonthCal
#include <GuiMonthCal.au3>
_GUICtrlMonthCal_Create($hWnd, $iX, $iY [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]])
_GUICtrlMonthCal_Destroy(ByRef $hWnd)
_GUICtrlMonthCal_GetCalendarBorder($hWnd)
_GUICtrlMonthCal_GetCalendarCount($hWnd)
_GUICtrlMonthCal_GetColor($hWnd, $iIndex)
_GUICtrlMonthCal_GetColorArray($hWnd, $iColor)
_GUICtrlMonthCal_GetCurSel($hWnd)
_GUICtrlMonthCal_GetCurSelStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetFirstDOW($hWnd)
_GUICtrlMonthCal_GetFirstDOWStr($hWnd)
_GUICtrlMonthCal_GetMaxSelCount($hWnd)
_GUICtrlMonthCal_GetMaxTodayWidth($hWnd)
_GUICtrlMonthCal_GetMinReqHeight($hWnd)
_GUICtrlMonthCal_GetMinReqRect($hWnd)
_GUICtrlMonthCal_GetMinReqRectArray($hWnd)
_GUICtrlMonthCal_GetMinReqWidth($hWnd)
_GUICtrlMonthCal_GetMonthDelta($hWnd)
_GUICtrlMonthCal_GetMonthRange($hWnd [, $bPartial = False])
_GUICtrlMonthCal_GetMonthRangeMax($hWnd [, $bPartial = False])
_GUICtrlMonthCal_GetMonthRangeMaxStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetMonthRangeMin($hWnd [, $bPartial = False])
_GUICtrlMonthCal_GetMonthRangeMinStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetMonthRangeSpan($hWnd [, $bPartial = False])
_GUICtrlMonthCal_GetRange($hWnd)
_GUICtrlMonthCal_GetRangeMax($hWnd)
_GUICtrlMonthCal_GetRangeMaxStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetRangeMin($hWnd)
_GUICtrlMonthCal_GetRangeMinStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetSelRange($hWnd)
_GUICtrlMonthCal_GetSelRangeMax($hWnd)
_GUICtrlMonthCal_GetSelRangeMaxStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetSelRangeMin($hWnd)
_GUICtrlMonthCal_GetSelRangeMinStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetToday($hWnd)
_GUICtrlMonthCal_GetTodayStr($hWnd [, $sFormat = "%02d/%02d/%04d"])
_GUICtrlMonthCal_GetUnicodeFormat($hWnd)
_GUICtrlMonthCal_HitTest($hWnd, $iX, $iY)
_GUICtrlMonthCal_SetCalendarBorder($hWnd [, $iBorderSize = 4 [, $bSetBorder = True]])
_GUICtrlMonthCal_SetColor($hWnd, $iIndex, $iColor)
_GUICtrlMonthCal_SetCurSel($hWnd, $iYear, $iMonth, $iDay)
_GUICtrlMonthCal_SetDayState($hWnd, $aMasks)
_GUICtrlMonthCal_SetFirstDOW($hWnd, $sDay)
_GUICtrlMonthCal_SetMaxSelCount($hWnd, $iMaxSel)
_GUICtrlMonthCal_SetMonthDelta($hWnd, $iDelta)
_GUICtrlMonthCal_SetRange($hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay)
_GUICtrlMonthCal_SetSelRange($hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay)
_GUICtrlMonthCal_SetToday($hWnd, $iYear, $iMonth, $iDay)
_GUICtrlMonthCal_SetUnicodeFormat($hWnd [, $bUnicode = False])
#EndRegion
#Region ; GuiReBar
#include <GuiReBar.au3>
_GUICtrlRebar_AddBand($hWndRebar, $hWndChild [, $iMinWidth = 100 [, $iDefaultWidth = 100 [, $sText = "" [, $iIndex = -1 [, $iStyle = -1]]]]])
_GUICtrlRebar_AddToolBarBand($hWndRebar, $hWndToolbar [, $sText = "" [, $iIndex = -1 [, $iStyle = -1]]])
_GUICtrlRebar_BeginDrag($hWnd, $iIndex [, $iPos = -1])
_GUICtrlRebar_Create($hWnd [, $iStyles = 0x513])
_GUICtrlRebar_DeleteBand($hWnd, $iIndex)
_GUICtrlRebar_Destroy(ByRef $hWnd)
_GUICtrlRebar_DragMove($hWnd [, $iPos = -1])
_GUICtrlRebar_EndDrag($hWnd)
_GUICtrlRebar_GetBandBackColor($hWnd, $iIndex)
_GUICtrlRebar_GetBandBorders($hWnd, $iIndex)
_GUICtrlRebar_GetBandBordersEx($hWnd, $iIndex)
_GUICtrlRebar_GetBandChildHandle($hWnd, $iIndex)
_GUICtrlRebar_GetBandChildSize($hWnd, $iIndex)
_GUICtrlRebar_GetBandCount($hWnd)
_GUICtrlRebar_GetBandForeColor($hWnd, $iIndex)
_GUICtrlRebar_GetBandHeaderSize($hWnd, $iIndex)
_GUICtrlRebar_GetBandID($hWnd, $iIndex)
_GUICtrlRebar_GetBandIdealSize($hWnd, $iIndex)
_GUICtrlRebar_GetBandLength($hWnd, $iIndex)
_GUICtrlRebar_GetBandLParam($hWnd, $iIndex)
_GUICtrlRebar_GetBandMargins($hWnd)
_GUICtrlRebar_GetBandMarginsEx($hWnd)
_GUICtrlRebar_GetBandRect($hWnd, $iIndex)
_GUICtrlRebar_GetBandRectEx($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyle($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleBreak($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleChildEdge($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleFixedBMP($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleFixedSize($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleGripperAlways($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleHidden($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleHideTitle($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleNoGripper($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleTopAlign($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleUseChevron($hWnd, $iIndex)
_GUICtrlRebar_GetBandStyleVariableHeight($hWnd, $iIndex)
_GUICtrlRebar_GetBandText($hWnd, $iIndex)
_GUICtrlRebar_GetBarHeight($hWnd)
_GUICtrlRebar_GetBarInfo($hWnd)
_GUICtrlRebar_GetBKColor($hWnd)
_GUICtrlRebar_GetColorScheme($hWnd)
_GUICtrlRebar_GetRowCount($hWnd)
_GUICtrlRebar_GetRowHeight($hWnd, $iIndex)
_GUICtrlRebar_GetTextColor($hWnd)
_GUICtrlRebar_GetToolTips($hWnd)
_GUICtrlRebar_GetUnicodeFormat($hWnd)
_GUICtrlRebar_HitTest($hWnd [, $iX = -1 [, $iY = -1]])
_GUICtrlRebar_IDToIndex($hWnd, $iID)
_GUICtrlRebar_MaximizeBand($hWnd, $iIndex [, $bIdeal = True])
_GUICtrlRebar_MinimizeBand($hWnd, $iIndex)
_GUICtrlRebar_MoveBand($hWnd, $iIndexFrom, $iIndexTo)
_GUICtrlRebar_SetBandBackColor($hWnd, $iIndex, $iColor)
_GUICtrlRebar_SetBandForeColor($hWnd, $iIndex, $iColor)
_GUICtrlRebar_SetBandHeaderSize($hWnd, $iIndex, $iNewSize)
_GUICtrlRebar_SetBandID($hWnd, $iIndex, $iID)
_GUICtrlRebar_SetBandIdealSize($hWnd, $iIndex, $iNewSize)
_GUICtrlRebar_SetBandLength($hWnd, $iIndex, $iLength)
_GUICtrlRebar_SetBandLParam($hWnd, $iIndex, $lParam)
_GUICtrlRebar_SetBandStyle($hWnd, $iIndex, $iStyle)
_GUICtrlRebar_SetBandStyleBreak($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleChildEdge($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleFixedBMP($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleFixedSize($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleGripperAlways($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleHidden($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleHideTitle($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleNoGripper($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleTopAlign($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleUseChevron($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandStyleVariableHeight($hWnd, $iIndex [, $bEnabled = True])
_GUICtrlRebar_SetBandText($hWnd, $iIndex, $sText)
_GUICtrlRebar_SetBarInfo($hWnd, $hIml)
_GUICtrlRebar_SetBKColor($hWnd, $iColor)
_GUICtrlRebar_SetColorScheme($hWnd, $iBtnHighlight, $iBtnShadow)
_GUICtrlRebar_SetTextColor($hWnd, $iColor)
_GUICtrlRebar_SetToolTips($hWnd, $hToolTip)
_GUICtrlRebar_SetUnicodeFormat($hWnd [, $bUnicode = True])
_GUICtrlRebar_ShowBand($hWnd, $iIndex [, $bShow = True])
#EndRegion
#Region ; GuiRichEdit
#include <GuiRichEdit.au3>
_GUICtrlRichEdit_AppendText($hWnd, $sText)
_GUICtrlRichEdit_AutoDetectURL($hWnd, $bState)
_GUICtrlRichEdit_CanPaste($hWnd)
_GUICtrlRichEdit_CanPasteSpecial($hWnd)
_GUICtrlRichEdit_CanRedo($hWnd)
_GUICtrlRichEdit_CanUndo($hWnd)
_GUICtrlRichEdit_ChangeFontSize($hWnd, $iIncrement)
_GUICtrlRichEdit_Copy($hWnd)
_GUICtrlRichEdit_Create($hWnd, $sText, $iLeft, $iTop [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = -1 [, $iExStyle = -1]]]])
_GUICtrlRichEdit_Cut($hWnd)
_GUICtrlRichEdit_Deselect($hWnd)
_GUICtrlRichEdit_Destroy(ByRef $hWnd)
_GUICtrlRichEdit_EmptyUndoBuffer($hWnd)
_GUICtrlRichEdit_FindText($hWnd, $sText [, $bForward = True [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]])
_GUICtrlRichEdit_FindTextInRange($hWnd, $sText [, $iStart = 0 [, $iEnd = -1 [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]]])
_GUICtrlRichEdit_GetBkColor($hWnd)
_GUICtrlRichEdit_GetCharAttributes($hWnd)
_GUICtrlRichEdit_GetCharBkColor($hWnd)
_GUICtrlRichEdit_GetCharColor($hWnd)
_GUICtrlRichEdit_GetCharPosFromXY($hWnd, $iX, $iY)
_GUICtrlRichEdit_GetCharPosOfNextWord($hWnd, $iCpStart)
_GUICtrlRichEdit_GetCharPosOfPreviousWord($hWnd, $iCpStart)
_GUICtrlRichEdit_GetCharWordBreakInfo($hWnd, $iCp)
_GUICtrlRichEdit_GetFirstCharPosOnLine($hWnd [, $iLine = -1])
_GUICtrlRichEdit_GetFont($hWnd)
_GUICtrlRichEdit_GetLineCount($hWnd)
_GUICtrlRichEdit_GetLineLength($hWnd, $iLine)
_GUICtrlRichEdit_GetLineNumberFromCharPos($hWnd, $iCharPos)
_GUICtrlRichEdit_GetNextRedo($hWnd [, $bName = True])
_GUICtrlRichEdit_GetNextUndo($hWnd [, $bName = True])
_GUICtrlRichEdit_GetNumberOfFirstVisibleLine($hWnd)
_GUICtrlRichEdit_GetParaAlignment($hWnd)
_GUICtrlRichEdit_GetParaAttributes($hWnd)
_GUICtrlRichEdit_GetParaBorder($hWnd)
_GUICtrlRichEdit_GetParaIndents($hWnd)
_GUICtrlRichEdit_GetParaNumbering($hWnd)
_GUICtrlRichEdit_GetParaShading($hWnd)
_GUICtrlRichEdit_GetParaSpacing($hWnd)
_GUICtrlRichEdit_GetParaTabStops($hWnd)
_GUICtrlRichEdit_GetPasswordChar($hWnd)
_GUICtrlRichEdit_GetRECT($hWnd)
_GUICtrlRichEdit_GetScrollPos($hWnd)
_GUICtrlRichEdit_GetSel($hWnd)
_GUICtrlRichEdit_GetSelAA($hWnd)
_GUICtrlRichEdit_GetSelText($hWnd)
_GUICtrlRichEdit_GetSpaceUnit()
_GUICtrlRichEdit_GetText($hWnd [, $bCrToCrLf = False [, $iCodePage = 0 [, $sReplChar = ""]]])
_GUICtrlRichEdit_GetTextInLine($hWnd, $iLine)
_GUICtrlRichEdit_GetTextInRange($hWnd, $iStart, $iEnd)
_GUICtrlRichEdit_GetTextLength($hWnd [, $bExact = True [, $bChars = False [, $iUseCrLf = 1]]])
_GUICtrlRichEdit_GetVersion()
_GUICtrlRichEdit_GetXYFromCharPos($hWnd, $iCharPos)
_GUICtrlRichEdit_GetZoom($hWnd)
_GUICtrlRichEdit_GotoCharPos($hWnd, $iCharPos)
_GUICtrlRichEdit_HideSelection($hWnd [, $bHide = True])
_GUICtrlRichEdit_InsertText($hWnd, $sText)
_GUICtrlRichEdit_IsModified($hWnd)
_GUICtrlRichEdit_IsTextSelected($hWnd)
_GUICtrlRichEdit_Paste($hWnd)
_GUICtrlRichEdit_PasteSpecial($hWnd [, $bAndObjects = True])
_GUICtrlRichEdit_PauseRedraw($hWnd)
_GUICtrlRichEdit_Redo($hWnd)
_GUICtrlRichEdit_ReplaceText($hWnd, $sText [, $bCanUndo = True])
_GUICtrlRichEdit_ResumeRedraw($hWnd)
_GUICtrlRichEdit_ScrollLineOrPage($hWnd, $sAction)
_GUICtrlRichEdit_ScrollLines($hWnd, $iQlines)
_GUICtrlRichEdit_ScrollToCaret($hWnd)
_GUICtrlRichEdit_SetBkColor($hWnd [, $iBngColor = Default])
_GUICtrlRichEdit_SetCharAttributes($hWnd, $sStatesAndEffects [, $bWord = False])
_GUICtrlRichEdit_SetCharBkColor($hWnd [, $iBkColor = Default])
_GUICtrlRichEdit_SetCharColor($hWnd [, $iColor = Default])
_GUICtrlRichEdit_SetEventMask($hWnd, $iEventMask)
_GUICtrlRichEdit_SetFont($hWnd [, $iPoints = Default [, $sName = Default [, $iCharset = Default [, $iLcid = Default]]]])
_GUICtrlRichEdit_SetLimitOnText($hWnd, $iNewLimit)
_GUICtrlRichEdit_SetModified($hWnd [, $bState = True])
_GUICtrlRichEdit_SetParaAlignment($hWnd, $sAlignment)
_GUICtrlRichEdit_SetParaAttributes($hWnd, $sStatesAndAtts)
_GUICtrlRichEdit_SetParaBorder($hWnd [, $sLocation = Default [, $vLineStyle = Default [, $sColor = Default [, $iSpace = Default]]]])
_GUICtrlRichEdit_SetParaIndents($hWnd [, $vLeft = Default [, $iRight = Default [, $iFirstLine = Default]]])
_GUICtrlRichEdit_SetParaNumbering($hWnd, $sStyle [, $iTextToNbrSpace = Default [, $bForceRoman = False]])
_GUICtrlRichEdit_SetParaShading($hWnd [, $iWeight = Default [, $sStyle = Default [, $sForeColor = Default [, $sBackColor = Default]]]])
_GUICtrlRichEdit_SetParaSpacing($hWnd [, $vInter = Default [, $iBefore = Default [, $iAfter = Default]]])
_GUICtrlRichEdit_SetParaTabStops($hWnd, $sTabStops)
_GUICtrlRichEdit_SetPasswordChar($hWnd [, $sDisplayChar = "*"])
_GUICtrlRichEdit_SetReadOnly($hWnd [, $bState = True])
_GUICtrlRichEdit_SetRECT($hWnd [, $iLeft = Default [, $iTop = Default [, $iRight = Default [, $iBottom = Default [, $bRedraw = True]]]]])
_GUICtrlRichEdit_SetScrollPos($hWnd, $iX, $iY)
_GUICtrlRichEdit_SetSel($hWnd, $iAnchor, $iActive [, $bHideSel = False])
_GUICtrlRichEdit_SetSpaceUnit($sUnit)
_GUICtrlRichEdit_SetTabStops($hWnd, $vTabStops [, $bRedraw = True])
_GUICtrlRichEdit_SetText($hWnd, $sText)
_GUICtrlRichEdit_SetUndoLimit($hWnd, $iLimit)
_GUICtrlRichEdit_SetZoom($hWnd, $iPercent)
_GUICtrlRichEdit_StreamFromFile($hWnd, $sFileSpec [, $iFileEncoding = Default])
_GUICtrlRichEdit_StreamFromVar($hWnd, $sVar)
_GUICtrlRichEdit_StreamToFile($hWnd, $sFileSpec [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0 [, $iFileEncoding = Default]]]])
_GUICtrlRichEdit_StreamToVar($hWnd [, $bRtf = True [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]]])
_GUICtrlRichEdit_Undo($hWnd)
#EndRegion
#Region ; GuiScrollBars
#include <GuiScrollBars.au3>
_GUIScrollBars_EnableScrollBar($hWnd [, $iSBflags = $SB_BOTH [, $iArrows = $ESB_ENABLE_BOTH]])
_GUIScrollBars_GetScrollBarInfoEx($hWnd, $iObject)
_GUIScrollBars_GetScrollBarRect($hWnd, $iObject)
_GUIScrollBars_GetScrollBarRGState($hWnd, $iObject)
_GUIScrollBars_GetScrollBarXYLineButton($hWnd, $iObject)
_GUIScrollBars_GetScrollBarXYThumbBottom($hWnd, $iObject)
_GUIScrollBars_GetScrollBarXYThumbTop($hWnd, $iObject)
_GUIScrollBars_GetScrollInfo($hWnd, $iBar, ByRef $tSCROLLINFO)
_GUIScrollBars_GetScrollInfoEx($hWnd, $iBar)
_GUIScrollBars_GetScrollInfoMax($hWnd, $iBar)
_GUIScrollBars_GetScrollInfoMin($hWnd, $iBar)
_GUIScrollBars_GetScrollInfoPage($hWnd, $iBar)
_GUIScrollBars_GetScrollInfoPos($hWnd, $iBar)
_GUIScrollBars_GetScrollInfoTrackPos($hWnd, $iBar)
_GUIScrollBars_GetScrollPos($hWnd, $iBar)
_GUIScrollBars_GetScrollRange($hWnd, $iBar)
_GUIScrollBars_Init($hWnd [, $iMaxH = -1 [, $iMaxV = -1]])
_GUIScrollBars_ScrollWindow($hWnd, $iXAmount, $iYAmount)
_GUIScrollBars_SetScrollInfo($hWnd, $iBar, $tSCROLLINFO [, $bRedraw = True])
_GUIScrollBars_SetScrollInfoMax($hWnd, $iBar, $iMax)
_GUIScrollBars_SetScrollInfoMin($hWnd, $iBar, $iMin)
_GUIScrollBars_SetScrollInfoPage($hWnd, $iBar, $iPage)
_GUIScrollBars_SetScrollInfoPos($hWnd, $iBar, $iPos)
_GUIScrollBars_SetScrollRange($hWnd, $iBar, $iMinPos, $iMaxPos)
_GUIScrollBars_ShowScrollBar($hWnd, $iBar [, $bShow = True])
#EndRegion
#Region ; GuiSlider
#include <GuiSlider.au3>
_GUICtrlSlider_ClearSel($hWnd)
_GUICtrlSlider_ClearTics($hWnd)
_GUICtrlSlider_Create($hWnd, $iX, $iY [, $iWidth = 100 [, $iHeight = 20 [, $iStyle = $TBS_AUTOTICKS [, $iExStyle = 0x00000000]]]])
_GUICtrlSlider_Destroy(ByRef $hWnd)
_GUICtrlSlider_GetBuddy($hWnd, $bLocation)
_GUICtrlSlider_GetChannelRect($hWnd)
_GUICtrlSlider_GetChannelRectEx($hWnd)
_GUICtrlSlider_GetLineSize($hWnd)
_GUICtrlSlider_GetLogicalTics($hWnd)
_GUICtrlSlider_GetNumTics($hWnd)
_GUICtrlSlider_GetPageSize($hWnd)
_GUICtrlSlider_GetPos($hWnd)
_GUICtrlSlider_GetRange($hWnd)
_GUICtrlSlider_GetRangeMax($hWnd)
_GUICtrlSlider_GetRangeMin($hWnd)
_GUICtrlSlider_GetSel($hWnd)
_GUICtrlSlider_GetSelEnd($hWnd)
_GUICtrlSlider_GetSelStart($hWnd)
_GUICtrlSlider_GetThumbLength($hWnd)
_GUICtrlSlider_GetThumbRect($hWnd)
_GUICtrlSlider_GetThumbRectEx($hWnd)
_GUICtrlSlider_GetTic($hWnd, $iTic)
_GUICtrlSlider_GetTicPos($hWnd, $iTic)
_GUICtrlSlider_GetToolTips($hWnd)
_GUICtrlSlider_GetUnicodeFormat($hWnd)
_GUICtrlSlider_SetBuddy($hWnd, $bLocation, $hBuddy)
_GUICtrlSlider_SetLineSize($hWnd, $iLineSize)
_GUICtrlSlider_SetPageSize($hWnd, $iPageSize)
_GUICtrlSlider_SetPos($hWnd, $iPosition)
_GUICtrlSlider_SetRange($hWnd, $iMinimum, $iMaximum)
_GUICtrlSlider_SetRangeMax($hWnd, $iMaximum)
_GUICtrlSlider_SetRangeMin($hWnd, $iMinimum)
_GUICtrlSlider_SetSel($hWnd, $iMinimum, $iMaximum)
_GUICtrlSlider_SetSelEnd($hWnd, $iMaximum)
_GUICtrlSlider_SetSelStart($hWnd, $iMinimum)
_GUICtrlSlider_SetThumbLength($hWnd, $iLength)
_GUICtrlSlider_SetTic($hWnd, $iPosition)
_GUICtrlSlider_SetTicFreq($hWnd, $iFreg)
_GUICtrlSlider_SetTipSide($hWnd, $iLocation)
_GUICtrlSlider_SetToolTips($hWnd, $hWndTT)
_GUICtrlSlider_SetUnicodeFormat($hWnd, $bUnicode)
#EndRegion
#Region ; GuiStatusBar
#include <GuiStatusBar.au3>
_GUICtrlStatusBar_Create($hWnd [, $vPartEdge = -1 [, $vPartText = "" [, $iStyles = -1 [, $iExStyles = 0x00000000]]]])
_GUICtrlStatusBar_Destroy(ByRef $hWnd)
_GUICtrlStatusBar_EmbedControl($hWnd, $iPart, $hControl [, $iFit = 4])
_GUICtrlStatusBar_GetBorders($hWnd)
_GUICtrlStatusBar_GetBordersHorz($hWnd)
_GUICtrlStatusBar_GetBordersRect($hWnd)
_GUICtrlStatusBar_GetBordersVert($hWnd)
_GUICtrlStatusBar_GetCount($hWnd)
_GUICtrlStatusBar_GetHeight($hWnd)
_GUICtrlStatusBar_GetIcon($hWnd [, $iIndex = 0])
_GUICtrlStatusBar_GetParts($hWnd)
_GUICtrlStatusBar_GetRect($hWnd, $iPart)
_GUICtrlStatusBar_GetRectEx($hWnd, $iPart)
_GUICtrlStatusBar_GetText($hWnd, $iPart)
_GUICtrlStatusBar_GetTextFlags($hWnd, $iPart)
_GUICtrlStatusBar_GetTextLength($hWnd, $iPart)
_GUICtrlStatusBar_GetTextLengthEx($hWnd, $iPart)
_GUICtrlStatusBar_GetTipText($hWnd, $iPart)
_GUICtrlStatusBar_GetUnicodeFormat($hWnd)
_GUICtrlStatusBar_GetWidth($hWnd, $iPart)
_GUICtrlStatusBar_IsSimple($hWnd)
_GUICtrlStatusBar_Resize($hWnd)
_GUICtrlStatusBar_SetBkColor($hWnd, $iColor)
_GUICtrlStatusBar_SetIcon($hWnd, $iPart [, $hIcon = -1 [, $sIconFile = ""]])
_GUICtrlStatusBar_SetMinHeight($hWnd, $iMinHeight)
_GUICtrlStatusBar_SetParts($hWnd [, $vPartEdge = -1 [, $vPartWidth = 25]])
_GUICtrlStatusBar_SetSimple($hWnd [, $bSimple = True])
_GUICtrlStatusBar_SetText($hWnd [, $sText = "" [, $iPart = 0 [, $iUFlag = 0]]])
_GUICtrlStatusBar_SetTipText($hWnd, $iPart, $sText)
_GUICtrlStatusBar_SetUnicodeFormat($hWnd [, $bUnicode = True])
_GUICtrlStatusBar_ShowHide($hWnd, $iState)
#EndRegion
#Region ; GuiTab
#include <GuiTab.au3>
_GUICtrlTab_ActivateTab($hWnd, $iIndex)
_GUICtrlTab_ClickTab($hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
_GUICtrlTab_Create($hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000040 [, $iExStyle = 0x00000000]]]])
_GUICtrlTab_DeleteAllItems($hWnd)
_GUICtrlTab_DeleteItem($hWnd, $iIndex)
_GUICtrlTab_DeselectAll($hWnd [, $bExclude = True])
_GUICtrlTab_Destroy(ByRef $hWnd)
_GUICtrlTab_FindTab($hWnd, $sText [, $bInStr = False [, $iStart = 0]])
_GUICtrlTab_GetCurFocus($hWnd)
_GUICtrlTab_GetCurSel($hWnd)
_GUICtrlTab_GetDisplayRect($hWnd)
_GUICtrlTab_GetDisplayRectEx($hWnd)
_GUICtrlTab_GetExtendedStyle($hWnd)
_GUICtrlTab_GetImageList($hWnd)
_GUICtrlTab_GetItem($hWnd, $iIndex)
_GUICtrlTab_GetItemCount($hWnd)
_GUICtrlTab_GetItemImage($hWnd, $iIndex)
_GUICtrlTab_GetItemParam($hWnd, $iIndex)
_GUICtrlTab_GetItemRect($hWnd, $iIndex)
_GUICtrlTab_GetItemRectEx($hWnd, $iIndex)
_GUICtrlTab_GetItemState($hWnd, $iIndex)
_GUICtrlTab_GetItemText($hWnd, $iIndex)
_GUICtrlTab_GetRowCount($hWnd)
_GUICtrlTab_GetToolTips($hWnd)
_GUICtrlTab_GetUnicodeFormat($hWnd)
_GUICtrlTab_HighlightItem($hWnd, $iIndex [, $bHighlight = True])
_GUICtrlTab_HitTest($hWnd, $iX, $iY)
_GUICtrlTab_InsertItem($hWnd, $iIndex, $sText [, $iImage = -1 [, $iParam = 0]])
_GUICtrlTab_RemoveImage($hWnd, $iIndex)
_GUICtrlTab_SetCurFocus($hWnd, $iIndex)
_GUICtrlTab_SetCurSel($hWnd, $iIndex)
_GUICtrlTab_SetExtendedStyle($hWnd, $iStyle)
_GUICtrlTab_SetImageList($hWnd, $hImage)
_GUICtrlTab_SetItem($hWnd, $iIndex [, $sText = -1 [, $iState = -1 [, $iImage = -1 [, $iParam = -1]]]])
_GUICtrlTab_SetItemImage($hWnd, $iIndex, $iImage)
_GUICtrlTab_SetItemParam($hWnd, $iIndex, $iParam)
_GUICtrlTab_SetItemSize($hWnd, $iWidth, $iHeight)
_GUICtrlTab_SetItemState($hWnd, $iIndex, $iState)
_GUICtrlTab_SetItemText($hWnd, $iIndex, $sText)
_GUICtrlTab_SetMinTabWidth($hWnd, $iMinWidth)
_GUICtrlTab_SetPadding($hWnd, $iHorz, $iVert)
_GUICtrlTab_SetToolTips($hWnd, $hToolTip)
_GUICtrlTab_SetUnicodeFormat($hWnd, $bUnicode)
#EndRegion
#Region ; GuiToolbar
#include <GuiToolbar.au3>
_GUICtrlToolbar_AddBitmap($hWnd, $iButtons, $hInst, $iID)
_GUICtrlToolbar_AddButton($hWnd, $iID, $iImage [, $iString = 0 [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]])
_GUICtrlToolbar_AddButtonSep($hWnd [, $iWidth = 6])
_GUICtrlToolbar_AddString($hWnd, $sString)
_GUICtrlToolbar_ButtonCount($hWnd)
_GUICtrlToolbar_CheckButton($hWnd, $iCommandID [, $bCheck = True])
_GUICtrlToolbar_ClickAccel($hWnd, $sAccelKey [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
_GUICtrlToolbar_ClickButton($hWnd, $iCommandID [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
_GUICtrlToolbar_ClickIndex($hWnd, $iIndex [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]])
_GUICtrlToolbar_CommandToIndex($hWnd, $iCommandID)
_GUICtrlToolbar_Create($hWnd [, $iStyle = 0x00000800 [, $iExStyle = 0x00000000]])
_GUICtrlToolbar_Customize($hWnd)
_GUICtrlToolbar_DeleteButton($hWnd, $iCommandID)
_GUICtrlToolbar_Destroy(ByRef $hWnd)
_GUICtrlToolbar_EnableButton($hWnd, $iCommandID [, $bEnable = True])
_GUICtrlToolbar_FindToolbar($hWnd, $sText)
_GUICtrlToolbar_GetAnchorHighlight($hWnd)
_GUICtrlToolbar_GetBitmapFlags($hWnd)
_GUICtrlToolbar_GetButtonBitmap($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonInfo($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonInfoEx($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonParam($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonRect($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonRectEx($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonSize($hWnd)
_GUICtrlToolbar_GetButtonState($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonStyle($hWnd, $iCommandID)
_GUICtrlToolbar_GetButtonText($hWnd, $iCommandID)
_GUICtrlToolbar_GetColorScheme($hWnd)
_GUICtrlToolbar_GetDisabledImageList($hWnd)
_GUICtrlToolbar_GetExtendedStyle($hWnd)
_GUICtrlToolbar_GetHotImageList($hWnd)
_GUICtrlToolbar_GetHotItem($hWnd)
_GUICtrlToolbar_GetImageList($hWnd)
_GUICtrlToolbar_GetInsertMark($hWnd)
_GUICtrlToolbar_GetInsertMarkColor($hWnd)
_GUICtrlToolbar_GetMaxSize($hWnd)
_GUICtrlToolbar_GetMetrics($hWnd)
_GUICtrlToolbar_GetPadding($hWnd)
_GUICtrlToolbar_GetRows($hWnd)
_GUICtrlToolbar_GetString($hWnd, $iIndex)
_GUICtrlToolbar_GetStyle($hWnd)
_GUICtrlToolbar_GetStyleAltDrag($hWnd)
_GUICtrlToolbar_GetStyleCustomErase($hWnd)
_GUICtrlToolbar_GetStyleFlat($hWnd)
_GUICtrlToolbar_GetStyleList($hWnd)
_GUICtrlToolbar_GetStyleRegisterDrop($hWnd)
_GUICtrlToolbar_GetStyleToolTips($hWnd)
_GUICtrlToolbar_GetStyleTransparent($hWnd)
_GUICtrlToolbar_GetStyleWrapable($hWnd)
_GUICtrlToolbar_GetTextRows($hWnd)
_GUICtrlToolbar_GetToolTips($hWnd)
_GUICtrlToolbar_GetUnicodeFormat($hWnd)
_GUICtrlToolbar_HideButton($hWnd, $iCommandID [, $bHide = True])
_GUICtrlToolbar_HighlightButton($hWnd, $iCommandID [, $bHighlight = True])
_GUICtrlToolbar_HitTest($hWnd, $iX, $iY)
_GUICtrlToolbar_IndexToCommand($hWnd, $iIndex)
_GUICtrlToolbar_InsertButton($hWnd, $iIndex, $iID, $iImage [, $sText = "" [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]])
_GUICtrlToolbar_InsertMarkHitTest($hWnd, $iX, $iY)
_GUICtrlToolbar_IsButtonChecked($hWnd, $iCommandID)
_GUICtrlToolbar_IsButtonEnabled($hWnd, $iCommandID)
_GUICtrlToolbar_IsButtonHidden($hWnd, $iCommandID)
_GUICtrlToolbar_IsButtonHighlighted($hWnd, $iCommandID)
_GUICtrlToolbar_IsButtonIndeterminate($hWnd, $iCommandID)
_GUICtrlToolbar_IsButtonPressed($hWnd, $iCommandID)
_GUICtrlToolbar_LoadBitmap($hWnd, $sFileName)
_GUICtrlToolbar_LoadImages($hWnd, $iBitMapID)
_GUICtrlToolbar_MapAccelerator($hWnd, $sAccelKey)
_GUICtrlToolbar_MoveButton($hWnd, $iOldPos, $iNewPos)
_GUICtrlToolbar_PressButton($hWnd, $iCommandID [, $bPress = True])
_GUICtrlToolbar_SetAnchorHighlight($hWnd, $bAnchor)
_GUICtrlToolbar_SetBitmapSize($hWnd, $iWidth, $iHeight)
_GUICtrlToolbar_SetButtonBitMap($hWnd, $iCommandID, $iIndex)
_GUICtrlToolbar_SetButtonInfo($hWnd, $iCommandID [, $iImage = -3 [, $iState = -1 [, $iStyle = -1 [, $iWidth = -1 [, $iParam = -1]]]]])
_GUICtrlToolbar_SetButtonInfoEx($hWnd, $iCommandID, $tButton)
_GUICtrlToolbar_SetButtonParam($hWnd, $iCommandID, $iParam)
_GUICtrlToolbar_SetButtonSize($hWnd, $iHeight, $iWidth)
_GUICtrlToolbar_SetButtonState($hWnd, $iCommandID, $iState)
_GUICtrlToolbar_SetButtonStyle($hWnd, $iCommandID, $iStyle)
_GUICtrlToolbar_SetButtonText($hWnd, $iCommandID, $sText)
_GUICtrlToolbar_SetButtonWidth($hWnd, $iMin, $iMax)
_GUICtrlToolbar_SetCmdID($hWnd, $iIndex, $iCommandID)
_GUICtrlToolbar_SetColorScheme($hWnd, $iHighlight, $iShadow)
_GUICtrlToolbar_SetDisabledImageList($hWnd, $hImageList)
_GUICtrlToolbar_SetDrawTextFlags($hWnd, $iMask, $iDTFlags)
_GUICtrlToolbar_SetExtendedStyle($hWnd, $iStyle)
_GUICtrlToolbar_SetHotImageList($hWnd, $hImageList)
_GUICtrlToolbar_SetHotItem($hWnd, $iIndex)
_GUICtrlToolbar_SetImageList($hWnd, $hImageList)
_GUICtrlToolbar_SetIndent($hWnd, $iIndent)
_GUICtrlToolbar_SetIndeterminate($hWnd, $iCommandID [, $bState = True])
_GUICtrlToolbar_SetInsertMark($hWnd, $iButton [, $iFlags = 0])
_GUICtrlToolbar_SetInsertMarkColor($hWnd, $iColor)
_GUICtrlToolbar_SetMaxTextRows($hWnd, $iMaxRows)
_GUICtrlToolbar_SetMetrics($hWnd, $iXPad, $iYPad, $iXSpacing, $iYSpacing)
_GUICtrlToolbar_SetPadding($hWnd, $iCX, $iCY)
_GUICtrlToolbar_SetParent($hWnd, $hParent)
_GUICtrlToolbar_SetRows($hWnd, $iRows [, $bLarger = True])
_GUICtrlToolbar_SetStyle($hWnd, $iStyle)
_GUICtrlToolbar_SetStyleAltDrag($hWnd [, $bState = True])
_GUICtrlToolbar_SetStyleCustomErase($hWnd [, $bState = True])
_GUICtrlToolbar_SetStyleFlat($hWnd, $bState)
_GUICtrlToolbar_SetStyleList($hWnd, $bState)
_GUICtrlToolbar_SetStyleRegisterDrop($hWnd, $bState)
_GUICtrlToolbar_SetStyleToolTips($hWnd, $bState)
_GUICtrlToolbar_SetStyleTransparent($hWnd, $bState)
_GUICtrlToolbar_SetStyleWrapable($hWnd, $bState)
_GUICtrlToolbar_SetToolTips($hWnd, $hToolTip)
_GUICtrlToolbar_SetUnicodeFormat($hWnd [, $bUnicode = False])
_GUICtrlToolbar_SetWindowTheme($hWnd, $sTheme)
#EndRegion
#Region ; GuiToolTip
#include <GuiToolTip.au3>
_GUIToolTip_Activate($hWnd)
_GUIToolTip_AddTool($hTool, $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]])
_GUIToolTip_AdjustRect($hWnd, ByRef $tRECT [, $bLarger = True])
_GUIToolTip_BitsToTTF($iFlags)
_GUIToolTip_Create($hWnd [, $iStyle = $_TT_ghTTDefaultStyle])
_GUIToolTip_Deactivate($hWnd)
_GUIToolTip_DelTool($hWnd, $hTool [, $iID = 0])
_GUIToolTip_Destroy(ByRef $hWnd)
_GUIToolTip_EnumTools($hWnd, $iIndex)
_GUIToolTip_GetBubbleHeight($hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
_GUIToolTip_GetBubbleSize($hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
_GUIToolTip_GetBubbleWidth($hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010])
_GUIToolTip_GetCurrentTool($hWnd)
_GUIToolTip_GetDelayTime($hWnd, $iDuration)
_GUIToolTip_GetMargin($hWnd)
_GUIToolTip_GetMarginEx($hWnd)
_GUIToolTip_GetMaxTipWidth($hWnd)
_GUIToolTip_GetText($hWnd, $hTool, $iID)
_GUIToolTip_GetTipBkColor($hWnd)
_GUIToolTip_GetTipTextColor($hWnd)
_GUIToolTip_GetTitleBitMap($hWnd)
_GUIToolTip_GetTitleText($hWnd)
_GUIToolTip_GetToolCount($hWnd)
_GUIToolTip_GetToolInfo($hWnd, $hTool, $iID)
_GUIToolTip_HitTest($hWnd, $hTool, $iX, $iY)
_GUIToolTip_NewToolRect($hWnd, $hTool, $iID, $iLeft, $iTop, $iRight, $iBottom)
_GUIToolTip_Pop($hWnd)
_GUIToolTip_PopUp($hWnd)
_GUIToolTip_SetDelayTime($hWnd, $iDuration, $iTime)
_GUIToolTip_SetMargin($hWnd, $iLeft, $iTop, $iRight, $iBottom)
_GUIToolTip_SetMaxTipWidth($hWnd, $iWidth)
_GUIToolTip_SetTipBkColor($hWnd, $iColor)
_GUIToolTip_SetTipTextColor($hWnd, $iColor)
_GUIToolTip_SetTitle($hWnd, $sTitle [, $iIcon = 0])
_GUIToolTip_SetToolInfo($hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]])
_GUIToolTip_SetWindowTheme($hWnd, $sStyle)
_GUIToolTip_ToolExists($hWnd)
_GUIToolTip_ToolToArray($hWnd, ByRef $tToolInfo, $iError)
_GUIToolTip_TrackActivate($hWnd [, $bActivate = True [, $hTool = 0 [, $iID = 0]]])
_GUIToolTip_TrackPosition($hWnd, $iX, $iY)
_GUIToolTip_Update($hWnd)
_GUIToolTip_UpdateTipText($hWnd, $hTool, $iID, $sText)
#EndRegion
#Region ; GuiTreeView
#include <GuiTreeView.au3>
_GUICtrlTreeView_Add($hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]])
_GUICtrlTreeView_AddChild($hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]])
_GUICtrlTreeView_AddChildFirst($hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]])
_GUICtrlTreeView_AddFirst($hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]])
_GUICtrlTreeView_BeginUpdate($hWnd)
_GUICtrlTreeView_ClickItem($hWnd, $hItem [, $sButton = "left" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]])
_GUICtrlTreeView_Create($hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000037 [, $iExStyle = 0x00000000]]]])
_GUICtrlTreeView_CreateDragImage($hWnd, $hItem)
_GUICtrlTreeView_CreateSolidBitMap($hWnd, $iColor, $iWidth, $iHeight)
_GUICtrlTreeView_Delete($hWnd [, $hItem = Null])
_GUICtrlTreeView_DeleteAll($hWnd)
_GUICtrlTreeView_DeleteChildren($hWnd, $hItem)
_GUICtrlTreeView_Destroy(ByRef $hWnd)
_GUICtrlTreeView_DisplayRect($hWnd, $hItem [, $bTextOnly = False])
_GUICtrlTreeView_DisplayRectEx($hWnd, $hItem [, $bTextOnly = False])
_GUICtrlTreeView_EditText($hWnd, $hItem)
_GUICtrlTreeView_EndEdit($hWnd [, $bCancel = False])
_GUICtrlTreeView_EndUpdate($hWnd)
_GUICtrlTreeView_EnsureVisible($hWnd, $hItem)
_GUICtrlTreeView_Expand($hWnd [, $hItem = Null [, $bExpand = True]])
_GUICtrlTreeView_ExpandedOnce($hWnd, $hItem)
_GUICtrlTreeView_FindItem($hWnd, $sText [, $bInStr = False [, $hStart = 0]])
_GUICtrlTreeView_FindItemEx($hWnd, $sTreePath [, $hStart = 0])
_GUICtrlTreeView_GetBkColor($hWnd)
_GUICtrlTreeView_GetBold($hWnd, $hItem)
_GUICtrlTreeView_GetChecked($hWnd, $hItem)
_GUICtrlTreeView_GetChildCount($hWnd, $hItem)
_GUICtrlTreeView_GetChildren($hWnd, $hItem)
_GUICtrlTreeView_GetCount($hWnd)
_GUICtrlTreeView_GetCut($hWnd, $hItem)
_GUICtrlTreeView_GetDropTarget($hWnd, $hItem)
_GUICtrlTreeView_GetEditControl($hWnd)
_GUICtrlTreeView_GetExpanded($hWnd, $hItem)
_GUICtrlTreeView_GetFirstChild($hWnd, $hItem)
_GUICtrlTreeView_GetFirstItem($hWnd)
_GUICtrlTreeView_GetFirstVisible($hWnd)
_GUICtrlTreeView_GetFocused($hWnd, $hItem)
_GUICtrlTreeView_GetHeight($hWnd)
_GUICtrlTreeView_GetImageIndex($hWnd, $hItem)
_GUICtrlTreeView_GetImageListIconHandle($hWnd, $iIndex)
_GUICtrlTreeView_GetIndent($hWnd)
_GUICtrlTreeView_GetInsertMarkColor($hWnd)
_GUICtrlTreeView_GetISearchString($hWnd)
_GUICtrlTreeView_GetItemByIndex($hWnd, $hItem, $iIndex)
_GUICtrlTreeView_GetItemHandle($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetItemParam($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetLastChild($hWnd, $hItem)
_GUICtrlTreeView_GetLastItem($hWnd)
_GUICtrlTreeView_GetLineColor($hWnd)
_GUICtrlTreeView_GetNext($hWnd, $hItem)
_GUICtrlTreeView_GetNextChild($hWnd, $hItem)
_GUICtrlTreeView_GetNextSibling($hWnd, $hItem)
_GUICtrlTreeView_GetNextVisible($hWnd, $hItem)
_GUICtrlTreeView_GetNormalImageList($hWnd)
_GUICtrlTreeView_GetParentHandle($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetParentParam($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetPrev($hWnd, $hItem)
_GUICtrlTreeView_GetPrevChild($hWnd, $hItem)
_GUICtrlTreeView_GetPrevSibling($hWnd, $hItem)
_GUICtrlTreeView_GetPrevVisible($hWnd, $hItem)
_GUICtrlTreeView_GetScrollTime($hWnd)
_GUICtrlTreeView_GetSelected($hWnd, $hItem)
_GUICtrlTreeView_GetSelectedImageIndex($hWnd, $hItem)
_GUICtrlTreeView_GetSelection($hWnd)
_GUICtrlTreeView_GetSiblingCount($hWnd, $hItem)
_GUICtrlTreeView_GetState($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetStateImageIndex($hWnd, $hItem)
_GUICtrlTreeView_GetStateImageList($hWnd)
_GUICtrlTreeView_GetText($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetTextColor($hWnd)
_GUICtrlTreeView_GetToolTips($hWnd)
_GUICtrlTreeView_GetTree($hWnd [, $hItem = Null])
_GUICtrlTreeView_GetUnicodeFormat($hWnd)
_GUICtrlTreeView_GetVisible($hWnd, $hItem)
_GUICtrlTreeView_GetVisibleCount($hWnd)
_GUICtrlTreeView_HitTest($hWnd, $iX, $iY)
_GUICtrlTreeView_HitTestEx($hWnd, $iX, $iY)
_GUICtrlTreeView_HitTestItem($hWnd, $iX, $iY)
_GUICtrlTreeView_Index($hWnd, $hItem)
_GUICtrlTreeView_InsertItem($hWnd, $sItem_Text [, $hItem_Parent = 0 [, $hItem_After = 0 [, $iImage = -1 [, $iSelImage = -1]]]])
_GUICtrlTreeView_IsFirstItem($hWnd, $hItem)
_GUICtrlTreeView_IsParent($hWnd, $hParent, $hItem)
_GUICtrlTreeView_Level($hWnd, $hItem)
_GUICtrlTreeView_SelectItem($hWnd, $hItem [, $iFlag = 0])
_GUICtrlTreeView_SelectItemByIndex($hWnd, $hItem, $iIndex)
_GUICtrlTreeView_SetBkColor($hWnd, $vRGBColor)
_GUICtrlTreeView_SetBold($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetChecked($hWnd, $hItem [, $bCheck = True])
_GUICtrlTreeView_SetCheckedByIndex($hWnd, $hItem, $iIndex [, $bCheck = True])
_GUICtrlTreeView_SetChildren($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetCut($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetDropTarget($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetFocused($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetHeight($hWnd, $iHeight)
_GUICtrlTreeView_SetIcon($hWnd [, $hItem = Null [, $sIconFile = "" [, $iIconID = 0 [, $iImageMode = 6]]]])
_GUICtrlTreeView_SetImageIndex($hWnd, $hItem, $iIndex)
_GUICtrlTreeView_SetIndent($hWnd, $iIndent)
_GUICtrlTreeView_SetInsertMark($hWnd, $hItem [, $bAfter = True])
_GUICtrlTreeView_SetInsertMarkColor($hWnd, $iColor)
_GUICtrlTreeView_SetItemHeight($hWnd, $hItem, $iIntegral)
_GUICtrlTreeView_SetItemParam($hWnd, $hItem, $iParam)
_GUICtrlTreeView_SetLineColor($hWnd, $vRGBColor)
_GUICtrlTreeView_SetNormalImageList($hWnd, $hImageList)
_GUICtrlTreeView_SetScrollTime($hWnd, $iTime)
_GUICtrlTreeView_SetSelected($hWnd, $hItem [, $bFlag = True])
_GUICtrlTreeView_SetSelectedImageIndex($hWnd, $hItem, $iIndex)
_GUICtrlTreeView_SetState($hWnd, $hItem [, $iState = 0 [, $bSetState = True]])
_GUICtrlTreeView_SetStateImageIndex($hWnd, $hItem, $iIndex)
_GUICtrlTreeView_SetStateImageList($hWnd, $hImageList)
_GUICtrlTreeView_SetText($hWnd [, $hItem = Null [, $sText = ""]])
_GUICtrlTreeView_SetTextColor($hWnd, $vRGBColor)
_GUICtrlTreeView_SetToolTips($hWnd, $hToolTip)
_GUICtrlTreeView_SetUnicodeFormat($hWnd [, $bFormat = True])
_GUICtrlTreeView_Sort($hWnd)
#EndRegion
#EndRegion
#Region ; IE
#include <IE.au3>
_IE_Example([$sModule = "basic"])
_IE_Introduction([$sModule = "basic"])
_IE_VersionInfo()
_IEAction(ByRef $oObject, $sAction)
_IEAttach($sString [, $sMode = "title" [, $iInstance = 1]])
_IEBodyReadHTML(ByRef $oObject)
_IEBodyReadText(ByRef $oObject)
_IEBodyWriteHTML(ByRef $oObject, $sHTML)
_IECreate([$sUrl = "about:blank" [, $iTryAttach = 0 [, $iVisible = 1 [, $iWait = 1 [, $iTakeFocus = 1]]]]])
_IECreateEmbedded()
_IEDocGetObj(ByRef $oObject)
_IEDocInsertHTML(ByRef $oObject, $sString [, $sWhere = "beforeend"])
_IEDocInsertText(ByRef $oObject, $sString [, $sWhere = "beforeend"])
_IEDocReadHTML(ByRef $oObject)
_IEDocWriteHTML(ByRef $oObject, $sHTML)
_IEErrorNotify([$vNotify = Default])
_IEFormElementCheckBoxSelect(ByRef $oObject, $sString [, $sName = "" [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]]])
_IEFormElementGetCollection(ByRef $oObject [, $iIndex = -1])
_IEFormElementGetObjByName(ByRef $oObject, $sName [, $iIndex = 0])
_IEFormElementGetValue(ByRef $oObject)
_IEFormElementOptionSelect(ByRef $oObject, $sString [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]])
_IEFormElementRadioSelect(ByRef $oObject, $sString, $sName [, $iSelect = 1 [, $sMode = "byValue" [, $iFireEvent = 1]]])
_IEFormElementSetValue(ByRef $oObject, $sNewValue [, $iFireEvent = 1])
_IEFormGetCollection(ByRef $oObject [, $iIndex = -1])
_IEFormGetObjByName(ByRef $oObject, $sName [, $iIndex = 0])
_IEFormImageClick(ByRef $oObject, $sLinkText [, $sMode = "src" [, $iIndex = 0 [, $iWait = 1]]])
_IEFormReset(ByRef $oObject)
_IEFormSubmit(ByRef $oObject [, $iWait = 1])
_IEFrameGetCollection(ByRef $oObject [, $iIndex = -1])
_IEFrameGetObjByName(ByRef $oObject, $sName)
_IEGetObjById(ByRef $oObject, $sID)
_IEGetObjByName(ByRef $oObject, $sName [, $iIndex = 0])
_IEHeadInsertEventScript(ByRef $oObject, $sHTMLFor, $sEvent, $sScript)
_IEImgClick(ByRef $oObject, $sLinkText [, $sMode = "src" [, $iIndex = 0 [, $iWait = 1]]])
_IEImgGetCollection(ByRef $oObject [, $iIndex = -1])
_IEIsFrameSet(ByRef $oObject)
_IELinkClickByIndex(ByRef $oObject, $iIndex [, $iWait = 1])
_IELinkClickByText(ByRef $oObject, $sLinkText [, $iIndex = 0 [, $iWait = 1]])
_IELinkGetCollection(ByRef $oObject [, $iIndex = -1])
_IELoadWait(ByRef $oObject [, $iDelay = 0 [, $iTimeout = -1]])
_IELoadWaitTimeout([$iTimeout = -1])
_IENavigate(ByRef $oObject, $sUrl [, $iWait = 1])
_IEPropertyGet(ByRef $oObject, $sProperty)
_IEPropertySet(ByRef $oObject, $sProperty, $vValue)
_IEQuit(ByRef $oObject)
_IETableGetCollection(ByRef $oObject [, $iIndex = -1])
_IETableWriteToArray(ByRef $oObject [, $bTranspose = False])
_IETagNameAllGetCollection(ByRef $oObject [, $iIndex = -1])
_IETagNameGetCollection(ByRef $oObject, $sTagName [, $iIndex = -1])
#EndRegion
#Region ; Inet
#include <Inet.au3>
_GetIP()
_INetExplorerCapable($sIEString)
_INetGetSource($sURL [, $bString = True])
_INetMail($sMailTo, $sMailSubject, $sMailBody)
_INetSmtpMail($sSMTPServer, $sFromName, $sFromAddress, $sToAddress [, $sSubject = "" [, $aBody = "" [, $sEHLO = "" [, $sFirst = " " [, $bTrace = 0]]]]])
_TCPIpToName($sIp [, $iOption = 0 [, $hDll = "Ws2_32.dll"]])
#EndRegion
#include <Math.au3>
_Degree($iRadians)
_Max($iNum1, $iNum2)
_Min($iNum1, $iNum2)
_Radian($iDegrees)
#Region ; Memory
#include <Memory.au3>
_MemGlobalAlloc($iBytes [, $iFlags = 0])
_MemGlobalFree($hMemory)
_MemGlobalLock($hMemory)
_MemGlobalReAlloc($hMemory, $iBytes [, $iFlags = 0])
_MemGlobalSize($hMemory)
_MemGlobalUnlock($hMemory)
_MemMoveMemory($pSource, $pDest, $iLength)
_MemVirtualAlloc($pAddress, $iSize, $iAllocation, $iProtect)
_MemVirtualAllocEx($hProcess, $pAddress, $iSize, $iAllocation, $iProtect)
_MemVirtualFree($pAddress, $iSize, $iFreeType)
_MemVirtualFreeEx($hProcess, $pAddress, $iSize, $iFreeType)
#EndRegion
#Region ; Misc
#include <Misc.au3>
_ChooseColor([$vReturnType = 0 [, $iColorRef = 0 [, $iRefType = 0 [, $hWndOwnder = 0]]]])
_ChooseFont([$sFontName = "Courier New" [, $iPointSize = 10 [, $iFontColorRef = 0 [, $iFontWeight = 0 [, $bItalic = False [, $bUnderline = False [, $bStrikethru = False [, $hWndOwner = 0]]]]]]]])
_ClipPutFile($sFilePath [, $sDelimiter = "|"])
_FormatAutoItExitCode()
_FormatAutoItExitMethod()
_IsPressed($sHexKey [, $vDLL = "user32.dll"])
_MouseTrap([$iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0]]]])
_Singleton($sOccurrenceName [, $iFlag = 0])
_VersionCompare($sVersion1, $sVersion2)
#EndRegion
#Region ; NamedPipes
#include <NamedPipes.au3>
_NamedPipes_CallNamedPipe($sPipeName, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize, ByRef $iRead [, $iTimeOut = 0])
_NamedPipes_ConnectNamedPipe($hNamedPipe [, $tOverlapped = 0])
_NamedPipes_CreateNamedPipe($sName [, $iAccess = 2 [, $iFlags = 2 [, $iACL = 0 [, $iType = 1 [, $iRead = 1 [, $iWait = 0 [, $iMaxInst = 25 [, $iOutBufSize = 4096 [, $iInpBufSize = 4096 [, $iDefaultTimeout = 5000 [, $tSecurity = 0]]]]]]]]]]])
_NamedPipes_CreatePipe(ByRef $hReadPipe, ByRef $hWritePipe [, $tSecurity = 0 [, $iSize = 0]])
_NamedPipes_DisconnectNamedPipe($hNamedPipe)
_NamedPipes_GetNamedPipeHandleState($hNamedPipe)
_NamedPipes_GetNamedPipeInfo($hNamedPipe)
_NamedPipes_PeekNamedPipe($hNamedPipe)
_NamedPipes_SetNamedPipeHandleState($hNamedPipe, $iRead, $iWait [, $iBytes = 0 [, $iTimeOut = 0]])
_NamedPipes_TransactNamedPipe($hNamedPipe, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize [, $tOverlapped = 0])
_NamedPipes_WaitNamedPipe($sPipeName [, $iTimeOut = 0])
#EndRegion
#Region ; NetShare
#include <NetShare.au3>
_Net_Share_ConnectionEnum($sServer, $sQualifier)
_Net_Share_FileClose($sServer, $iFileID)
_Net_Share_FileEnum([$sServer = "" [, $sBaseName = "" [, $sUserName = ""]]])
_Net_Share_FileGetInfo($sServer, $iFileID)
_Net_Share_PermStr($iPerm)
_Net_Share_ResourceStr($iResource)
_Net_Share_SessionDel([$sServer = "" [, $sClientName = "" [, $sUserName = ""]]])
_Net_Share_SessionEnum([$sServer = "" [, $sClientName = "" [, $sUserName = ""]]])
_Net_Share_SessionGetInfo($sServer, $sClientName, $sUserName)
_Net_Share_ShareAdd($sServer, $sShare, $iType, $sResourcePath [, $sComment = "" [, $iMaxUses = -1]])
_Net_Share_ShareCheck($sServer, $sResourcePath)
_Net_Share_ShareDel($sServer, $sShare)
_Net_Share_ShareEnum([$sServer = ""])
_Net_Share_ShareGetInfo($sServer, $sShare)
_Net_Share_ShareSetInfo($sServer, $sShare, $sComment, $iMaxUses)
_Net_Share_StatisticsGetSvr([$sServer = ""])
_Net_Share_StatisticsGetWrk([$sWorkStation = ""])
#EndRegion
#include <Process.au3>
_ProcessGetName($iPID)
_ProcessGetPriority($vProcess)
_RunDos($sCommand)
#Region ; ScreenCapture
#include <ScreenCapture.au3>
_ScreenCapture_Capture([$sFileName = "" [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]]])
_ScreenCapture_CaptureWnd($sFileName, $hWnd [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]])
_ScreenCapture_SaveImage($sFileName, $hBitmap [, $bFreeBmp = True])
_ScreenCapture_SetBMPFormat($iFormat)
_ScreenCapture_SetJPGQuality($iQuality)
_ScreenCapture_SetTIFColorDepth($iDepth)
_ScreenCapture_SetTIFCompression($iCompress)
#EndRegion
#Region ; Security
#include <Security.au3>
_Security__AdjustTokenPrivileges($hToken, $bDisableAll, $tNewState, $iBufferLen [, $tPrevState = 0 [, $pRequired = 0]])
_Security__CreateProcessWithToken($hToken, $iLogonFlags, $sCommandLine, $iCreationFlags, $sCurDir, $tSTARTUPINFO, $tPROCESS_INFORMATION)
_Security__DuplicateTokenEx($hExistingToken, $iDesiredAccess, $iImpersonationLevel, $iTokenType)
_Security__GetAccountSid($sAccount [, $sSystem = ""])
_Security__GetLengthSid($pSID)
_Security__GetTokenInformation($hToken, $iClass)
_Security__ImpersonateSelf([$iLevel = $SECURITYIMPERSONATION])
_Security__IsValidSid($pSID)
_Security__LookupAccountName($sAccount [, $sSystem = ""])
_Security__LookupAccountSid($vSID [, $sSystem = ""])
_Security__LookupPrivilegeValue($sSystem, $sName)
_Security__OpenProcessToken($hProcess, $iAccess)
_Security__OpenThreadToken($iAccess [, $hThread = 0 [, $bOpenAsSelf = False]])
_Security__OpenThreadTokenEx($iAccess [, $hThread = 0 [, $bOpenAsSelf = False]])
_Security__SetPrivilege($hToken, $sPrivilege, $bEnable)
_Security__SetTokenInformation($hToken, $iTokenInformation, $vTokenInformation, $iTokenInformationLength)
_Security__SidToStringSid($pSID)
_Security__SidTypeStr($iType)
_Security__StringSidToSid($sSID)
#EndRegion
#include <SendMessage.au3>
_SendMessage($hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = "wparam" [, $lParamType = "lparam" [, $sReturnType = "lresult"]]]]]])
_SendMessageA($hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = "wparam" [, $lParamType = "lparam" [, $sReturnType = "lresult"]]]]]])
#Region ; Sound
#include <Sound.au3>
_SoundClose($aSndID)
_SoundLength($aSndID [, $iMode = 1])
_SoundOpen($sFilePath)
_SoundPause($aSndID)
_SoundPlay($aSndID [, $iWait = 0])
_SoundPos($aSndID [, $iMode = 1])
_SoundResume($aSndID)
_SoundSeek(ByRef $aSndID, $iHour, $iMin, $iSec)
_SoundStatus($aSndID)
_SoundStop(ByRef $aSndID)
#EndRegion
#Region ; SQLite
#include <SQLite.au3>
_SQLite_Changes([$hDB = -1])
_SQLite_Close([$hDB = -1])
_SQLite_Display2DResult($aResult [, $iCellWidth = 0 [, $bReturn = False [, $sDelim_Col = "" [, $sDelim_Row = @CRLF]]]])
_SQLite_Encode($vData)
_SQLite_ErrCode([$hDB = -1])
_SQLite_ErrMsg([$hDB = -1])
_SQLite_Escape($sString [, $iBuffSize = Default])
_SQLite_Exec($hDB, $sSQL [, $sCallBack = ""])
_SQLite_FastEncode($vData)
_SQLite_FastEscape($sString)
_SQLite_FetchData($hQuery, ByRef $aRow [, $bBinary = False [, $bDoNotFinalize = False [, $iColumns = 0 [, $bAutoItTypeConversion = False]]]])
_SQLite_FetchNames($hQuery, ByRef $aNames)
_SQLite_GetTable($hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1])
_SQLite_GetTable2D($hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1 [, $bSwichDimensions = False]])
_SQLite_GetTableData2D($hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $aNames)
_SQLite_LastInsertRowID([$hDB = -1])
_SQLite_LibVersion()
_SQLite_Open([$sDatabase_Filename = ":memory:" [, $iAccessMode = Default [, $iEncoding = $SQLITE_ENCODING_UTF8]]])
_SQLite_Query($hDB, $sSQL, ByRef $hQuery)
_SQLite_QueryFinalize($hQuery)
_SQLite_QueryReset($hQuery)
_SQLite_QuerySingleRow($hDB, $sSQL, ByRef $aRow)
_SQLite_SafeMode($bSafeModeState)
_SQLite_SetTimeout([$hDB = -1 [, $iTimeout = 1000]])
_SQLite_Shutdown()
_SQLite_SQLiteExe($sDatabaseFile, $sInput, ByRef $sOutput [, $sSQLiteExeFilename = "sqlite3.exe" [, $bDebug = False]])
_SQLite_Startup([$sDll_Filename = "" [, $bUTF8ErrorMsg = False [, $iForceLocal = 0 [, $hPrintCallback = $__g_hPrintCallback_SQLite [, $bAutoItTypeConversion = False]]]]])
_SQLite_TotalChanges([$hDB = -1])
#EndRegion
#Region ; String
#include <String.au3>
_HexToString($sHex)
_StringBetween($sString, $sStart, $sEnd [, $iMode = $STR_ENDISSTART [, $bCase = False]])
_StringExplode($sString, $sDelimiter [, $iLimit = 0])
_StringInsert($sString, $sInsertion, $iPosition)
_StringProper($sString)
_StringRepeat($sString, $iRepeatCount)
_StringTitleCase($sString)
_StringToHex($sString)
#EndRegion
#Region ; Timers
#include <Timers.au3>
_Timer_Diff($iTimeStamp)
_Timer_GetIdleTime()
_Timer_GetTimerID($wParam)
_Timer_Init()
_Timer_KillAllTimers($hWnd)
_Timer_KillTimer($hWnd, $iTimerID)
_Timer_SetTimer($hWnd [, $iElapse = 250 [, $sTimerFunc = "" [, $iTimerID = -1]]])
#EndRegion
#Region ; Visa
#include <Visa.au3>
_viClose($hSession)
_viExecCommand($hSession, $sCommand [, $iTimeoutMS = -1 [, $sMode = @LF]])
_viFindGpib(ByRef $aDescriptorList, ByRef $aIDNList [, $iShow_Search_Results = 0])
_viGpibBusReset()
_viGTL($hSession)
_viInteractiveControl([$sCommand_Save_FilePath = ""])
_viOpen($sVisa_Address [, $sVisa_Secondary_Address = 0])
_viSetAttribute($hSession, $iAttribute, $iValue)
_viSetTimeout($hSession, $iTimeoutMS)
#EndRegion
#Region ; WinAPIEx
#Region ; COM
#include <WinAPICom.au3>
_WinAPI_CLSIDFromProgID($sProgID)
_WinAPI_CoInitialize([$iFlags = 0])
_WinAPI_CoTaskMemAlloc($iSize)
_WinAPI_CoTaskMemFree($pMemory)
_WinAPI_CoTaskMemRealloc($pMemory, $iSize)
_WinAPI_CoUninitialize()
_WinAPI_CreateGUID()
_WinAPI_CreateStreamOnHGlobal([$hGlobal = 0 [, $bDeleteOnRelease = True]])
_WinAPI_GetHGlobalFromStream($pStream)
_WinAPI_ProgIDFromCLSID($sCLSID)
_WinAPI_ReleaseStream($pStream)
#EndRegion
#Region ; Conversion
#include <WinAPIConv.au3>
_WinAPI_CharToOem($sStr)
_WinAPI_ClientToScreen($hWnd, ByRef $tPoint)
_WinAPI_DWordToFloat($iValue)
_WinAPI_DWordToInt($iValue)
_WinAPI_FloatToDWord($iValue)
_WinAPI_FloatToInt($nFloat)
_WinAPI_GetXYFromPoint(ByRef $tPoint, ByRef $iX, ByRef $iY)
_WinAPI_GUIDFromString($sGUID)
_WinAPI_GUIDFromStringEx($sGUID, $tGUID)
_WinAPI_HashData($pMemory, $iSize [, $iLength = 32])
_WinAPI_HashString($sString [, $bCaseSensitive = True [, $iLength = 32]])
_WinAPI_HiByte($iValue)
_WinAPI_HiDWord($iValue)
_WinAPI_HiWord($iValue)
_WinAPI_IntToDWord($iValue)
_WinAPI_IntToFloat($iInt)
_WinAPI_LoByte($iValue)
_WinAPI_LoDWord($iValue)
_WinAPI_LongMid($iValue, $iStart, $iCount)
_WinAPI_LoWord($iLong)
_WinAPI_MAKELANGID($iLngIDPrimary, $iLngIDSub)
_WinAPI_MAKELCID($iLngID, $iSortID)
_WinAPI_MakeLong($iLo, $iHi)
_WinAPI_MakeQWord($iLoDWORD, $iHiDWORD)
_WinAPI_MakeWord($iLo, $iHi)
_WinAPI_MultiByteToWideChar($vText [, $iCodePage = 0 [, $iFlags = 0 [, $bRetString = False]]])
_WinAPI_MultiByteToWideCharEx($sText, $pText [, $iCodePage = 0 [, $iFlags = 0]])
_WinAPI_OemToChar($sStr)
_WinAPI_PointFromRect(ByRef $tRECT [, $bCenter = True])
_WinAPI_PrimaryLangId($iLngID)
_WinAPI_ScreenToClient($hWnd, ByRef $tPoint)
_WinAPI_ShortToWord($iValue)
_WinAPI_StrFormatByteSize($iSize)
_WinAPI_StrFormatByteSizeEx($iSize)
_WinAPI_StrFormatKBSize($iSize)
_WinAPI_StrFromTimeInterval($iTime [, $iDigits = 7])
_WinAPI_StringFromGUID($tGUID)
_WinAPI_SubLangId($iLngID)
_WinAPI_SwapDWord($iValue)
_WinAPI_SwapQWord($iValue)
_WinAPI_SwapWord($iValue)
_WinAPI_WideCharToMultiByte($vUnicode [, $iCodePage = 0 [, $bRetNoStruct = True [, $bRetBinary = False]]])
_WinAPI_WordToShort($iValue)
#EndRegion
#Region ; Diagnostic
#include <WinAPIDiag.au3>
_WinAPI_DisplayStruct($tStruct [, $sStruct = '' [, $sTitle = '' [, $iItem = 0 [, $iSubItem = 0 [, $iFlags = 0 [, $bTop = True [, $hParent = 0]]]]]]])
_WinAPI_EnumDllProc($sFilePath [, $sMask = '' [, $iFlags = 0]])
_WinAPI_FatalExit($iCode)
_WinAPI_GetApplicationRestartSettings([$iPID = 0])
_WinAPI_GetErrorMode()
_WinAPI_IsInternetConnected()
_WinAPI_IsNetworkAlive()
_WinAPI_NtStatusToDosError($iStatus)
_WinAPI_RegisterApplicationRestart([$iFlags = 0 [, $sCmd = '']])
_WinAPI_SetErrorMode($iMode)
_WinAPI_UniqueHardwareID([$iFlags = 0])
_WinAPI_UnregisterApplicationRestart()
#EndRegion
#Region ; Dialog
#include <WinAPIDlg.au3>
_WinAPI_BrowseForFolderDlg([$sRoot = '' [, $sText = '' [, $iFlags = 0 [, $pBrowseProc = 0 [, $lParam = 0 [, $hParent = 0]]]]]])
_WinAPI_CommDlgExtendedError()
_WinAPI_CommDlgExtendedErrorEx()
_WinAPI_ConfirmCredentials($sTarget, $bConfirm)
_WinAPI_FindTextDlg($hOwner [, $sFindWhat = '' [, $iFlags = 0 [, $pFindProc = 0 [, $lParam = 0]]]])
_WinAPI_FlushFRBuffer()
_WinAPI_FormatDriveDlg($sDrive [, $iOption = 0 [, $hParent = 0]])
_WinAPI_GetConnectedDlg($iDlg [, $iFlags = 0 [, $hParent = 0]])
_WinAPI_GetDlgCtrlID($hWnd)
_WinAPI_GetFRBuffer()
_WinAPI_GetOpenFileName([$sTitle = "" [, $sFilter = "All files (*.*)" [, $sInitalDir = "." [, $sDefaultFile = "" [, $sDefaultExt = "" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]])
_WinAPI_GetSaveFileName([$sTitle = "" [, $sFilter = "All files (*.*)" [, $sInitalDir = "." [, $sDefaultFile = "" [, $sDefaultExt = "" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]])
_WinAPI_MessageBoxCheck($iType, $sTitle, $sText, $sRegVal [, $iDefault = -1 [, $hParent = 0]])
_WinAPI_MessageBoxIndirect($tMSGBOXPARAMS)
_WinAPI_OpenFileDlg([$sTitle = '' [, $sInitDir = '' [, $sFilters = '' [, $iDefaultFilter = 0 [, $sDefaultFilePath = '' [, $sDefaultExt = '' [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]])
_WinAPI_PageSetupDlg(ByRef $tPAGESETUPDLG)
_WinAPI_PickIconDlg([$sIcon = '' [, $iIndex = 0 [, $hParent = 0]]])
_WinAPI_PrintDlg(ByRef $tPRINTDLG)
_WinAPI_PrintDlgEx(ByRef $tPRINTDLGEX)
_WinAPI_ReplaceTextDlg($hOwner [, $sFindWhat = '' [, $sReplaceWith = '' [, $iFlags = 0 [, $pReplaceProc = 0 [, $lParam = 0]]]]])
_WinAPI_RestartDlg([$sText = '' [, $iFlags = 2 [, $hParent = 0]]])
_WinAPI_SaveFileDlg([$sTitle = "" [, $sInitDir = "" [, $sFilters = "" [, $iDefaultFilter = 0 [, $sDefaultFilePath = "" [, $sDefaultExt = "" [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]])
_WinAPI_SetFRBuffer($iChars)
_WinAPI_ShellAboutDlg($sTitle, $sName, $sText [, $hIcon = 0 [, $hParent = 0]])
_WinAPI_ShellOpenWithDlg($sFilePath [, $iFlags = 0 [, $hParent = 0]])
_WinAPI_ShellStartNetConnectionDlg([$sRemote = '' [, $iFlags = 0 [, $hParent = 0]]])
_WinAPI_ShellUserAuthenticationDlg($sCaption, $sMessage, $sUser, $sPassword, $sTarget [, $iFlags = 0 [, $iError = 0 [, $bSave = False [, $hBitmap = 0 [, $hParent = 0]]]]])
_WinAPI_ShellUserAuthenticationDlgEx($sCaption, $sMessage, $sUser, $sPassword [, $iFlags = 0 [, $iAuthError = 0 [, $bSave = False [, $iPackage = 0 [, $hParent = 0]]]]])
#EndRegion
#Region ; Error
#include <WinAPIError.au3>
_WinAPI_Beep([$iFreq = 500 [, $iDuration = 1000]])
_WinAPI_FormatMessage($iFlags, $pSource, $iMessageID, $iLanguageID, ByRef $pBuffer, $iSize, $vArguments)
_WinAPI_GetErrorMessage($iCode [, $iLanguage = 0])
_WinAPI_GetLastError()
_WinAPI_GetLastErrorMessage()
_WinAPI_MessageBeep([$iType = 1])
_WinAPI_MsgBox($iFlags, $sTitle, $sText)
_WinAPI_SetLastError($iErrorCode)
_WinAPI_ShowError($sText [, $bExit = True])
_WinAPI_ShowLastError([$sText = '' [, $bAbort = False [, $iLanguage = 0]]])
_WinAPI_ShowMsg($sText)
#EndRegion
#Region ; Files & Devices
#include <WinAPIFiles.au3>
#Region ; DataAccess & Storage
_WinAPI_BackupRead($hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False])
_WinAPI_BackupReadAbort(ByRef $pContext)
_WinAPI_BackupSeek($hFile, $iSeek, ByRef $iBytes, ByRef $pContext)
_WinAPI_BackupWrite($hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False])
_WinAPI_BackupWriteAbort(ByRef $pContext)
_WinAPI_DefineDosDevice($sDevice, $iFlags [, $sFilePath = ''])
_WinAPI_GetDriveType([$sDrive = ''])
_WinAPI_GetLogicalDrives()
_WinAPI_GetPEType($sFilePath)
_WinAPI_QueryDosDevice($sDevice)
_WinAPI_Wow64EnableWow64FsRedirection($bEnable)
#EndRegion
#Region ; DevicesIoCtl
_WinAPI_CreateObjectID($sFilePath)
_WinAPI_DeleteObjectID($sFilePath)
_WinAPI_DeviceIoControl($hDevice, $iControlCode [, $pInBuffer = 0 [, $iInBufferSize = 0 [, $pOutBuffer = 0 [, $iOutBufferSize = 0]]]])
_WinAPI_EjectMedia($sDrive)
_WinAPI_GetCDType($sDrive)
_WinAPI_GetDriveBusType($sDrive)
_WinAPI_GetDriveGeometryEx($iDrive)
_WinAPI_GetDriveNumber($sDrive)
_WinAPI_GetObjectID($sFilePath)
_WinAPI_GetOverlappedResult($hFile, $tOverlapped, ByRef $iBytes [, $bWait = False])
_WinAPI_IOCTL($iDeviceType, $iFunction, $iMethod, $iAccess)
_WinAPI_IsDoorOpen($sDrive)
_WinAPI_IsWritable($sDrive)
_WinAPI_LoadMedia($sDrive)
#EndRegion
#Region ; Files
_WinAPI_CopyFileEx($sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]])
_WinAPI_CreateDirectory($sDir [, $tSecurity = 0])
_WinAPI_CreateDirectoryEx($sNewDir, $sTemplateDir [, $tSecurity = 0])
_WinAPI_CreateFile($sFileName, $iCreation [, $iAccess = 4 [, $iShare = 0 [, $iAttributes = 0 [, $tSecurity = 0]]]])
_WinAPI_CreateFileEx($sFilePath, $iCreation [, $iAccess = 0 [, $iShare = 0 [, $iFlagsAndAttributes = 0 [, $tSecurity = 0 [, $hTemplate = 0]]]]])
_WinAPI_CreateFileMapping($hFile [, $iSize = 0 [, $sName = '' [, $iProtect = 0x0004 [, $tSecurity = 0]]]])
_WinAPI_CreateHardLink($sNewFile, $sExistingFile)
_WinAPI_CreateSymbolicLink($sSymlink, $sTarget [, $bDirectory = False])
_WinAPI_DecryptFile($sFilePath)
_WinAPI_DeleteFile($sFilePath)
_WinAPI_DeleteVolumeMountPoint($sMountedPath)
_WinAPI_DuplicateEncryptionInfoFile($sSrcFilePath, $sDestFilePath [, $iCreation = 2 [, $iAttributes = 0 [, $tSecurity = 0]]])
_WinAPI_EncryptFile($sFilePath)
_WinAPI_EncryptionDisable($sDir, $bDisable)
_WinAPI_EnumFiles($sDir [, $iFlag = 0 [, $sTemplate = '' [, $bExclude = False]]])
_WinAPI_EnumFileStreams($sFilePath)
_WinAPI_EnumHardLinks($sFilePath)
_WinAPI_FileEncryptionStatus($sFilePath)
_WinAPI_FileExists($sFilePath)
_WinAPI_FileInUse($sFilePath)
_WinAPI_FindClose($hSearch)
_WinAPI_FindCloseChangeNotification($hChange)
_WinAPI_FindFirstChangeNotification($sDirectory, $iFlags [, $bSubtree = False])
_WinAPI_FindFirstFile($sFilePath, $tData)
_WinAPI_FindFirstFileName($sFilePath, ByRef $sLink)
_WinAPI_FindFirstStream($sFilePath, $tData)
_WinAPI_FindNextChangeNotification($hChange)
_WinAPI_FindNextFile($hSearch, $tData)
_WinAPI_FindNextFileName($hSearch, ByRef $sLink)
_WinAPI_FindNextStream($hSearch, $tData)
_WinAPI_FlushFileBuffers($hFile)
_WinAPI_FlushViewOfFile($pAddress [, $iBytes = 0])
_WinAPI_GetBinaryType($sFilePath)
_WinAPI_GetCompressedFileSize($sFilePath)
_WinAPI_GetCompression($sFilePath)
_WinAPI_GetCurrentDirectory()
_WinAPI_GetDiskFreeSpaceEx($sDrive)
_WinAPI_GetFileAttributes($sFilePath)
_WinAPI_GetFileID($hFile)
_WinAPI_GetFileInformationByHandle($hFile)
_WinAPI_GetFileInformationByHandleEx($hFile)
_WinAPI_GetFilePointerEx($hFile)
_WinAPI_GetFileSizeEx($hFile)
_WinAPI_GetFileSizeOnDisk($hFile)
_WinAPI_GetFileTitle($sFilePath)
_WinAPI_GetFileType($hFile)
_WinAPI_GetFinalPathNameByHandle($hFile)
_WinAPI_GetFinalPathNameByHandleEx($hFile [, $iFlags = 0])
_WinAPI_GetFullPathName($sFilePath)
_WinAPI_GetProfilesDirectory()
_WinAPI_GetTempFileName($sFilePath [, $sPrefix = ''])
_WinAPI_GetVolumeInformation([$sRoot = ''])
_WinAPI_GetVolumeInformationByHandle($hFile)
_WinAPI_GetVolumeNameForVolumeMountPoint($sMountedPath)
_WinAPI_IsPathShared($sFilePath)
_WinAPI_LockDevice($sDrive, $bLock)
_WinAPI_LockFile($hFile, $iOffset, $iLength)
_WinAPI_MapViewOfFile($hMapping [, $iOffset = 0 [, $iBytes = 0 [, $iAccess = 0x0006]]])
_WinAPI_MoveFileEx($sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]])
_WinAPI_OpenFileById($hFile, $vID [, $iAccess = 0 [, $iShare = 0 [, $iFlags = 0]]])
_WinAPI_OpenFileMapping($sName [, $iAccess = 0x0006 [, $bInherit = False]])
_WinAPI_PathIsDirectory($sFilePath)
_WinAPI_PathIsDirectoryEmpty($sFilePath)
_WinAPI_ReadDirectoryChanges($hDirectory, $iFilter, $pBuffer, $iLength [, $bSubtree = 0])
_WinAPI_ReadFile($hFile, $pBuffer, $iToRead, ByRef $iRead [, $tOverlapped = 0])
_WinAPI_RemoveDirectory($sDirPath)
_WinAPI_ReOpenFile($hFile, $iAccess, $iShare [, $iFlags = 0])
_WinAPI_ReplaceFile($sReplacedFile, $sReplacementFile [, $sBackupFile = '' [, $iFlags = 0]])
_WinAPI_SearchPath($sFilePath [, $sSearchPath = ''])
_WinAPI_SetCompression($sFilePath, $iCompression)
_WinAPI_SetCurrentDirectory($sDir)
_WinAPI_SetEndOfFile($hFile)
_WinAPI_SetFileAttributes($sFilePath, $iAttributes)
_WinAPI_SetFileInformationByHandleEx($hFile, $tFILEINFO)
_WinAPI_SetFilePointer($hFile, $iPos [, $iMethod = 0])
_WinAPI_SetFilePointerEx($hFile, $iPos [, $iMethod = 0])
_WinAPI_SetFileShortName($hFile, $sShortName)
_WinAPI_SetFileValidData($hFile, $iLength)
_WinAPI_SetSearchPathMode($iFlags)
_WinAPI_SetVolumeMountPoint($sFilePath, $sGUID)
_WinAPI_SfcIsFileProtected($sFilePath)
_WinAPI_UnlockFile($hFile, $iOffset, $iLength)
_WinAPI_UnmapViewOfFile($pAddress)
_WinAPI_WriteFile($hFile, $pBuffer, $iToWrite, ByRef $iWritten [, $tOverlapped = 0])
#EndRegion
#EndRegion
#Region ; GDI
#include <WinAPIGdi.au3>
_WinAPI_EnumDisplaySettings($sDevice, $iMode)
#Region ; Bitmap
_WinAPI_AddIconOverlay($hIcon, $hOverlay)
_WinAPI_AdjustBitmap($hBitmap, $iWidth, $iHeight [, $iMode = 3 [, $tAdjustment = 0]])
_WinAPI_AlphaBlend($hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iAlpha [, $bAlpha = False])
_WinAPI_BitBlt($hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $iROP)
_WinAPI_CompressBitmapBits($hBitmap, ByRef $pBuffer [, $iCompression = 0 [, $iQuality = 100]])
_WinAPI_CopyBitmap($hBitmap)
_WinAPI_CopyImage($hImage [, $iType = 0 [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
_WinAPI_Create32BitHBITMAP($hIcon [, $bDib = False [, $bDelete = False]])
_WinAPI_CreateANDBitmap($hBitmap)
_WinAPI_CreateBitmap($iWidth, $iHeight [, $iPlanes = 1 [, $iBitsPerPel = 1 [, $pBits = 0]]])
_WinAPI_CreateBitmapIndirect($tBITMAP)
_WinAPI_CreateCompatibleBitmap($hDC, $iWidth, $iHeight)
_WinAPI_CreateCompatibleBitmapEx($hDC, $iWidth, $iHeight, $iRGB)
_WinAPI_CreateDIB($iWidth, $iHeight [, $iBitsPerPel = 32 [, $tColorTable = 0 [, $iColorCount = 0]]])
_WinAPI_CreateDIBColorTable(Const ByRef $aColorTable [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_CreateDIBitmap($hDC, $tBITMAPINFO, $iUsage [, $pBits = 0])
_WinAPI_CreateDIBSection($hDC, $tBITMAPINFO, $iUsage, ByRef $pBits [, $hSection = 0 [, $iOffset = 0]])
_WinAPI_CreateSolidBitmap($hWnd, $iColor, $iWidth, $iHeight [, $bRGB = 1])
_WinAPI_DrawBitmap($hDC, $iX, $iY, $hBitmap [, $iRop = 0x00CC0020])
_WinAPI_ExtFloodFill($hDC, $iX, $iY, $iRGB [, $iType = 0])
_WinAPI_GetBitmapBits($hBitmap, $iSize, $pBits)
_WinAPI_GetBitmapDimension($hBitmap)
_WinAPI_GetBitmapDimensionEx($hBitmap)
_WinAPI_GetDIBColorTable($hBitmap)
_WinAPI_GetDIBits($hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBI, $iUsage)
_WinAPI_GetPixel($hDC, $iX, $iY)
_WinAPI_GetStretchBltMode($hDC)
_WinAPI_GradientFill($hDC, Const ByRef $aVertex [, $iStart = 0 [, $iEnd = -1 [, $bRotate = False]]])
_WinAPI_InvertANDBitmap($hBitmap [, $bDelete = False])
_WinAPI_IsAlphaBitmap($hBitmap)
_WinAPI_MaskBlt($hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $hMask, $iXMask, $iYMask, $iRop)
_WinAPI_PlgBlt($hDestDC, Const ByRef $aPoint, $hSrcDC, $iXSrc, $iYSrc, $iWidth, $iHeight [, $hMask = 0 [, $iXMask = 0 [, $iYMask = 0]]])
_WinAPI_RadialGradientFill($hDC, $iX, $iY, $iRadius, $iRGB1, $iRGB2 [, $fAngleStart = 0 [, $fAngleEnd = 360 [, $fStep = 5]]])
_WinAPI_SaveHBITMAPToFile($sFilePath, $hBitmap [, $iXPelsPerMeter = Default [, $iYPelsPerMeter = Default]])
_WinAPI_SaveHICONToFile($sFilePath, Const ByRef $vIcon [, $bCompress = 0 [, $iStart = 0 [, $iEnd = -1]]])
_WinAPI_SetBitmapBits($hBitmap, $iSize, $pBits)
_WinAPI_SetBitmapDimensionEx($hBitmap, $iWidth, $iHeight)
_WinAPI_SetDIBColorTable($hBitmap, $tColorTable, $iColorCount)
_WinAPI_SetDIBits($hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBMI [, $iColorUse = 0])
_WinAPI_SetDIBitsToDevice($hDC, $iXDest, $iYDest, $iWidth, $iHeight, $iXSrc, $iYSrc, $iStartScan, $iScanLines, $tBITMAPINFO, $iUsage, $pBits)
_WinAPI_SetPixel($hDC, $iX, $iY, $iRGB)
_WinAPI_SetStretchBltMode($hDC, $iMode)
_WinAPI_StretchBlt($hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRop)
_WinAPI_StretchDIBits($hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $tBITMAPINFO, $iUsage, $pBits, $iRop)
_WinAPI_TransparentBlt($hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRGB)
#EndRegion
#Region ; Brush & Pen
_WinAPI_CreateBrushIndirect($iStyle, $iRGB [, $iHatch = 0])
_WinAPI_CreatePen($iPenStyle, $iWidth, $iColor)
_WinAPI_CreateSolidBrush( $iColor)
_WinAPI_ExtCreatePen($iPenStyle, $iWidth, $iBrushStyle, $iRGB [, $iHatch = 0 [, $aUserStyle = 0 [, $iStart = 0 [, $iEnd = -1]]]])
_WinAPI_GetBrushOrg($hDC)
_WinAPI_GetSysColorBrush($iIndex)
_WinAPI_PatBlt($hDC, $iX, $iY, $iWidth, $iHeight, $iRop)
_WinAPI_SetBrushOrg($hDC, $iX, $iY)
_WinAPI_SetDCBrushColor($hDC, $iRGB)
_WinAPI_SetDCPenColor($hDC, $iRGB)
#EndRegion
#Region ; Clipping
_WinAPI_ExcludeClipRect($hDC, $tRECT)
_WinAPI_ExtSelectClipRgn($hDC, $hRgn [, $iMode = 5])
_WinAPI_GetClipBox($hDC, ByRef $tRECT)
_WinAPI_GetClipRgn($hDC)
_WinAPI_IntersectClipRect($hDC, $tRECT)
_WinAPI_OffsetClipRgn($hDC, $iXOffset, $iYOffset)
_WinAPI_PtVisible($hDC, $iX, $iY)
_WinAPI_RectVisible($hDC, $tRECT)
_WinAPI_SelectClipPath($hDC [, $iMode = 5])
_WinAPI_SelectClipRgn($hDC, $hRgn)
#EndRegion
#Region ; Colors
_WinAPI_ColorAdjustLuma($iRGB, $iPercent [, $bScale = True])
_WinAPI_ColorHLSToRGB($iHue, $iLuminance, $iSaturation)
_WinAPI_ColorRGBToHLS($iRGB, ByRef $iHue, ByRef $iLuminance, ByRef $iSaturation)
_WinAPI_CreateColorAdjustment([$iFlags = 0 [, $iIlluminant = 0 [, $iGammaR = 10000 [, $iGammaG = 10000 [, $iGammaB = 10000 [, $iBlack = 0 [, $iWhite = 10000 [, $iContrast = 0 [, $iBrightness = 0 [, $iColorfulness = 0 [, $iTint = 0]]]]]]]]]]])
_WinAPI_GetBValue($iRGB)
_WinAPI_GetColorAdjustment($hDC)
_WinAPI_GetDeviceGammaRamp($hDC, ByRef $aRamp)
_WinAPI_GetGValue($iRGB)
_WinAPI_GetRValue($iRGB)
_WinAPI_GetUDFColorMode()
_WinAPI_InvertColor($iRGB)
_WinAPI_RGB($iRed, $iGreen, $iBlue)
_WinAPI_SetColorAdjustment($hDC, $tAdjustment)
_WinAPI_SetDeviceGammaRamp($hDC, Const ByRef $aRamp)
_WinAPI_SetUDFColorMode($iMode)
_WinAPI_SwitchColor($iMode)
#EndRegion
#Region ; Coordinate & Transform
_WinAPI_CombineTransform($tXFORM1, $tXFORM2)
_WinAPI_CreateTransform([$nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]])
_WinAPI_DPtoLP($hDC, ByRef $tPOINT [, $iCount = 1])
_WinAPI_GetCurrentPosition($hDC)
_WinAPI_GetGraphicsMode($hDC)
_WinAPI_GetMapMode($hDC)
_WinAPI_GetPosFromRect($tRECT)
_WinAPI_GetWorldTransform($hDC)
_WinAPI_LPtoDP($hDC, ByRef $tPOINT [, $iCount = 1])
_WinAPI_ModifyWorldTransform($hDC, $tXFORM, $iMode)
_WinAPI_OffsetPoints(ByRef $aPoint, $iXOffset, $iYOffset [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_OffsetWindowOrg($hDC, $iXOffset, $iYOffset)
_WinAPI_RotatePoints(ByRef $aPoint, $iXC, $iYC, $fAngle [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_ScaleWindowExt($hDC, $iXNum, $iXDenom, $iYNum, $iYDenom)
_WinAPI_SetGraphicsMode($hDC, $iMode)
_WinAPI_SetMapMode($hDC, $iMode)
_WinAPI_SetWindowExt($hDC, $iXExtent, $iYExtent)
_WinAPI_SetWindowOrg($hDC, $iX, $iY)
_WinAPI_SetWorldTransform($hDC, $tXFORM)
#EndRegion
#Region ; Desktop Window Manager
_WinAPI_DwmDefWindowProc($hWnd, $iMsg, $wParam, $lParam)
_WinAPI_DwmEnableBlurBehindWindow($hWnd [, $bEnable = True [, $bTransition = False [, $hRgn = 0]]])
_WinAPI_DwmEnableComposition($bEnable)
_WinAPI_DwmExtendFrameIntoClientArea($hWnd [, $tMARGINS = 0])
_WinAPI_DwmGetColorizationColor()
_WinAPI_DwmGetColorizationParameters()
_WinAPI_DwmGetWindowAttribute($hWnd, $iAttribute)
_WinAPI_DwmInvalidateIconicBitmaps($hWnd)
_WinAPI_DwmIsCompositionEnabled()
_WinAPI_DwmQueryThumbnailSourceSize($hThumbnail)
_WinAPI_DwmRegisterThumbnail($hDestination, $hSource)
_WinAPI_DwmSetColorizationParameters($tDWMCP)
_WinAPI_DwmSetIconicLivePreviewBitmap($hWnd, $hBitmap [, $bFrame = False [, $tClient = 0]])
_WinAPI_DwmSetIconicThumbnail($hWnd, $hBitmap [, $bFrame = False])
_WinAPI_DwmSetWindowAttribute($hWnd, $iAttribute, $iData)
_WinAPI_DwmUnregisterThumbnail($hThumbnail)
_WinAPI_DwmUpdateThumbnailProperties($hThumbnail [, $bVisible = True [, $bClientAreaOnly = False [, $iOpacity = 255 [, $tRectDest = 0 [, $tRectSrc = 0]]]]])
#EndRegion
#Region ; DeviceContext
#include <WinAPIGdiDC.au3>
_WinAPI_CreateCompatibleDC($hDC)
_WinAPI_DeleteDC($hDC)
_WinAPI_DrawEdge($hDC, $tRECT, $iEdgeType, $iFlags)
_WinAPI_DrawFrameControl($hDC, $tRECT, $iType, $iState)
_WinAPI_DrawIcon($hDC, $iX, $iY, $hIcon)
_WinAPI_DrawIconEx($hDC, $iX, $iY, $hIcon [, $iWidth = 0 [, $iHeight = 0 [, $iStep = 0 [, $hBrush = 0 [, $iFlags = 3]]]]])
_WinAPI_DrawText($hDC, $sText, ByRef $tRECT, $iFlags)
_WinAPI_EnumDisplayDevices($sDevice, $iDevNum)
_WinAPI_FillRect($hDC, $tRECT, $hBrush)
_WinAPI_FrameRect($hDC, $tRECT, $hBrush)
_WinAPI_GetBkColor($hDC)
_WinAPI_GetBkMode($hDC)
_WinAPI_GetDC($hWnd)
_WinAPI_GetDCEx($hWnd, $hRgn, $iFlags)
_WinAPI_GetDeviceCaps($hDC, $iIndex)
_WinAPI_GetTextColor($hDC)
_WinAPI_PrintWindow($hWnd, $hDC [, $bClient = False])
_WinAPI_ReleaseDC($hWnd, $hDC)
_WinAPI_RestoreDC($hDC, $iID)
_WinAPI_SaveDC($hDC)
_WinAPI_SetBkColor($hDC, $iColor)
_WinAPI_SetBkMode($hDC, $iBkMode)
_WinAPI_SetTextColor($hDC, $iColor)
_WinAPI_TwipsPerPixelX()
_WinAPI_TwipsPerPixelY()
#EndRegion
#Region ; Font & Text
_WinAPI_AddFontMemResourceEx($pData, $iSize)
_WinAPI_AddFontResourceEx($sFont [, $iFlag = 0 [, $bNotify = False]])
_WinAPI_CreateFont($iHeight, $iWidth [, $iEscape = 0 [, $iOrientn = 0 [, $iWeight = $FW_NORMAL [, $bItalic = False [, $bUnderline = False [, $bStrikeout = False [, $iCharset = $DEFAULT_CHARSET [, $iOutputPrec = $OUT_DEFAULT_PRECIS [, $iClipPrec = $CLIP_DEFAULT_PRECIS [, $iQuality = $DEFAULT_QUALITY [, $iPitch = 0 [, $sFace = 'Arial']]]]]]]]]]]])
_WinAPI_CreateFontEx($iHeight [, $iWidth = 0 [, $iEscapement = 0 [, $iOrientation = 0 [, $iWeight = 400 [, $bItalic = False [, $bUnderline = False [, $bStrikeOut = False [, $iCharSet = 1 [, $iOutPrecision = 0 [, $iClipPrecision = 0 [, $iQuality = 0 [, $iPitchAndFamily = 0 [, $sFaceName = '' [, $iStyle = 0]]]]]]]]]]]]]])
_WinAPI_CreateFontIndirect($tLogFont)
_WinAPI_EnumFontFamilies([$hDC = 0 [, $sFaceName = '' [, $iCharSet = 1 [, $iFontType = 0x07 [, $sPattern = '' [, $bExclude = False]]]]]])
_WinAPI_GetFontMemoryResourceInfo($pMemory [, $iFlag = 1])
_WinAPI_GetFontName($sFaceName [, $iStyle = 0 [, $iCharSet = 1]])
_WinAPI_GetFontResourceInfo($sFont [, $bForce = False [, $iFlag = Default]])
_WinAPI_GetGlyphOutline($hDC, $sChar, $iFormat, ByRef $pBuffer [, $tMAT2 = 0])
_WinAPI_GetOutlineTextMetrics($hDC)
_WinAPI_GetTabbedTextExtent($hDC, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1]]])
_WinAPI_GetTextAlign($hDC)
_WinAPI_GetTextCharacterExtra($hDC)
_WinAPI_GetTextExtentPoint32($hDC, $sText)
_WinAPI_GetTextFace($hDC)
_WinAPI_GetTextMetrics($hDC)
_WinAPI_RemoveFontMemResourceEx($hFont)
_WinAPI_RemoveFontResourceEx($sFont [, $iFlag = 0 [, $bNotify = False]])
_WinAPI_SetTextAlign($hDC [, $iMode = 0])
_WinAPI_SetTextCharacterExtra($hDC, $iCharExtra)
_WinAPI_SetTextJustification($hDC, $iBreakExtra, $iBreakCount)
_WinAPI_TabbedTextOut($hDC, $iX, $iY, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1 [, $iOrigin = 0]]]])
_WinAPI_TextOut($hDC, $iX, $iY, $sText)
#EndRegion
#Region ; Line & Curve
_WinAPI_AngleArc($hDC, $iX, $iY, $iRadius, $nStartAngle, $nSweepAngle)
_WinAPI_Arc($hDC, $tRECT, $iXStartArc, $iYStartArc, $iXEndArc, $iYEndArc)
_WinAPI_ArcTo($hDC, $tRECT, $iXRadial1, $iYRadial1, $iXRadial2, $iYRadial2)
_WinAPI_DrawLine($hDC, $iX1, $iY1, $iX2, $iY2)
_WinAPI_GetArcDirection($hDC)
_WinAPI_LineDDA($iX1, $iY1, $iX2, $iY2, $pLineProc [, $pData = 0])
_WinAPI_LineTo($hDC, $iX, $iY)
_WinAPI_MoveTo($hDC, $iX, $iY)
_WinAPI_MoveToEx($hDC, $iX, $iY)
_WinAPI_PolyBezier($hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_PolyBezierTo($hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_PolyDraw($hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_SetArcDirection($hDC, $iDirection)
#EndRegion
#Region ; MetaFiles
_WinAPI_CloseEnhMetaFile($hDC)
_WinAPI_CopyEnhMetaFile($hEmf [, $sFilePath = ''])
_WinAPI_CreateEnhMetaFile([$hDC = 0 [, $tRECT = 0 [, $bPixels = False [, $sFilePath = '' [, $sDescription = '']]]]])
_WinAPI_DeleteEnhMetaFile($hEmf)
_WinAPI_GdiComment($hDC, $pBuffer, $iSize)
_WinAPI_GetEnhMetaFile($sFilePath)
_WinAPI_GetEnhMetaFileBits($hEmf, ByRef $pBuffer)
_WinAPI_GetEnhMetaFileDescription($hEmf)
_WinAPI_GetEnhMetaFileDimension($hEmf)
_WinAPI_GetEnhMetaFileHeader($hEmf)
_WinAPI_PlayEnhMetaFile($hDC, $hEmf, $tRECT)
_WinAPI_SetEnhMetaFileBits($pData, $iLength)
#EndRegion
#Region ; Monitors
_WinAPI_EnumDisplayMonitors([$hDC = 0 [, $tRECT = 0]])
_WinAPI_GetMonitorInfo($hMonitor)
_WinAPI_MonitorFromPoint($tPOINT [, $iFlag = 1])
_WinAPI_MonitorFromRect($tRECT [, $iFlag = 1])
_WinAPI_MonitorFromWindow($hWnd [, $iFlag = 1])
#EndRegion
#Region ; Paint & Draw
_WinAPI_BeginPaint($hWnd, ByRef $tPAINTSTRUCT)
_WinAPI_DrawAnimatedRects($hWnd, $tRectFrom, $tRectTo)
_WinAPI_DrawShadowText($hDC, $sText, $iRGBText, $iRGBShadow [, $iXOffset = 0 [, $iYOffset = 0 [, $tRECT = 0 [, $iFlags = 0]]]])
_WinAPI_EndPaint($hWnd, ByRef $tPAINTSTRUCT)
_WinAPI_GetBoundsRect($hDC [, $iFlags = 0])
_WinAPI_GetROP2($hDC)
_WinAPI_GetUpdateRect($hWnd [, $bErase = True])
_WinAPI_GetUpdateRgn($hWnd, $hRgn [, $bErase = True])
_WinAPI_GetWindowRgnBox($hWnd, ByRef $tRECT)
_WinAPI_InvalidateRgn($hWnd [, $hRgn = 0 [, $bErase = True]])
_WinAPI_LockWindowUpdate($hWnd)
_WinAPI_PaintDesktop($hDC)
_WinAPI_SetBoundsRect($hDC, $iFlags [, $tRECT = 0])
_WinAPI_SetROP2($hDC, $iMode)
_WinAPI_ValidateRect($hWnd [, $tRECT = 0])
_WinAPI_ValidateRgn($hWnd [, $hRgn = 0])
_WinAPI_WindowFromDC($hDC)
#EndRegion
#Region ; Path
_WinAPI_AbortPath($hDC)
_WinAPI_BeginPath($hDC)
_WinAPI_CloseFigure($hDC)
_WinAPI_EndPath($hDC)
_WinAPI_FillPath($hDC)
_WinAPI_FlattenPath($hDC)
_WinAPI_PathToRegion($hDC)
_WinAPI_StrokeAndFillPath($hDC)
_WinAPI_StrokePath($hDC)
_WinAPI_WidenPath($hDC)
#EndRegion
#Region ; Rectangle
_WinAPI_CopyRect($tRECT)
_WinAPI_DrawFocusRect($hDC, $tRECT)
_WinAPI_EqualRect($tRECT1, $tRECT2)
_WinAPI_InflateRect(ByRef $tRECT, $iDX, $iDY)
_WinAPI_IntersectRect($tRECT1, $tRECT2)
_WinAPI_IsRectEmpty($tRECT)
_WinAPI_OffsetRect(ByRef $tRECT, $iDX, $iDY)
_WinAPI_PtInRect(ByRef $tRECT, ByRef $tPoint)
_WinAPI_PtInRectEx($iX, $iY, $iLeft, $iTop, $iRight, $iBottom)
_WinAPI_RectIsEmpty(ByRef $tRECT)
_WinAPI_SubtractRect($tRECT1, $tRECT2)
_WinAPI_UnionRect($tRECT1, $tRECT2)
#EndRegion
#Region ; Regions
_WinAPI_CombineRgn($hRgnDest, $hRgnSrc1, $hRgnSrc2, $iCombineMode)
_WinAPI_CreateEllipticRgn($tRECT)
_WinAPI_CreateNullRgn()
_WinAPI_CreatePolygonRgn(Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1 [, $iMode = 1]]])
_WinAPI_CreateRectRgn($iLeftRect, $iTopRect, $iRightRect, $iBottomRect)
_WinAPI_CreateRectRgnIndirect($tRECT)
_WinAPI_CreateRoundRectRgn($iLeftRect, $iTopRect, $iRightRect, $iBottomRect, $iWidthEllipse, $iHeightEllipse)
_WinAPI_EqualRgn($hRgn1, $hRgn2)
_WinAPI_ExtCreateRegion($tRGNDATA [, $tXFORM = 0])
_WinAPI_FillRgn($hDC, $hRgn, $hBrush)
_WinAPI_FrameRgn($hDC, $hRgn, $hBrush, $iWidth, $iHeight)
_WinAPI_GetPolyFillMode($hDC)
_WinAPI_GetRegionData($hRgn, ByRef $tRGNDATA)
_WinAPI_GetRgnBox($hRgn, ByRef $tRECT)
_WinAPI_GetWindowRgn($hWnd, $hRgn)
_WinAPI_InvertRgn($hDC, $hRgn)
_WinAPI_OffsetRgn($hRgn, $iXOffset, $iYOffset)
_WinAPI_PaintRgn($hDC, $hRgn)
_WinAPI_PtInRegion($hRgn, $iX, $iY)
_WinAPI_RectInRegion($hRgn, $tRECT)
_WinAPI_RedrawWindow($hWnd [, $tRECT = 0 [, $hRegion = 0 [, $iFlags = 5]]])
_WinAPI_SetPolyFillMode($hDC [, $iMode = 1])
_WinAPI_SetRectRgn($hRgn, $tRECT)
_WinAPI_SetWindowRgn($hWnd, $hRgn [, $bRedraw = True])
#EndRegion
; Shape
_WinAPI_Ellipse($hDC, $tRECT)
_WinAPI_InvertRect($hDC, $tRECT)
_WinAPI_Polygon($hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_Rectangle($hDC, $tRECT)
_WinAPI_RoundRect($hDC, $tRECT, $iWidth, $iHeight)
#EndRegion
#Region ; Handle & Object
#include <WinAPIHObj.au3>
_WinAPI_CloseHandle($hObject)
_WinAPI_DeleteObject($hObject)
_WinAPI_DuplicateHandle($hSourceProcessHandle, $hSourceHandle, $hTargetProcessHandle, $iDesiredAccess, $iInheritHandle, $iOptions)
_WinAPI_GetCurrentObject($hDC, $iType)
_WinAPI_GetCurrentProcess()
_WinAPI_GetObject($hObject, $iSize, $pObject)
_WinAPI_GetObjectInfoByHandle($hObject)
_WinAPI_GetObjectNameByHandle($hObject)
_WinAPI_GetObjectType($hObject)
_WinAPI_GetStdHandle($iStdHandle)
_WinAPI_GetStockObject($iObject)
_WinAPI_SelectObject($hDC, $hGDIObj)
_WinAPI_SetHandleInformation($hObject, $iMask, $iFlags)
#EndRegion
#Region ; Internationalization
#include <WinAPILocale.au3>
_WinAPI_CompareString($iLCID, $sString1, $sString2 [, $iFlags = 0])
_WinAPI_CreateNumberFormatInfo($iNumDigits, $iLeadingZero, $iGrouping, $sDecimalSep, $sThousandSep, $iNegativeOrder)
_WinAPI_EnumSystemGeoID()
_WinAPI_EnumSystemLocales($iFlag)
_WinAPI_EnumUILanguages([$iFlag = 0])
_WinAPI_GetDateFormat([$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = '']]]])
_WinAPI_GetDurationFormat($iLCID, $iDuration [, $sFormat = ''])
_WinAPI_GetGeoInfo($iGEOID, $iType [, $iLanguage = 0])
_WinAPI_GetLocaleInfo($iLCID, $iType)
_WinAPI_GetNumberFormat($iLCID, $sNumber [, $tNUMBERFMT = 0])
_WinAPI_GetSystemDefaultLangID()
_WinAPI_GetSystemDefaultLCID()
_WinAPI_GetSystemDefaultUILanguage()
_WinAPI_GetThreadLocale()
_WinAPI_GetThreadUILanguage()
_WinAPI_GetTimeFormat([$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = '']]]])
_WinAPI_GetUserDefaultLangID()
_WinAPI_GetUserDefaultLCID()
_WinAPI_GetUserDefaultUILanguage()
_WinAPI_GetUserGeoID()
_WinAPI_IsValidLocale($iLCID [, $iFlag = 0])
_WinAPI_SetLocaleInfo($iLCID, $iType, $sData)
_WinAPI_SetThreadLocale($iLCID)
_WinAPI_SetThreadUILanguage($iLanguage)
_WinAPI_SetUserGeoID($iGEOID)
#EndRegion
#Region ; Menus & Resources
#include <WinAPIRes.au3>
#Region ; Carets
_WinAPI_CreateCaret($hWnd, $hBitmap [, $iWidth = 0 [, $iHeight = 0]])
_WinAPI_DestroyCaret()
_WinAPI_GetCaretBlinkTime()
_WinAPI_GetCaretPos()
_WinAPI_HideCaret($hWnd)
_WinAPI_SetCaretBlinkTime($iDuration)
_WinAPI_SetCaretPos($iX, $iY)
_WinAPI_ShowCaret($hWnd)
#EndRegion
#Region ; Cursors
_WinAPI_ClipCursor($tRECT)
_WinAPI_CopyCursor($hCursor)
_WinAPI_DestroyCursor($hCursor)
_WinAPI_GetClipCursor()
_WinAPI_GetCursor()
_WinAPI_GetCursorInfo()
_WinAPI_LoadCursor($hInstance, $sName)
_WinAPI_LoadCursorFromFile($sFilePath)
_WinAPI_SetCursor($hCursor)
_WinAPI_SetSystemCursor($hCursor, $iID [, $bCopy = False])
_WinAPI_ShowCursor($bShow)
#EndRegion
#Region ; Icons
#include <WinAPIIcons.au3>
_WinAPI_AddIconTransparency($hIcon [, $iPercent = 50 [, $bDelete = False]])
_WinAPI_CopyIcon($hIcon)
_WinAPI_Create32BitHICON($hIcon [, $bDelete = False])
_WinAPI_CreateEmptyIcon($iWidth, $iHeight [, $iBitsPerPel = 32])
_WinAPI_CreateIcon($hInstance, $iWidth, $iHeight, $iPlanes, $iBitsPixel, $pANDBits, $pXORBits)
_WinAPI_CreateIconFromResourceEx($pData, $iSize [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
_WinAPI_CreateIconIndirect($hBitmap, $hMask [, $iXHotspot = 0 [, $iYHotspot = 0 [, $bIcon = True]]])
_WinAPI_DestroyIcon($hIcon)
_WinAPI_ExtractIcon($sIcon, $iIndex [, $bSmall = False])
_WinAPI_ExtractIconEx($sFilePath, $iIndex, $paLarge, $paSmall, $iIcons)
_WinAPI_FileIconInit([$bRestore = True])
_WinAPI_GetIconDimension( $hIcon)
_WinAPI_GetIconInfo($hIcon)
_WinAPI_GetIconInfoEx($hIcon)
_WinAPI_LoadIcon($hInstance, $sName)
_WinAPI_LoadIconMetric($hInstance, $sName, $iMetric)
_WinAPI_LoadIconWithScaleDown($hInstance, $sName, $iWidth, $iHeight)
_WinAPI_LoadShell32Icon($iIconID)
_WinAPI_LookupIconIdFromDirectoryEx($pData [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]])
_WinAPI_MirrorIcon($hIcon [, $bDelete = False])
#EndRegion
#Region ; Resources
_WinAPI_BeginUpdateResource($sFilePath [, $bDelete = False])
_WinAPI_EndUpdateResource($hUpdate [, $bDiscard = False])
_WinAPI_EnumResourceLanguages($hModule, $sType, $sName)
_WinAPI_EnumResourceNames($hModule, $sType)
_WinAPI_EnumResourceTypes($hModule)
_WinAPI_FindResource($hInstance, $sType, $sName)
_WinAPI_FindResourceEx($hInstance, $sType, $sName, $iLanguage)
_WinAPI_FreeLibrary($hModule)
_WinAPI_FreeResource($hData)
_WinAPI_GetFileVersionInfo($sFilePath, ByRef $pBuffer [, $iFlags = 0])
_WinAPI_LoadBitmap($hInstance, $sBitmap)
_WinAPI_LoadImage($hInstance, $sImage, $iType, $iXDesired, $iYDesired, $iLoad)
_WinAPI_LoadIndirectString($sStrIn)
_WinAPI_LoadLibrary($sFileName)
_WinAPI_LoadLibraryEx($sFileName [, $iFlags = 0])
_WinAPI_LoadResource($hInstance, $hResource)
_WinAPI_LoadString($hInstance, $iStringID)
_WinAPI_LoadStringEx($hModule, $iID [, $iLanguage = $LOCALE_USER_DEFAULT])
_WinAPI_LockResource($hData)
_WinAPI_SizeOfResource($hInstance, $hResource)
_WinAPI_UpdateResource($hUpdate, $sType, $sName, $iLanguage, $pData, $iSize)
_WinAPI_VerQueryRoot($pData)
_WinAPI_VerQueryValue($pData [, $sValues = ''])
_WinAPI_VerQueryValueEx($hModule [, $sValues = '' [, $iLanguage = 0x0400]])
#EndRegion
#EndRegion
#Region ; Miscellaneous
#include <WinAPIMisc.au3>
_WinAPI_MulDiv($iNumber, $iNumerator, $iDenominator)
_WinAPI_StringLenA(Const ByRef $tString)
_WinAPI_StringLenW(Const ByRef $tString)
_WinAPI_GetExtended()
_WinAPI_GetString($pString [, $bUnicode = True])
_WinAPI_StrLen($pString [, $bUnicode = True])
; Audio
_WinAPI_PlaySound($sSound [, $iFlags = $SND_SYSTEM_NOSTOP [, $hInstance = 0]])
; Mouse
_WinAPI_GetMousePos([$bToClient = False [, $hWnd = 0]])
_WinAPI_GetMousePosX([$bToClient = False [, $hWnd = 0]])
_WinAPI_GetMousePosY([$bToClient = False [, $hWnd = 0]])
; Struct
_WinAPI_ArrayToStruct(Const ByRef $aData [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_CopyStruct($tStruct [, $sStruct = ''])
_WinAPI_CreateMargins($iLeftWidth, $iRightWidth, $iTopHeight, $iBottomHeight)
_WinAPI_CreatePoint($iX, $iY)
_WinAPI_CreateRect($iLeft, $iTop, $iRight, $iBottom)
_WinAPI_CreateRectEx($iX, $iY, $iWidth, $iHeight)
_WinAPI_CreateSize($iWidth, $iHeight)
_WinAPI_StructToArray($tStruct [, $iItems = 0])
_WinAPI_UnionStruct($tStruct1, $tStruct2 [, $sStruct = ''])
#EndRegion
#Region ; Processes & Synchronization
#include <WinAPIProc.au3>
#Region ; Processes
_WinAPI_AdjustTokenPrivileges($hToken, $aPrivileges, $iAttributes, ByRef $aAdjust)
_WinAPI_AssignProcessToJobObject($hJob, $hProcess)
_WinAPI_AttachConsole([$iPID = -1])
_WinAPI_AttachThreadInput($iAttach, $iAttachTo, $bAttach)
_WinAPI_CreateJobObject([$sName = '' [, $tSecurity = 0]])
_WinAPI_CreateProcess($sAppName, $sCommand, $tSecurity, $tThread, $bInherit, $iFlags, $pEnviron, $sDir, $tStartupInfo, $tProcess)
_WinAPI_CreateProcessWithToken($sApp, $sCmd, $iFlags, $tStartupInfo, $tProcessInfo, $hToken [, $iLogon = 0 [, $pEnvironment = 0 [, $sDir = '']]])
_WinAPI_DuplicateTokenEx($hToken, $iAccess, $iLevel [, $iType = 1 [, $tSecurity = 0]])
_WinAPI_EmptyWorkingSet([$iPID = 0])
_WinAPI_EnumChildProcess([$iPID = 0])
_WinAPI_EnumDeviceDrivers()
_WinAPI_EnumProcessHandles([$iPID = 0 [, $iType = 0]])
_WinAPI_EnumProcessModules([$iPID = 0 [, $iFlag = 0]])
_WinAPI_EnumProcessThreads([$iPID = 0)
_WinAPI_EnumProcessWindows([$iPID = 0 [, $bVisible = True]])
_WinAPI_FatalAppExit($sMessage)
_WinAPI_GetCurrentProcessExplicitAppUserModelID()
_WinAPI_GetCurrentProcessID()
_WinAPI_GetCurrentThread()
_WinAPI_GetCurrentThreadId()
_WinAPI_GetDeviceDriverBaseName($pDriver)
_WinAPI_GetDeviceDriverFileName($pDriver)
_WinAPI_GetExitCodeProcess($hProcess)
_WinAPI_GetGuiResources([$iFlag = 0 [, $hProcess = -1]])
_WinAPI_GetModuleFileNameEx($hProcess [, $hModule = 0])
_WinAPI_GetModuleInformation($hProcess [, $hModule = 0])
_WinAPI_GetPriorityClass([$iPID = 0])
_WinAPI_GetProcessAffinityMask($hProcess)
_WinAPI_GetProcessCommandLine([$iPID = 0])
_WinAPI_GetProcessFileName([$iPID = 0])
_WinAPI_GetProcessHandleCount([$iPID = 0])
_WinAPI_GetProcessID($hProcess)
_WinAPI_GetProcessIoCounters([$iPID = 0])
_WinAPI_GetProcessMemoryInfo([$iPID = 0])
_WinAPI_GetProcessName([$iPID = 0])
_WinAPI_GetProcessTimes([$iPID = 0])
_WinAPI_GetProcessUser([$iPID = 0])
_WinAPI_GetProcessWorkingDirectory([$iPID = 0])
_WinAPI_GetThreadDesktop($iThreadId)
_WinAPI_GetThreadErrorMode()
_WinAPI_IsElevated()
_WinAPI_IsProcessInJob($hProcess [, $hJob = 0])
_WinAPI_IsWow64Process([$iPID = 0])
_WinAPI_OpenJobObject($sName [, $iAccess = $JOB_OBJECT_ALL_ACCESS [, $bInherit = False]])
_WinAPI_OpenProcess($iAccess, $bInherit, $iPID [, $bDebugPriv = False])
_WinAPI_OpenProcessToken($iAccess [, $hProcess = 0])
_WinAPI_QueryInformationJobObject($hJob, $iJobObjectInfoClass, ByRef $tJobObjectInfo)
_WinAPI_SetInformationJobObject($hJob, $iJobObjectInfoClass, $tJobObjectInfo)
_WinAPI_SetPriorityClass($iPriority [, $iPID = 0])
_WinAPI_SetProcessAffinityMask($hProcess, $iMask)
_WinAPI_SetThreadDesktop($hDesktop)
_WinAPI_SetThreadErrorMode($iMode)
_WinAPI_SetThreadExecutionState($iFlags)
_WinAPI_TerminateJobObject($hJob [, $iExitCode = 0])
_WinAPI_TerminateProcess($hProcess [, $iExitCode = 0])
_WinAPI_UserHandleGrantAccess($hObject, $hJob, $bGrant)
_WinAPI_WriteConsole($hConsole, $sText)
#EndRegion
#Region ; Synchronization
_WinAPI_CreateEvent([$tAttributes = 0 [, $bManualReset = True [, $bInitialState = True [, $sName = ""]]]])
_WinAPI_CreateMutex($sMutex [, $bInitial = True [, $tSecurity = 0]])
_WinAPI_CreateSemaphore($sSemaphore, $iInitial, $iMaximum [, $tSecurity = 0])
_WinAPI_OpenMutex($sMutex [, $iAccess = $MUTEX_ALL_ACCESS [, $bInherit = False]])
_WinAPI_OpenSemaphore($sSemaphore [, $iAccess = 0x001F0003 [, $bInherit = False]])
_WinAPI_ReleaseMutex($hMutex)
_WinAPI_ReleaseSemaphore($hSemaphore [, $iIncrease = 1])
_WinAPI_ResetEvent($hEvent)
_WinAPI_SetEvent($hEvent)
_WinAPI_WaitForInputIdle($hProcess [, $iTimeout = -1])
_WinAPI_WaitForMultipleObjects($iCount, $paHandles [, $bWaitAll = False [, $iTimeout = -1]])
_WinAPI_WaitForSingleObject($hHandle [, $iTimeout = -1])
#EndRegion
#EndRegion
#Region ; Registry
#include <WinAPIReg.au3>
_WinAPI_AddMRUString($hMRU, $sStr)
_WinAPI_AssocGetPerceivedType($sExt)
_WinAPI_AssocQueryString($sAssoc, $iType [, $iFlags = 0 [, $sExtra = '']])
_WinAPI_CreateMRUList($hKey, $sSubKey [, $iMax = 26])
_WinAPI_DllInstall($sFilePath)
_WinAPI_DllUninstall($sFilePath)
_WinAPI_EnumMRUList($hMRU, $iItem)
_WinAPI_FreeMRUList($hMRU)
_WinAPI_GetRegKeyNameByHandle($hKey)
_WinAPI_RegCloseKey($hKey [, $bFlush = False])
_WinAPI_RegConnectRegistry($sComputer, $hKey)
_WinAPI_RegCopyTree($hSrcKey, $sSrcSubKey, $hDestKey)
_WinAPI_RegCopyTreeEx($hSrcKey, $sSrcSubKey, $hDestKey)
_WinAPI_RegCreateKey($vKey [, $sSubKey = '' [, $iAccess = $KEY_ALL_ACCESS [, $iOptions = 0 [, $tSecurity = 0]]]])
_WinAPI_RegDeleteEmptyKey($hKey, $sSubKey, $sValueName)
_WinAPI_RegDeleteKey($vKey [, $sSubKey = '' [, $iSamDesired = Default]])
_WinAPI_RegDeleteKeyValue($hKey, $sSubKey, $sValueName)
_WinAPI_RegDeleteTree($hKey [, $sSubKey = ''])
_WinAPI_RegDeleteTreeEx($hKey [, $sSubKey = 0])
_WinAPI_RegDeleteValue($hKey, $sValueName)
_WinAPI_RegDisableReflectionKey($hKey)
_WinAPI_RegDuplicateHKey($hKey)
_WinAPI_RegEnableReflectionKey($hKey)
_WinAPI_RegEnumKey($hKey, $iIndex)
_WinAPI_RegEnumValue($hKey, $iIndex)
_WinAPI_RegFlushKey($hKey)
_WinAPI_RegLoadMUIString($hKey, $sValueName [, $sDirectory = ''])
_WinAPI_RegNotifyChangeKeyValue($hKey, $iFilter [, $bSubtree = False [, $bAsync = False [, $hEvent = 0]]])
_WinAPI_RegOpenKey($vKey [, $sSubKey = '' [, $iAccess = $KEY_ALL_ACCESS]])
_WinAPI_RegQueryInfoKey($hKey)
_WinAPI_RegQueryLastWriteTime($hKey)
_WinAPI_RegQueryMultipleValues($hKey, ByRef $aValent, ByRef $pBuffer [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_RegQueryReflectionKey($hKey)
_WinAPI_RegQueryValue($hKey, $sValueName, ByRef $tValueData)
_WinAPI_RegRestoreKey($hKey, $sFilePath)
_WinAPI_RegSaveKey($hKey, $sFilePath [, $bReplace = False [, $tSecurity = 0]])
_WinAPI_RegSetValue($hKey, $sValueName, $iType, $tValueData, $iBytes)
_WinAPI_SfcIsKeyProtected($hKey [, $sSubKey = Default [, $iFlag = 0]])
#EndRegion
#Region ; ShellEx
#include <WinAPIShellEx.au3>
_WinAPI_DefSubclassProc($hWnd, $iMsg, $wParam, $lParam)
_WinAPI_DllGetVersion($sFilePath)
_WinAPI_FindExecutable($sFileName [, $sDirectory = ""])
_WinAPI_GetAllUsersProfileDirectory()
_WinAPI_GetDefaultUserProfileDirectory()
_WinAPI_GetWindowSubclass($hWnd, $pSubclassProc, $idSubClass)
_WinAPI_RemoveWindowSubclass($hWnd, $pSubclassProc, $idSubClass)
_WinAPI_SetCurrentProcessExplicitAppUserModelID($sAppID)
_WinAPI_SetWindowSubclass($hWnd, $pSubclassProc, $idSubClass [, $pData = 0])
_WinAPI_ShellAddToRecentDocs($sFilePath)
_WinAPI_ShellChangeNotify($iEvent, $iFlags [, $iItem1 = 0 [, $iItem2 = 0]])
_WinAPI_ShellChangeNotifyDeregister($iID)
_WinAPI_ShellChangeNotifyRegister($hWnd, $iMsg, $iEvents, $iSources, $aPaths [, $bRecursive = False])
_WinAPI_ShellCreateDirectory($sFilePath [, $hParent = 0 [, $tSecurity = 0]])
_WinAPI_ShellEmptyRecycleBin([$sRoot = '' [, $iFlags = 0 [, $hParent = 0]]])
_WinAPI_ShellExecute($sFilePath [, $sArgs = '' [, $sDir = '' [, $sVerb = '' [, $iShow = 1 [, $hParent = 0]]]]])
_WinAPI_ShellExecuteEx(ByRef $tSHEXINFO)
_WinAPI_ShellExtractAssociatedIcon($sFilePath [, $bSmall = False])
_WinAPI_ShellExtractIcon($sIcon, $iIndex, $iWidth, $iHeight)
_WinAPI_ShellFileOperation($sFrom, $sTo, $iFunc, $iFlags [, $sTitle = '' [, $hParent = 0]])
_WinAPI_ShellFlushSFCache()
_WinAPI_ShellGetFileInfo($sFilePath, $iFlags, $iAttributes, ByRef $tSHFILEINFO)
_WinAPI_ShellGetIconOverlayIndex($sIcon, $iIndex)
_WinAPI_ShellGetKnownFolderIDList($sGUID [, $iFlags = 0 [, $hToken = 0]])
_WinAPI_ShellGetKnownFolderPath($sGUID [, $iFlags = 0 [, $hToken = 0]])
_WinAPI_ShellGetLocalizedName($sFilePath)
_WinAPI_ShellGetPathFromIDList($pPIDL)
_WinAPI_ShellGetSetFolderCustomSettings($sFilePath, $iFlag, ByRef $tSHFCS)
_WinAPI_ShellGetSettings($iFlags)
_WinAPI_ShellGetSpecialFolderLocation($iCSIDL)
_WinAPI_ShellGetSpecialFolderPath($iCSIDL [, $bCreate = False])
_WinAPI_ShellGetStockIconInfo($iSIID, $iFlags)
_WinAPI_ShellILCreateFromPath($sFilePath)
_WinAPI_ShellNotifyIcon($iMessage, $tNOTIFYICONDATA)
_WinAPI_ShellNotifyIconGetRect($hWnd, $iID [, $tGUID = 0])
_WinAPI_ShellObjectProperties($sFilePath [, $iType = 2 [, $sProperty = '' [, $hParent = 0]]])
_WinAPI_ShellOpenFolderAndSelectItems($sFilePath [, $aNames = 0 [, $iStart = 0 [, $iEnd = -1 [, $iFlags = 0]]]])
_WinAPI_ShellQueryRecycleBin([$sRoot = ''])
_WinAPI_ShellQueryUserNotificationState()
_WinAPI_ShellRemoveLocalizedName($sFilePath)
_WinAPI_ShellRestricted($iRestriction)
_WinAPI_ShellSetKnownFolderPath($sGUID, $sFilePath [, $iFlags = 0 [, $hToken = 0]])
_WinAPI_ShellSetLocalizedName($sFilePath, $sModule, $iResID)
_WinAPI_ShellSetSettings($iFlags, $bSet)
_WinAPI_ShellUpdateImage($sIcon, $iIndex, $iImage [, $iFlags = 0])
#EndRegion
#Region ; ShellPath
#include <WinAPIShPath.au3>
_WinAPI_CommandLineToArgv($sCmd)
_WinAPI_IsNameInExpression($sString, $sPattern [, $bCaseSensitive = False])
_WinAPI_ParseURL($sUrl)
_WinAPI_ParseUserName($sUser)
_WinAPI_PathAddBackslash($sFilePath)
_WinAPI_PathAddExtension($sFilePath [, $sExt = ''])
_WinAPI_PathAppend($sFilePath, $sMore)
_WinAPI_PathBuildRoot($iDrive)
_WinAPI_PathCanonicalize($sFilePath)
_WinAPI_PathCommonPrefix($sPath1, $sPath2)
_WinAPI_PathCompactPath($hWnd, $sFilePath [, $iWidth = 0])
_WinAPI_PathCompactPathEx($sFilePath, $iMax)
_WinAPI_PathCreateFromUrl($sUrl)
_WinAPI_PathFindExtension($sFilePath)
_WinAPI_PathFindFileName($sFilePath)
_WinAPI_PathFindNextComponent($sFilePath)
_WinAPI_PathFindOnPath($sFilePath [, $aExtraPaths = "" [, $sPathDelimiter = @LF]])
_WinAPI_PathGetArgs($sFilePath)
_WinAPI_PathGetCharType($sChar)
_WinAPI_PathGetDriveNumber($sFilePath)
_WinAPI_PathIsContentType($sFilePath, $sType)
_WinAPI_PathIsExe($sFilePath)
_WinAPI_PathIsFileSpec($sFilePath)
_WinAPI_PathIsLFNFileSpec($sFilePath)
_WinAPI_PathIsRelative($sFilePath)
_WinAPI_PathIsRoot($sFilePath)
_WinAPI_PathIsSameRoot($sPath1, $sPath2)
_WinAPI_PathIsSystemFolder($sFilePath)
_WinAPI_PathIsUNC($sFilePath)
_WinAPI_PathIsUNCServer($sFilePath)
_WinAPI_PathIsUNCServerShare($sFilePath)
_WinAPI_PathMakeSystemFolder($sFilePath)
_WinAPI_PathMatchSpec($sFilePath, $sSpec)
_WinAPI_PathParseIconLocation($sFilePath)
_WinAPI_PathRelativePathTo($sPathFrom, $bDirFrom, $sPathTo, $bDirTo)
_WinAPI_PathRemoveArgs($sFilePath)
_WinAPI_PathRemoveBackslash($sFilePath)
_WinAPI_PathRemoveExtension($sFilePath)
_WinAPI_PathRemoveFileSpec($sFilePath)
_WinAPI_PathRenameExtension($sFilePath, $sExt)
_WinAPI_PathSearchAndQualify($sFilePath [, $bExists = False])
_WinAPI_PathSkipRoot($sFilePath)
_WinAPI_PathStripPath($sFilePath)
_WinAPI_PathStripToRoot($sFilePath)
_WinAPI_PathUndecorate($sFilePath)
_WinAPI_PathUnExpandEnvStrings($sFilePath)
_WinAPI_PathUnmakeSystemFolder($sFilePath)
_WinAPI_PathUnquoteSpaces($sFilePath)
_WinAPI_PathYetAnotherMakeUniqueName($sFilePath)
_WinAPI_ShellGetImageList([$bSmall = False])
_WinAPI_UrlApplyScheme($sUrl [, $iFlags = 1])
_WinAPI_UrlCanonicalize($sUrl, $iFlags)
_WinAPI_UrlCombine($sUrl, $sPart [, $iFlags = 0])
_WinAPI_UrlCompare($sUrl1, $sUrl2 [, $bIgnoreSlash = False])
_WinAPI_UrlCreateFromPath($sFilePath)
_WinAPI_UrlFixup($sUrl)
_WinAPI_UrlGetPart($sUrl, $iPart)
_WinAPI_UrlHash($sUrl [, $iLength = 32])
_WinAPI_UrlIs($sUrl [, $iType = 0])
#EndRegion
#Region ; System
#include <WinAPISys.au3>
; Administration
_WinAPI_LockWorkStation()
_WinAPI_ShutdownBlockReasonCreate($hWnd, $sText)
_WinAPI_ShutdownBlockReasonDestroy($hWnd)
_WinAPI_ShutdownBlockReasonQuery($hWnd)
; Automation
_WinAPI_CallNextHookEx($hHook, $iCode, $wParam, $lParam)
_WinAPI_SetWindowsHookEx($iEventMin, $iEventMax, $pEventProc [, $iPID = 0 [, $iThreadId = 0 [, $iFlags = 0]]])
_WinAPI_SetWinEventHook($iHook, $pProc, $hDll [, $iThreadId = 0])
_WinAPI_UnhookWindowsHookEx($hHook)
_WinAPI_UnhookWinEvent($hEventHook)
; Buffer
_WinAPI_CompressBuffer($pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormatAndEngine = 0x0002])
_WinAPI_ComputeCrc32($pMemory, $iLength)
_WinAPI_DecompressBuffer($pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormat = 0x0002])
; Clipboards
_WinAPI_AddClipboardFormatListener($hWnd)
_WinAPI_GetClipboardSequenceNumber()
_WinAPI_RemoveClipboardFormatListener($hWnd)
; Controls
_WinAPI_GetEffectiveClientRect($hWnd, $aCtrl [, $iStart = 0 [, $iEnd = -1]])
_WinAPI_GetMUILanguage()
_WinAPI_InitMUILanguage($iLanguage)
; DLLLib
_WinAPI_GetDllDirectory()
_WinAPI_GetModuleHandle($sModuleName)
_WinAPI_GetModuleHandleEx($sModule [, $iFlags = 0])
_WinAPI_GetProcAddress($hModule, $vName)
_WinAPI_SetDllDirectory([$sDirPath = Default])
#Region ; Heap
#include <WinAPIMem.au3>
_WinAPI_CreateBuffer($iLength [, $pBuffer = 0 [, $bAbort = True]])
_WinAPI_CreateBufferFromStruct($tStruct [, $pBuffer = 0 [, $bAbort = True]])
_WinAPI_CreateString($sString [, $pString = 0 [, $iLength = -1 [, $bUnicode = True [, $bAbort = True]]]])
_WinAPI_EqualMemory($pSource1, $pSource2, $iLength)
_WinAPI_FillMemory($pMemory, $iLength [, $iValue = 0])
_WinAPI_FreeMemory($pMemory)
_WinAPI_GetMemorySize($pMemory)
_WinAPI_GlobalMemoryStatus()
_WinAPI_IsBadCodePtr($pAddress)
_WinAPI_IsBadReadPtr($pAddress, $iLength)
_WinAPI_IsBadStringPtr($pAddress, $iLength)
_WinAPI_IsBadWritePtr($pAddress, $iLength)
_WinAPI_IsMemory($pMemory)
_WinAPI_LocalFree($hMemory)
_WinAPI_MoveMemory($pDestination, $pSource, $iLength)
_WinAPI_ReadProcessMemory($hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iRead)
_WinAPI_WriteProcessMemory($hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iWritten [, $sBufferType = "ptr"])
_WinAPI_ZeroMemory($pMemory, $iLength)
#EndRegion
; Power
_WinAPI_GetDefaultPrinter()
_WinAPI_GetPwrCapabilities()
_WinAPI_GetSystemPowerStatus()
_WinAPI_RegisterPowerSettingNotification($hWnd, $sGUID)
_WinAPI_SetDefaultPrinter($sPrinter)
_WinAPI_UnregisterPowerSettingNotification($hNotify)
#Region ; Station & Desktop
_WinAPI_CloseDesktop($hDesktop)
_WinAPI_CloseWindowStation($hStation)
_WinAPI_CreateDesktop($sName [, $iAccess = 0x0002 [, $iFlags = 0 [, $iHeap = 0 [, $tSecurity = 0]]]])
_WinAPI_CreateWindowStation([$sName = '' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]])
_WinAPI_EnumDesktops($hStation)
_WinAPI_EnumDesktopWindows($hDesktop [, $bVisible = True])
_WinAPI_EnumWindowStations()
_WinAPI_GetProcessWindowStation()
_WinAPI_GetUserObjectInformation($hObject, $iIndex)
_WinAPI_OpenDesktop($sName [, $iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]])
_WinAPI_OpenInputDesktop([$iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]])
_WinAPI_OpenWindowStation($sName [, $iAccess = 0 [, $bInherit = False]])
_WinAPI_SetProcessWindowStation($hStation)
_WinAPI_SetUserObjectInformation($hObject, $iIndex, $tData)
_WinAPI_SwitchDesktop($hDesktop)
#EndRegion
#Region ; SysInfo
_WinAPI_EnumPageFiles()
_WinAPI_ExpandEnvironmentStrings($sString)
_WinAPI_GetCurrentHwProfile()
_WinAPI_GetHandleInformation($hObject)
_WinAPI_GetPerformanceInfo()
_WinAPI_GetPhysicallyInstalledSystemMemory()
_WinAPI_GetProcessShutdownParameters()
_WinAPI_GetStartupInfo()
_WinAPI_GetSystemDEPPolicy()
_WinAPI_GetSystemInfo()
_WinAPI_GetSystemMetrics($iIndex)
_WinAPI_GetSystemTimes()
_WinAPI_GetSystemWow64Directory()
_WinAPI_GetTickCount()
_WinAPI_GetTickCount64()
_WinAPI_GetVersion()
_WinAPI_GetVersionEx()
_WinAPI_GetWorkArea()
_WinAPI_IsProcessorFeaturePresent($iFeature)
_WinAPI_QueryPerformanceCounter()
_WinAPI_QueryPerformanceFrequency()
_WinAPI_SetProcessShutdownParameters($iLevel [, $bDialog = False])
_WinAPI_SystemParametersInfo($iAction [, $iParam = 0 [, $vParam = 0 [, $iWinIni = 0]]])
#EndRegion
#Region ; User Keyboard Input
_WinAPI_ActivateKeyboardLayout($hLocale [, $iFlag = 0])
_WinAPI_EnableWindow($hWnd [, $bEnable = True])
_WinAPI_GetActiveWindow()
_WinAPI_GetAsyncKeyState($iKey)
_WinAPI_GetIdleTime()
_WinAPI_GetKeyboardLayout($hWnd)
_WinAPI_GetKeyboardLayoutList()
_WinAPI_GetKeyboardState()
_WinAPI_GetKeyboardType($iType)
_WinAPI_GetKeyNameText($lParam)
_WinAPI_GetKeyState($vKey)
_WinAPI_IsLoadKBLayout($iLanguage)
_WinAPI_Keybd_Event($vKey, $iFlags [, $iScanCode = 0 [, $iExtraInfo = 0]])
_WinAPI_LoadKeyboardLayout($iLanguage [, $iFlag = 0)
_WinAPI_MapVirtualKey($iCode, $iType [, $hLocale = 0])
_WinAPI_RegisterHotKey($hWnd, $iID, $iModifiers, $vKey)
_WinAPI_SetActiveWindow($hWnd)
_WinAPI_SetKeyboardLayout($hWnd, $iLanguage [, $iFlags = 0])
_WinAPI_SetKeyboardState($tState)
_WinAPI_TrackMouseEvent($hWnd, $iFlags [, $iTime = -1])
_WinAPI_UnloadKeyboardLayout($hLocale)
_WinAPI_UnregisterHotKey($hWnd, $iID)
#EndRegion
; User Mouse Input
_WinAPI_Mouse_Event($iFlags [, $iX = 0 [, $iY = 0 [, $iData = 0 [, $iExtraInfo = 0]]]])
_WinAPI_ReleaseCapture()
_WinAPI_SetCapture($hWnd)
; User Raw Input
_WinAPI_DefRawInputProc($paRawInput, $iInput)
_WinAPI_EnumRawInputDevices()
_WinAPI_GetRawInputBuffer($pBuffer, $iLength)
_WinAPI_GetRawInputBufferLength()
_WinAPI_GetRawInputData($hRawInput, $pBuffer, $iLength, $iFlag)
_WinAPI_GetRawInputDeviceInfo($hDevice, $pBuffer, $iLength, $iFlag)
_WinAPI_GetRegisteredRawInputDevices($pBuffer, $iLength)
_WinAPI_RegisterRawInputDevices($paDevice [, $iCount = 1])
#Region ; Windows
#include <WinAPISysWin.au3>
_WinAPI_AdjustWindowRectEx(ByRef $tRECT, $iStyle [, $iExStyle = 0 [, $bMenu = False]])
_WinAPI_AnimateWindow($hWnd, $iFlags [, $iDuration = 1000])
_WinAPI_BeginDeferWindowPos([$iAmount = 1])
_WinAPI_BringWindowToTop($hWnd)
_WinAPI_BroadcastSystemMessage($iMsg [, $wParam = 0 [, $lParam = 0 [, $iFlags = 0 [, $iRecipients = 0]]]])
_WinAPI_CallWindowProc($pPrevWndFunc, $hWnd, $iMsg, $wParam, $lParam)
_WinAPI_CallWindowProcW($pPrevWndProc, $hWnd, $iMsg, $wParam, $lParam)
_WinAPI_CascadeWindows($aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]])
_WinAPI_ChangeWindowMessageFilterEx($hWnd, $iMsg, $iAction)
_WinAPI_ChildWindowFromPointEx($hWnd, $tPOINT [, $iFlags = 0])
_WinAPI_CloseWindow($hWnd)
_WinAPI_CreateWindowEx($iExStyle, $sClass, $sName, $iStyle, $iX, $iY, $iWidth, $iHeight, $hParent [, $hMenu = 0 [, $hInstance = 0 [, $pParam = 0]]])
_WinAPI_DeferWindowPos($hInfo, $hWnd, $hAfter, $iX, $iY, $iWidth, $iHeight, $iFlags)
_WinAPI_DefWindowProc($hWnd, $iMsg, $wParam, $lParam)
_WinAPI_DefWindowProcW($hWnd, $iMsg, $wParam, $lParam)
_WinAPI_DeregisterShellHookWindow($hWnd)
_WinAPI_DestroyWindow($hWnd)
_WinAPI_DragAcceptFiles($hWnd [, $bAccept = True])
_WinAPI_DragFinish($hDrop)
_WinAPI_DragQueryFileEx($hDrop [, $iFlag = 0])
_WinAPI_DragQueryPoint($hDrop)
_WinAPI_EndDeferWindowPos($hInfo)
_WinAPI_EnumChildWindows($hWnd [, $bVisible = True])
_WinAPI_EnumWindows([$bVisible = True [, $hWnd = Default]])
_WinAPI_EnumWindowsPopup()
_WinAPI_EnumWindowsTop()
_WinAPI_FindWindow($sClassName, $sWindowName)
_WinAPI_FlashWindow($hWnd [, $bInvert = True])
_WinAPI_FlashWindowEx($hWnd [, $iFlags = 3 [, $iCount = 3 [, $iTimeout = 0]]])
_WinAPI_GetAncestor($hWnd [, $iFlags = 1])
_WinAPI_GetCapture()
_WinAPI_GetClassInfoEx($sClass [, $hInstance = 0])
_WinAPI_GetClassLongEx($hWnd, $iIndex)
_WinAPI_GetClassName($hWnd)
_WinAPI_GetClientHeight($hWnd)
_WinAPI_GetClientRect($hWnd)
_WinAPI_GetClientWidth($hWnd)
_WinAPI_GetDesktopWindow()
_WinAPI_GetDlgItem($hWnd, $iItemID)
_WinAPI_GetFocus()
_WinAPI_GetForegroundWindow()
_WinAPI_GetGUIThreadInfo($iThreadId)
_WinAPI_GetLastActivePopup($hWnd )
_WinAPI_GetLayeredWindowAttributes($hWnd, ByRef $iTransColor, ByRef $iTransGUI [, $bColorRef = False])
_WinAPI_GetMessageExtraInfo()
_WinAPI_GetParent($hWnd)
_WinAPI_GetParentProcess([$iPID = 0])
_WinAPI_GetShellWindow()
_WinAPI_GetSysColor($iIndex)
_WinAPI_GetTopWindow($hWnd)
_WinAPI_GetWindow($hWnd, $iCmd)
_WinAPI_GetWindowDC($hWnd)
_WinAPI_GetWindowDisplayAffinity($hWnd)
_WinAPI_GetWindowExt($hDC)
_WinAPI_GetWindowFileName($hWnd)
_WinAPI_GetWindowHeight($hWnd)
_WinAPI_GetWindowInfo($hWnd)
_WinAPI_GetWindowLong($hWnd, $iIndex)
_WinAPI_GetWindowOrg($hDC)
_WinAPI_GetWindowPlacement($hWnd)
_WinAPI_GetWindowRect($hWnd)
_WinAPI_GetWindowText($hWnd)
_WinAPI_GetWindowThreadProcessId($hWnd, ByRef $iPID)
_WinAPI_GetWindowWidth($hWnd)
_WinAPI_InProcess($hWnd, ByRef $hLastWnd)
_WinAPI_InvalidateRect($hWnd [, $tRECT = 0 [, $bErase = True]])
_WinAPI_IsChild($hWnd, $hWndParent)
_WinAPI_IsClassName($hWnd, $sClassName)
_WinAPI_IsHungAppWindow($hWnd)
_WinAPI_IsIconic($hWnd)
_WinAPI_IsWindow($hWnd)
_WinAPI_IsWindowEnabled($hWnd)
_WinAPI_IsWindowUnicode($hWnd)
_WinAPI_IsWindowVisible($hWnd)
_WinAPI_IsZoomed($hWnd)
_WinAPI_KillTimer($hWnd, $iTimerID)
_WinAPI_MoveWindow($hWnd, $iX, $iY, $iWidth, $iHeight [, $bRepaint = True])
_WinAPI_OpenIcon($hWnd)
_WinAPI_PostMessage($hWnd, $iMsg, $wParam, $lParam)
_WinAPI_RegisterClass($tWNDCLASS)
_WinAPI_RegisterClassEx($tWNDCLASSEX)
_WinAPI_RegisterShellHookWindow($hWnd)
_WinAPI_RegisterWindowMessage($sMessage)
_WinAPI_SendMessageTimeout($hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iTimeout = 1000 [, $iFlags = 0]]]])
_WinAPI_SetClassLongEx($hWnd, $iIndex, $iNewLong)
_WinAPI_SetFocus($hWnd)
_WinAPI_SetFont($hWnd, $hFont [, $bRedraw = True])
_WinAPI_SetForegroundWindow($hWnd)
_WinAPI_SetLayeredWindowAttributes($hWnd, $iTransColor [, $iTransGUI = 255 [, $iFlags = 0x03 [, $bColorRef = False]]])
_WinAPI_SetMessageExtraInfo($lParam)
_WinAPI_SetParent($hWndChild, $hWndParent)
_WinAPI_SetSysColors($vElements, $vColors)
_WinAPI_SetTimer($hWnd, $iTimerID, $iElapse, $pTimerFunc)
_WinAPI_SetWindowDisplayAffinity($hWnd, $iAffinity)
_WinAPI_SetWindowLong($hWnd, $iIndex, $iValue)
_WinAPI_SetWindowPlacement($hWnd, $tWindowPlacement)
_WinAPI_SetWindowPos($hWnd, $hAfter, $iX, $iY, $iCX, $iCY, $iFlags)
_WinAPI_SetWindowText($hWnd, $sText)
_WinAPI_ShowOwnedPopups($hWnd, $bShow)
_WinAPI_ShowWindow($hWnd [, $iCmdShow = 5])
_WinAPI_SwitchToThisWindow($hWnd [, $bAltTab = False])
_WinAPI_TileWindows($aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]])
_WinAPI_UnregisterClass($sClass [, $hInstance = 0])
_WinAPI_UpdateLayeredWindow($hWnd, $hDestDC, $tPTDest, $tSize, $hSrcDC, $tPTSrce, $iRGB, $tBlend, $iFlags)
_WinAPI_UpdateLayeredWindowEx($hWnd, $iX, $iY, $hBitmap [, $iOpacity = 255 [, $bDelete = False]])
_WinAPI_UpdateLayeredWindowIndirect($hWnd, $tULWINFO)
_WinAPI_UpdateWindow($hWnd)
_WinAPI_WindowFromPoint(ByRef $tPOINT)
#EndRegion
#EndRegion
#Region ; Theme
#include <WinAPITheme.au3>
_WinAPI_BeginBufferedPaint($hDC, $tTarget, ByRef $hNewDC [, $iFormat = 0 [, $iFlags = 0 [, $tExclude = 0 [, $iAlpha = -1]]]])
_WinAPI_BufferedPaintClear($hBP [, $tRECT = 0])
_WinAPI_BufferedPaintInit()
_WinAPI_BufferedPaintSetAlpha($hBP [, $iAlpha = 255 [, $tRECT = 0]])
_WinAPI_BufferedPaintUnInit()
_WinAPI_CloseThemeData($hTheme)
_WinAPI_DrawThemeBackground($hTheme, $iPartID, $iStateID, $hDC, $tRECT [, $tCLIP = 0])
_WinAPI_DrawThemeEdge($hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iEdge, $iFlags [, $tAREA = 0])
_WinAPI_DrawThemeIcon($hTheme, $iPartID, $iStateID, $hDC, $tRECT, $hIL, $iIndex)
_WinAPI_DrawThemeParentBackground($hWnd, $hDC [, $tRECT = 0])
_WinAPI_DrawThemeText($hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags)
_WinAPI_DrawThemeTextEx($hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags, $tDTTOPTS)
_WinAPI_EndBufferedPaint($hBP [, $bUpdate = True])
_WinAPI_GetBufferedPaintBits($hBP)
_WinAPI_GetBufferedPaintDC($hBP)
_WinAPI_GetBufferedPaintTargetDC($hBP)
_WinAPI_GetBufferedPaintTargetRect($hBP)
_WinAPI_GetCurrentThemeName()
_WinAPI_GetThemeAppProperties()
_WinAPI_GetThemeBackgroundContentRect($hTheme, $iPartID, $iStateID, $hDC, $tRECT)
_WinAPI_GetThemeBackgroundExtent($hTheme, $iPartID, $iStateID, $hDC, $tRECT)
_WinAPI_GetThemeBackgroundRegion($hTheme, $iPartID, $iStateID, $hDC, $tRECT)
_WinAPI_GetThemeBitmap($hTheme, $iPartID, $iStateID, $iPropID [, $iFlag = 0x01])
_WinAPI_GetThemeBool($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeColor($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeDocumentationProperty($sFilePath, $sProperty)
_WinAPI_GetThemeEnumValue($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeFilename($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeFont($hTheme, $iPartID, $iStateID, $iPropID [, $hDC = 0])
_WinAPI_GetThemeInt($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeMargins($hTheme, $iPartID, $iStateID, $iPropID, $hDC, $tRECT)
_WinAPI_GetThemeMetric($hTheme, $iPartID, $iStateID, $iPropID [, $hDC = 0])
_WinAPI_GetThemePartSize($hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iType)
_WinAPI_GetThemePosition($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemePropertyOrigin($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeRect($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeString($hTheme, $iPartID, $iStateID, $iPropID)
_WinAPI_GetThemeSysBool($hTheme, $iBoolID)
_WinAPI_GetThemeSysColor($hTheme, $iColorID)
_WinAPI_GetThemeSysColorBrush($hTheme, $iColorID)
_WinAPI_GetThemeSysFont($hTheme, $iFontID)
_WinAPI_GetThemeSysInt($hTheme, $iIntID)
_WinAPI_GetThemeSysSize($hTheme, $iSizeID)
_WinAPI_GetThemeSysString($hTheme, $iStringID)
_WinAPI_GetThemeTextExtent($hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags)
_WinAPI_GetThemeTextMetrics($hTheme, $iPartID, $iStateID [, $hDC = 0])
_WinAPI_GetThemeTransitionDuration($hTheme, $iPartID, $iStateIDFrom, $iStateIDTo, $iPropID)
_WinAPI_GetWindowTheme($hWnd)
_WinAPI_IsThemeActive()
_WinAPI_IsThemeBackgroundPartiallyTransparent($hTheme, $iPartID, $iStateID)
_WinAPI_IsThemePartDefined($hTheme, $iPartID)
_WinAPI_OpenThemeData($hWnd, $sClass)
_WinAPI_SetThemeAppProperties($iFlags)
_WinAPI_SetWindowTheme($hWnd [, $sName = Default [, $sList = Default]])
#EndRegion
#EndRegion
#Region ; WinNet
#include <WinNet.au3>
_WinNet_AddConnection($sLocalName, $sRemoteName [, $sPassword = 0])
_WinNet_AddConnection2($sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
_WinNet_AddConnection3($hWnd, $sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
_WinNet_CancelConnection($sName [, $bForce = True])
_WinNet_CancelConnection2($sName [, $bUpdate = True [, $bForce = True]])
_WinNet_CloseEnum($hEnum)
_WinNet_ConnectionDialog($hWnd)
_WinNet_ConnectionDialog1($hWnd [, $sRemoteName = "" [, $iFlags = 2]])
_WinNet_DisconnectDialog($hWnd)
_WinNet_DisconnectDialog1($hWnd, $sLocalName [, $sRemoteName = "" [, $iFlags = 1]])
_WinNet_EnumResource($hEnum, ByRef $iCount, $pBuffer, ByRef $iBufSize)
_WinNet_GetConnection($sLocalName)
_WinNet_GetConnectionPerformance($sLocalName, $sRemoteName)
_WinNet_GetLastError(ByRef $iError, ByRef $sError, ByRef $sName)
_WinNet_GetNetworkInformation($sName)
_WinNet_GetProviderName($iType)
_WinNet_GetResourceInformation($sRemoteName [, $sProvider = "" [, $iType = 0]])
_WinNet_GetResourceParent($sRemoteName, $sProvider [, $iType = 0])
_WinNet_GetUniversalName($sLocalPath)
_WinNet_GetUser($sName)
_WinNet_OpenEnum($iScope, $iType, $iUsage, $tResource, ByRef $hEnum)
_WinNet_RestoreConnection([$sDevice = "" [, $hWnd = 0 [, $bUseUI = True]]])
_WinNet_UseConnection($hWnd, $sLocalName, $sRemoteName [, $sUserName = 0 [, $sPassword = 0 [, $iType = 1 [, $iOptions = 1]]]])
#EndRegion
#Region ; Word
#include <Word.au3>
_Word_Create([$bVisible = True [, $bForceNew = False]])
_Word_DocAdd($oAppl [, $iDocumentType = $WdNewBlankDocument [, $sDocumentTemplate = "" [, $bNewTemplate = False]]])
_Word_DocAttach($oAppl, $sString [, $sMode = "FilePath" [, $iCase = 0]])
_Word_DocClose($oDoc [, $iSaveChanges = $WdDoNotSaveChanges [, $iOriginalFormat = $WdOriginalDocumentFormat]])
_Word_DocExport($oDoc, $sFileName [, $iFormat = $WdExportFormatPDF [, $iRange = $WdExportAllDocument [, $iFrom = Default [, $iTo = Default [, $bOpenAfterExport = False [, $bIncludeProperties = True [, $iCreateBookmarks = Default [, $bUseISO19005 = False]]]]]]]])
_Word_DocFind($oDoc [, $sFindText = "" [, $vSearchRange = 0 [, $oFindRange = Default [, $bForward = True [, $bMatchCase = False [, $bMatchWholeWord = False [, $bMatchWildcards = False [, $bMatchSoundsLike = False [, $bMatchAllWordForms = False [, $bFormat = False]]]]]]]]]])
_Word_DocFindReplace($oDoc [, $sFindText = "" [, $sReplaceWith = "" [, $iReplace = $WdReplaceAll [, $vSearchRange = 0 [, $bMatchCase = False [, $bMatchWholeWord = False [, $bMatchWildcards = False [, $bMatchSoundsLike = False [, $bMatchAllWordForms = False [, $bForward = True [, $iWrap = $WdFindContinue [, $bFormat = False]]]]]]]]]]]])
_Word_DocGet($oAppl [, $vIndex = -1])
_Word_DocLinkAdd($oDoc [, $oAnchor = Default [, $sAddress = Default [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default [, $sTarget = Default]]]]]])
_Word_DocLinkGet($oDoc [, $iIndex = Default])
_Word_DocOpen($oAppl, $sFilePath [, $bConfirmConversions = False [, $iFormat = $WdOpenFormatAuto [, $bReadOnly = False [, $bRevert = False [, $bAddToRecentFiles = False [, $sOpenPassword = "" [, $sWritePassword = ""]]]]]]])
_Word_DocPictureAdd($oDoc, $sFilePath [, $bLinkToFile = False [, $bSaveWithDocument = False [, $oRange = 0]]])
_Word_DocPrint($oDoc [, $bBackground = False [, $iCopies = 1 [, $iOrientation = -1 [, $bCollate = True [, $sPrinter = "" [, $iRange = $WdPrintAllDocument [, $vFrom = 0 [, $vTo = 0 [, $sPages = "" [, $iPageType = $WdPrintAllPages [, $iItem = $WdPrintDocumentContent]]]]]]]]]]])
_Word_DocRangeSet($oDoc, $vRange [, $iStartUnit = Default [, $iStartCount = Default [, $iEndUnit = Default [, $iEndCount = Default]]]])
_Word_DocSave($oDoc)
_Word_DocSaveAs($oDoc [, $sFileName = Default [, $iFileFormat = $WdFormatDocument [, $bReadOnlyRecommended = False [, $bAddToRecentFiles = True [, $sPassword = "" [, $sWritePassword = ""]]]]]])
_Word_DocTableRead($oDoc, $vTable [, $iIndexBase = Default [, $sDelimiter = Default]])
_Word_DocTableWrite($oRange, ByRef $aArray [, $iIndexBase = Default [, $sDelimiter = Default]])
_Word_Quit($oAppl [, $iSaveChanges = $WdDoNotSaveChanges [, $iOriginalFormat = $WdWordDocument [, $bForceClose = False]]])
#EndRegion

;! misc				===========================================================
; AutoItSetOption()
CaretCoordMode
ExpandEnvStrings
ExpandVarStrings
GUICloseOnESC
GUICoordMode
GUIDataSeparatorChar
GUIOnEventMode
GUIResizeMode
GUIEventOptions
MouseClickDelay
MouseClickDownDelay
MouseClickDragDelay
MouseCoordMode
MustDeclareVars
PixelCoordMode
SendAttachMode
SendCapslockMode
SendKeyDelay
SendKeyDownDelay
SetExitCode
TCPTimeout
TrayAutoPause
TrayIconDebug
TrayIconHide
TrayMenuMode
TrayOnEventMode
WinDetectHiddenText
WinSearchChildren
WinTextMatchMode
WinTitleMatchMode
WinWaitDelay
